FrT;@1|>>0|$15|HeaderDoc::Test%22|$4|CODE$7|COMMENT$7|CPPCODE$15|EXPECTED_RESULT$23|EXPECTED_RESULT_ALLDECS$7|FAILMSG$8|FILENAME$4|LANG$4|NAME$7|SUBLANG$4|TYPE$172|class ampersand_test_class_t
{
/*! @function testfunc
        @param blah This is blah.
*/
int testfunc(struct test &blah);

/*! operator */
foo_t operator &(foo_t &a);
};
$13|/*! class */
$0|$17476|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 0
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 1
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/class_2.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/class_2.test
$parserState->{ISFORWARDDECLARATION} => 0
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => -1
$parserState->{categoryClass} => 
$parserState->{classNameFound} => 1
$parserState->{classtype} => class
$parserState->{forceClassDone} => 1
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 8
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => ;
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 2
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 1
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => class
$parserState->{returntype} => class ampersand_test_class_t  
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => ampersand_test_class_t
$parserState->{sodtype} => 
$parserState->{sodtypeclasstoken} => class
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 1
$parserState->{storeDec} => 
$parserState->{sublang} => C
$parserState->{temponlyComments} => 0
$parserState->{treePopTwo} => 0
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 8
typelist: class
namelist: ampersand_test_class_t
posstypes: 
value: 
returntype: 
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 2
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---class
+--- 
+---ampersand_test_class_t
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function testfunc
|   |   +---
@param blah This is blah.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-int (HAS STATE)
|   +--- 
|   +---testfunc
|   +---(
|   |   +---struct
|   |   +--- 
|   |   +---test
|   |   +--- 
|   |   +---&
|   |   +---blah
|   |   +---)
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- operator 
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-foo_t (HAS STATE)
|   +--- 
|   +---operator
|   +--- 
|   +---&
|   +---(
|   |   +---foo_t
|   |   +--- 
|   |   +---&
|   |   +---a
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: class_2
APIUID: //test_ref/doc/header/class_2.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: 
LONG ATTRIBUTES: 
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::CPPClass
    NAME: ampersand_test_class_t
    APIUID: 
    ABSTRACT: ""
    DISCUSSION: "<p>class "
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::CPPClass"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "0"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Declared In</b></p><p><a href="../../index.html" logicalPath="//test_ref/doc/header/class_2.test" target="_top" machineGenerated="true">class_2</a></p>

    LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: testfunc
        APIUID: //test_ref/cpp/instm/ampersand_test_class_t/testfunc/int/(structtest%26)
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " int"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: blah
            TYPE: struct test &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: blah
            TYPE: 
            APIUID: //test_ref/doc/functionparam/ampersand_test_class_t/testfunc/blah
            ABSTRACT: ""
            DISCUSSION: "<p>This is blah."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator &
        APIUID: //test_ref/cpp/instm/ampersand_test_class_t/operator%26/foo_t/(foo_t%26)
        ABSTRACT: ""
        DISCUSSION: "<p>operator "
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "foo_t"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: a
            TYPE: foo_t &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: ampersand_test_class_t (HeaderDoc::CPPClass)
+---class
+--- 
+---ampersand_test_class_t
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function testfunc
|   |   +---
@param blah This is blah.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-int (HAS STATE)
|   +--- 
|   +---testfunc
|   +---(
|   |   +---struct
|   |   +--- 
|   |   +---test
|   |   +--- 
|   |   +---&
|   |   +---blah
|   |   +---)
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- operator 
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-foo_t (HAS STATE)
|   +--- 
|   +---operator
|   +--- 
|   +---&
|   +---(
|   |   +---foo_t
|   |   +--- 
|   |   +---&
|   |   +---a
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
END OF OBJECT


OBJECT: testfunc (HeaderDoc::Function)
+-*-int (HAS STATE)
+--- 
+---testfunc
+---(
|   +---struct
|   +--- 
|   +---test
|   +--- 
|   +---&
|   +---blah
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- operator 
|   +---*/
+---[ NEWLINE ]
+-*-foo_t (HAS STATE)
+--- 
+---operator
+--- 
+---&
+---(
|   +---foo_t
|   +--- 
|   +---&
|   +---a
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator & (HeaderDoc::Function)
+-*-foo_t (HAS STATE)
+--- 
+---operator
+--- 
+---&
+---(
|   +---foo_t
|   +--- 
|   +---&
|   +---a
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---}
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: ampersand_test_class_t (HeaderDoc::CPPClass)
	<span class="keyword">class</span> <!-- a logicalPath="//test_ref/cpp/cl/ampersand_test_class_t //test_ref/cpp/tdef/ampersand_test_class_t //test_ref/cpp/tag/ampersand_test_class_t //test_ref/cpp/struct/ampersand_test_class_t //test_ref/cpp/intf/ampersand_test_class_t //test_ref/doc/anysymbol/ampersand_test_class_t" machineGenerated="true" --><span class="type">ampersand_test_class_t</span><!-- /a --> { 
	    <span class="comment">/*! @function testfunc
	@param blah This is blah.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/int //test_ref/cpp/tdef/int //test_ref/cpp/tag/int //test_ref/cpp/struct/int //test_ref/cpp/intf/int //test_ref/doc/anysymbol/int" machineGenerated="true" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/testfunc //test_ref/cpp/clm/testfunc //test_ref/cpp/intfcm/testfunc //test_ref/cpp/intfm/testfunc //test_ref/cpp/func/testfunc //test_ref/cpp/ftmplt/testfunc //test_ref/cpp/defn/testfunc //test_ref/cpp/macro/testfunc //test_ref/doc/anysymbol/testfunc" machineGenerated="true" --><span class="function">testfunc</span><!-- /a -->(
	        <span class="keyword">struct</span> <!-- a logicalPath="//test_ref/cpp/cl/test //test_ref/cpp/tdef/test //test_ref/cpp/tag/test //test_ref/cpp/struct/test //test_ref/cpp/intf/test //test_ref/doc/anysymbol/test" machineGenerated="true" --><span class="type">test</span><!-- /a --> &amp;<span class="param">blah</span>);  
	    <span class="comment">/*! operator */</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/foo_t //test_ref/cpp/tdef/foo_t //test_ref/cpp/tag/foo_t //test_ref/cpp/struct/foo_t //test_ref/cpp/intf/foo_t //test_ref/doc/anysymbol/foo_t" machineGenerated="true" --><span class="type">foo_t</span><!-- /a --> <span class="keyword">operator</span> &amp;(
	        <!-- a logicalPath="//test_ref/cpp/cl/foo_t //test_ref/cpp/tdef/foo_t //test_ref/cpp/tag/foo_t //test_ref/cpp/struct/foo_t //test_ref/cpp/intf/foo_t //test_ref/doc/anysymbol/foo_t" machineGenerated="true" --><span class="type">foo_t</span><!-- /a --> &amp;<span class="param">a</span>); 
	};  
END OF OBJECT


OBJECT: testfunc (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/int //test_ref/cpp/tdef/int //test_ref/cpp/tag/int //test_ref/cpp/struct/int //test_ref/cpp/intf/int //test_ref/doc/anysymbol/int" machineGenerated="true" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/ampersand_test_class_t/testfunc //test_ref/cpp/clm/ampersand_test_class_t/testfunc //test_ref/cpp/intfcm/ampersand_test_class_t/testfunc //test_ref/cpp/intfm/ampersand_test_class_t/testfunc //test_ref/cpp/func/testfunc //test_ref/cpp/ftmplt/ampersand_test_class_t/testfunc //test_ref/cpp/defn/testfunc //test_ref/cpp/macro/testfunc //test_ref/doc/anysymbol/testfunc" machineGenerated="true" --><span class="function">testfunc</span><!-- /a -->(
	    <span class="keyword">struct</span> <!-- a logicalPath="//test_ref/cpp/cl/test //test_ref/cpp/tdef/test //test_ref/cpp/tag/test //test_ref/cpp/struct/test //test_ref/cpp/intf/test //test_ref/doc/anysymbol/test" machineGenerated="true" --><span class="type">test</span><!-- /a --> &amp;<span class="param">blah</span>); 
END OF OBJECT


OBJECT: operator & (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/foo_t //test_ref/cpp/tdef/foo_t //test_ref/cpp/tag/foo_t //test_ref/cpp/struct/foo_t //test_ref/cpp/intf/foo_t //test_ref/doc/anysymbol/foo_t" machineGenerated="true" --><span class="type">foo_t</span><!-- /a --> <span class="keyword">operator</span> &amp;(
	    <!-- a logicalPath="//test_ref/cpp/cl/foo_t //test_ref/cpp/tdef/foo_t //test_ref/cpp/tag/foo_t //test_ref/cpp/struct/foo_t //test_ref/cpp/intf/foo_t //test_ref/doc/anysymbol/foo_t" machineGenerated="true" --><span class="type">foo_t</span><!-- /a --> &amp;<span class="param">a</span>); 
END OF OBJECT



$17476|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 0
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 1
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/class_2.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/class_2.test
$parserState->{ISFORWARDDECLARATION} => 0
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => -1
$parserState->{categoryClass} => 
$parserState->{classNameFound} => 1
$parserState->{classtype} => class
$parserState->{forceClassDone} => 1
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 8
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => ;
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 2
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 1
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => class
$parserState->{returntype} => class ampersand_test_class_t  
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => ampersand_test_class_t
$parserState->{sodtype} => 
$parserState->{sodtypeclasstoken} => class
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 1
$parserState->{storeDec} => 
$parserState->{sublang} => C
$parserState->{temponlyComments} => 0
$parserState->{treePopTwo} => 0
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 8
typelist: class
namelist: ampersand_test_class_t
posstypes: 
value: 
returntype: 
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 2
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---class
+--- 
+---ampersand_test_class_t
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function testfunc
|   |   +---
@param blah This is blah.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-int (HAS STATE)
|   +--- 
|   +---testfunc
|   +---(
|   |   +---struct
|   |   +--- 
|   |   +---test
|   |   +--- 
|   |   +---&
|   |   +---blah
|   |   +---)
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- operator 
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-foo_t (HAS STATE)
|   +--- 
|   +---operator
|   +--- 
|   +---&
|   +---(
|   |   +---foo_t
|   |   +--- 
|   |   +---&
|   |   +---a
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: class_2
APIUID: //test_ref/doc/header/class_2.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: 
LONG ATTRIBUTES: 
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::CPPClass
    NAME: ampersand_test_class_t
    APIUID: 
    ABSTRACT: ""
    DISCUSSION: "<p>class "
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::CPPClass"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "0"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Declared In</b></p><p><a href="../../index.html" logicalPath="//test_ref/doc/header/class_2.test" target="_top" machineGenerated="true">class_2</a></p>

    LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: testfunc
        APIUID: //test_ref/cpp/instm/ampersand_test_class_t/testfunc/int/(structtest%26)
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " int"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: blah
            TYPE: struct test &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: blah
            TYPE: 
            APIUID: //test_ref/doc/functionparam/ampersand_test_class_t/testfunc/blah
            ABSTRACT: ""
            DISCUSSION: "<p>This is blah."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator &
        APIUID: //test_ref/cpp/instm/ampersand_test_class_t/operator%26/foo_t/(foo_t%26)
        ABSTRACT: ""
        DISCUSSION: "<p>operator "
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "foo_t"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: a
            TYPE: foo_t &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: ampersand_test_class_t (HeaderDoc::CPPClass)
+---class
+--- 
+---ampersand_test_class_t
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function testfunc
|   |   +---
@param blah This is blah.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-int (HAS STATE)
|   +--- 
|   +---testfunc
|   +---(
|   |   +---struct
|   |   +--- 
|   |   +---test
|   |   +--- 
|   |   +---&
|   |   +---blah
|   |   +---)
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- operator 
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-foo_t (HAS STATE)
|   +--- 
|   +---operator
|   +--- 
|   +---&
|   +---(
|   |   +---foo_t
|   |   +--- 
|   |   +---&
|   |   +---a
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
END OF OBJECT


OBJECT: testfunc (HeaderDoc::Function)
+-*-int (HAS STATE)
+--- 
+---testfunc
+---(
|   +---struct
|   +--- 
|   +---test
|   +--- 
|   +---&
|   +---blah
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- operator 
|   +---*/
+---[ NEWLINE ]
+-*-foo_t (HAS STATE)
+--- 
+---operator
+--- 
+---&
+---(
|   +---foo_t
|   +--- 
|   +---&
|   +---a
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator & (HeaderDoc::Function)
+-*-foo_t (HAS STATE)
+--- 
+---operator
+--- 
+---&
+---(
|   +---foo_t
|   +--- 
|   +---&
|   +---a
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---}
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: ampersand_test_class_t (HeaderDoc::CPPClass)
	<span class="keyword">class</span> <!-- a logicalPath="//test_ref/cpp/cl/ampersand_test_class_t //test_ref/cpp/tdef/ampersand_test_class_t //test_ref/cpp/tag/ampersand_test_class_t //test_ref/cpp/struct/ampersand_test_class_t //test_ref/cpp/intf/ampersand_test_class_t //test_ref/doc/anysymbol/ampersand_test_class_t" machineGenerated="true" --><span class="type">ampersand_test_class_t</span><!-- /a --> { 
	    <span class="comment">/*! @function testfunc
	@param blah This is blah.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/int //test_ref/cpp/tdef/int //test_ref/cpp/tag/int //test_ref/cpp/struct/int //test_ref/cpp/intf/int //test_ref/doc/anysymbol/int" machineGenerated="true" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/testfunc //test_ref/cpp/clm/testfunc //test_ref/cpp/intfcm/testfunc //test_ref/cpp/intfm/testfunc //test_ref/cpp/func/testfunc //test_ref/cpp/ftmplt/testfunc //test_ref/cpp/defn/testfunc //test_ref/cpp/macro/testfunc //test_ref/doc/anysymbol/testfunc" machineGenerated="true" --><span class="function">testfunc</span><!-- /a -->(
	        <span class="keyword">struct</span> <!-- a logicalPath="//test_ref/cpp/cl/test //test_ref/cpp/tdef/test //test_ref/cpp/tag/test //test_ref/cpp/struct/test //test_ref/cpp/intf/test //test_ref/doc/anysymbol/test" machineGenerated="true" --><span class="type">test</span><!-- /a --> &amp;<span class="param">blah</span>);  
	    <span class="comment">/*! operator */</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/foo_t //test_ref/cpp/tdef/foo_t //test_ref/cpp/tag/foo_t //test_ref/cpp/struct/foo_t //test_ref/cpp/intf/foo_t //test_ref/doc/anysymbol/foo_t" machineGenerated="true" --><span class="type">foo_t</span><!-- /a --> <span class="keyword">operator</span> &amp;(
	        <!-- a logicalPath="//test_ref/cpp/cl/foo_t //test_ref/cpp/tdef/foo_t //test_ref/cpp/tag/foo_t //test_ref/cpp/struct/foo_t //test_ref/cpp/intf/foo_t //test_ref/doc/anysymbol/foo_t" machineGenerated="true" --><span class="type">foo_t</span><!-- /a --> &amp;<span class="param">a</span>); 
	};  
END OF OBJECT


OBJECT: testfunc (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/int //test_ref/cpp/tdef/int //test_ref/cpp/tag/int //test_ref/cpp/struct/int //test_ref/cpp/intf/int //test_ref/doc/anysymbol/int" machineGenerated="true" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/ampersand_test_class_t/testfunc //test_ref/cpp/clm/ampersand_test_class_t/testfunc //test_ref/cpp/intfcm/ampersand_test_class_t/testfunc //test_ref/cpp/intfm/ampersand_test_class_t/testfunc //test_ref/cpp/func/testfunc //test_ref/cpp/ftmplt/ampersand_test_class_t/testfunc //test_ref/cpp/defn/testfunc //test_ref/cpp/macro/testfunc //test_ref/doc/anysymbol/testfunc" machineGenerated="true" --><span class="function">testfunc</span><!-- /a -->(
	    <span class="keyword">struct</span> <!-- a logicalPath="//test_ref/cpp/cl/test //test_ref/cpp/tdef/test //test_ref/cpp/tag/test //test_ref/cpp/struct/test //test_ref/cpp/intf/test //test_ref/doc/anysymbol/test" machineGenerated="true" --><span class="type">test</span><!-- /a --> &amp;<span class="param">blah</span>); 
END OF OBJECT


OBJECT: operator & (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/foo_t //test_ref/cpp/tdef/foo_t //test_ref/cpp/tag/foo_t //test_ref/cpp/struct/foo_t //test_ref/cpp/intf/foo_t //test_ref/doc/anysymbol/foo_t" machineGenerated="true" --><span class="type">foo_t</span><!-- /a --> <span class="keyword">operator</span> &amp;(
	    <!-- a logicalPath="//test_ref/cpp/cl/foo_t //test_ref/cpp/tdef/foo_t //test_ref/cpp/tag/foo_t //test_ref/cpp/struct/foo_t //test_ref/cpp/intf/foo_t //test_ref/doc/anysymbol/foo_t" machineGenerated="true" --><span class="type">foo_t</span><!-- /a --> &amp;<span class="param">a</span>); 
END OF OBJECT



_$89|/Users/dg/headerdoc-techpubs/Modules/HeaderDoc//../../testsuite/parser_tests/class_2.test$1|C$7|class_2$1|C$6|parser