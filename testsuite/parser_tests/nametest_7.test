FrT;@1|>>0|$15|HeaderDoc::Test%22|$4|CODE$7|COMMENT$7|CPPCODE$15|EXPECTED_RESULT$23|EXPECTED_RESULT_ALLDECS$7|FAILMSG$8|FILENAME$4|LANG$4|NAME$7|SUBLANG$4|TYPE$79|struct foo_td_struct {
        int a;
};
typedef struct foo_td_struct *foo_td;
$352|/*! @typedef foo_td
        This is the foo typedef and associated foo_td_struct.

        Note that the foo_td_struct should NOT appear in the
        Structs section as a foo_td entry.  It should appear
        only as a foo_td_struct entry under structs and as
        a foo_td entry under typedefs.
        @abstract foo typedef abstract here.
 */
$0|$9889|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 0
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 1
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 0
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/nametest_7.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/nametest_7.test
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => struct
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => -1
$parserState->{categoryClass} => 
$parserState->{classtype} => 
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 0
$parserState->{inComment} => 0
$parserState->{inEnum} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{inUnion} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 3
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => ;
$parserState->{macroNoTrunc} => 1
$parserState->{name} => foo_td_struct
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 2
$parserState->{onlyComments} => 0
$parserState->{parsedParamAtBrace} => ARRAY(OBJID)
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 1
$parserState->{parsedParamStateAtBrace} => ARRAY(OBJID)
$parserState->{posstypes} =>  struct
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{returntype} =>  struct foo_td_struct {
         int 
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => 
$parserState->{sodname} => 
$parserState->{sodtype} => 
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 1
$parserState->{sublang} => C
$parserState->{temponlyComments} => 0
$parserState->{treePopTwo} => 0
$parserState->{typestring} => struct
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 3
typelist: struct
namelist: foo_td_struct
posstypes:  struct
value: 
returntype:  struct foo_td_struct {         int 
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 0
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
Parsed Param 0 => int a
-=: DUMP OF PARSE TREE :=-
+---struct
+--- 
+---foo_td_struct
+--- 
+---{
|   +---[ NEWLINE ]
|   +---        
|   +---int
|   +--- 
|   +---a
|   +---;
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: nametest_7
APIUID: //test_ref/doc/header/nametest_7.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: 
LONG ATTRIBUTES: 
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::Typedef
    NAME: foo_td
    APIUID: //test_ref/c/tdef/foo_td
    ABSTRACT: "<p>foo typedef abstract here.
"
    DISCUSSION: "<p>This is the foo typedef and associated foo_td_struct.
</p>
<p>Note that the foo_td_struct should NOT appear in the
Structs section as a foo_td entry.  It should appear
only as a foo_td_struct entry under structs and as
a foo_td entry under typedefs."
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::Typedef"
    MASTERENUM: "0"
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "0"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: <p><b>See Also</b></p><div class='list_indent'><dl>
<dt><p><hd_link posstarget="//test_ref/c/tag/foo_td_struct">foo_td_struct</hd_link></p></dt><dd></dd></dl></div>

    SHORT ATTRIBUTES: 
    LONG ATTRIBUTES: 
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::Struct
    NAME: foo_td_struct
    APIUID: //test_ref/c/tag/foo_td_struct
    ABSTRACT: "<p>foo typedef abstract here.
"
    DISCUSSION: "<p>This is the foo typedef and associated foo_td_struct.
</p>
<p>Note that the foo_td_struct should NOT appear in the
Structs section as a foo_td entry.  It should appear
only as a foo_td_struct entry under structs and as
a foo_td entry under typedefs."
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::Struct"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: <p><b>See Also</b></p><div class='list_indent'><dl>
<dt><p><hd_link posstarget="//test_ref/c/tdef/foo_td">foo_td</hd_link></p></dt><dd></dd></dl></div>

    SHORT ATTRIBUTES: 
    LONG ATTRIBUTES: 
    PARSED PARAMETERS:
        TREE COUNT: 0
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::MinorAPIElement
        NAME: a
        TYPE: int
        APIUID: 
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: ""
        LINENUM: ""
        CLASS: "HeaderDoc::MinorAPIElement"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: ""
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: foo_td (HeaderDoc::Typedef)
+---typedef
+--- 
+---struct
+--- 
+---foo_td_struct
+--- 
+---*
+---foo_td
+---;
+--- 
+---[ NEWLINE ]
END OF OBJECT


OBJECT: foo_td_struct (HeaderDoc::Struct)
+---struct
+--- 
+---foo_td_struct
+--- 
+---{
|   +---[ NEWLINE ]
|   +---        
|   +---int
|   +--- 
|   +---a
|   +---;
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: foo_td (HeaderDoc::Typedef)
	<span class="keyword">typedef</span> <span class="keyword">struct</span> <!-- a logicalPath="//test_ref/c/cl/foo_td_struct //test_ref/c/tdef/foo_td_struct //test_ref/c/tag/foo_td_struct //test_ref/c/struct/foo_td_struct //test_ref/c/intf/foo_td_struct //test_ref/doc/anysymbol/foo_td_struct" machineGenerated="true" --><span class="type">foo_td_struct</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/c/econst/foo_td //test_ref/c/data/foo_td //test_ref/c/clconst/foo_td " machineGenerated="true" --><span class="var">foo_td</span><!-- /a -->;  
END OF OBJECT


OBJECT: foo_td_struct (HeaderDoc::Struct)
	<span class="keyword">struct</span> <!-- a logicalPath="//test_ref/c/cl/foo_td_struct //test_ref/c/tdef/foo_td_struct //test_ref/c/tag/foo_td_struct //test_ref/c/struct/foo_td_struct //test_ref/c/intf/foo_td_struct //test_ref/doc/anysymbol/foo_td_struct" machineGenerated="true" --><span class="type">foo_td_struct</span><!-- /a --> { 
	    <!-- a logicalPath="//test_ref/c/cl/int //test_ref/c/tdef/int //test_ref/c/tag/int //test_ref/c/struct/int //test_ref/c/intf/int //test_ref/doc/anysymbol/int" machineGenerated="true" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/c/econst/a //test_ref/c/data/a //test_ref/c/clconst/a " machineGenerated="true" --><span class="var">a</span><!-- /a -->; 
	};  
END OF OBJECT



$9889|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 0
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 1
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 0
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/nametest_7.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/nametest_7.test
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => struct
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => -1
$parserState->{categoryClass} => 
$parserState->{classtype} => 
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 0
$parserState->{inComment} => 0
$parserState->{inEnum} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{inUnion} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 3
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => ;
$parserState->{macroNoTrunc} => 1
$parserState->{name} => foo_td_struct
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 2
$parserState->{onlyComments} => 0
$parserState->{parsedParamAtBrace} => ARRAY(OBJID)
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 1
$parserState->{parsedParamStateAtBrace} => ARRAY(OBJID)
$parserState->{posstypes} =>  struct
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{returntype} =>  struct foo_td_struct {
         int 
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => 
$parserState->{sodname} => 
$parserState->{sodtype} => 
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 1
$parserState->{sublang} => C
$parserState->{temponlyComments} => 0
$parserState->{treePopTwo} => 0
$parserState->{typestring} => struct
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 3
typelist: struct
namelist: foo_td_struct
posstypes:  struct
value: 
returntype:  struct foo_td_struct {         int 
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 0
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
Parsed Param 0 => int a
-=: DUMP OF PARSE TREE :=-
+---struct
+--- 
+---foo_td_struct
+--- 
+---{
|   +---[ NEWLINE ]
|   +---        
|   +---int
|   +--- 
|   +---a
|   +---;
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: nametest_7
APIUID: //test_ref/doc/header/nametest_7.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: 
LONG ATTRIBUTES: 
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::Typedef
    NAME: foo_td
    APIUID: //test_ref/c/tdef/foo_td
    ABSTRACT: "<p>foo typedef abstract here.
"
    DISCUSSION: "<p>This is the foo typedef and associated foo_td_struct.
</p>
<p>Note that the foo_td_struct should NOT appear in the
Structs section as a foo_td entry.  It should appear
only as a foo_td_struct entry under structs and as
a foo_td entry under typedefs."
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::Typedef"
    MASTERENUM: "0"
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "0"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: <p><b>See Also</b></p><div class='list_indent'><dl>
<dt><p><hd_link posstarget="//test_ref/c/tag/foo_td_struct">foo_td_struct</hd_link></p></dt><dd></dd></dl></div>

    SHORT ATTRIBUTES: 
    LONG ATTRIBUTES: 
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::Struct
    NAME: foo_td_struct
    APIUID: //test_ref/c/tag/foo_td_struct
    ABSTRACT: "<p>foo typedef abstract here.
"
    DISCUSSION: "<p>This is the foo typedef and associated foo_td_struct.
</p>
<p>Note that the foo_td_struct should NOT appear in the
Structs section as a foo_td entry.  It should appear
only as a foo_td_struct entry under structs and as
a foo_td entry under typedefs."
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::Struct"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: <p><b>See Also</b></p><div class='list_indent'><dl>
<dt><p><hd_link posstarget="//test_ref/c/tdef/foo_td">foo_td</hd_link></p></dt><dd></dd></dl></div>

    SHORT ATTRIBUTES: 
    LONG ATTRIBUTES: 
    PARSED PARAMETERS:
        TREE COUNT: 0
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::MinorAPIElement
        NAME: a
        TYPE: int
        APIUID: 
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: ""
        LINENUM: ""
        CLASS: "HeaderDoc::MinorAPIElement"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: ""
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: foo_td (HeaderDoc::Typedef)
+---typedef
+--- 
+---struct
+--- 
+---foo_td_struct
+--- 
+---*
+---foo_td
+---;
+--- 
+---[ NEWLINE ]
END OF OBJECT


OBJECT: foo_td_struct (HeaderDoc::Struct)
+---struct
+--- 
+---foo_td_struct
+--- 
+---{
|   +---[ NEWLINE ]
|   +---        
|   +---int
|   +--- 
|   +---a
|   +---;
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: foo_td (HeaderDoc::Typedef)
	<span class="keyword">typedef</span> <span class="keyword">struct</span> <!-- a logicalPath="//test_ref/c/cl/foo_td_struct //test_ref/c/tdef/foo_td_struct //test_ref/c/tag/foo_td_struct //test_ref/c/struct/foo_td_struct //test_ref/c/intf/foo_td_struct //test_ref/doc/anysymbol/foo_td_struct" machineGenerated="true" --><span class="type">foo_td_struct</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/c/econst/foo_td //test_ref/c/data/foo_td //test_ref/c/clconst/foo_td " machineGenerated="true" --><span class="var">foo_td</span><!-- /a -->;  
END OF OBJECT


OBJECT: foo_td_struct (HeaderDoc::Struct)
	<span class="keyword">struct</span> <!-- a logicalPath="//test_ref/c/cl/foo_td_struct //test_ref/c/tdef/foo_td_struct //test_ref/c/tag/foo_td_struct //test_ref/c/struct/foo_td_struct //test_ref/c/intf/foo_td_struct //test_ref/doc/anysymbol/foo_td_struct" machineGenerated="true" --><span class="type">foo_td_struct</span><!-- /a --> { 
	    <!-- a logicalPath="//test_ref/c/cl/int //test_ref/c/tdef/int //test_ref/c/tag/int //test_ref/c/struct/int //test_ref/c/intf/int //test_ref/doc/anysymbol/int" machineGenerated="true" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/c/econst/a //test_ref/c/data/a //test_ref/c/clconst/a " machineGenerated="true" --><span class="var">a</span><!-- /a -->; 
	};  
END OF OBJECT



_$92|/Users/dg/headerdoc-techpubs/Modules/HeaderDoc//../../testsuite/parser_tests/nametest_7.test$1|C$10|nametest_7$1|C$6|parser