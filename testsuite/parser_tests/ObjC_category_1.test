FrT;@1|>>0|$15|HeaderDoc::Test%26|$4|CODE$7|COMMENT$7|CPPCODE$15|EXPECTED_RESULT$23|EXPECTED_RESULT_ALLDECS$7|FAILMSG$8|FILENAME$4|LANG$4|NAME$6|RESULT$14|RESULT_ALLDECS$7|SUBLANG$4|TYPE$250|@interface Boats (BoatsCanFly)
/*!     
        @method levitateToHeight: 
        @abstract Raises the boat specified number of centimeters
        @param height The number of centimeters to levitate.
*/
- (void)levitateToHeight:(float)height;
@end
$274|/*!     
        @category Boats (BoatsCanFly)
        @abstract The BoatsCanFly category adds levitation methods to the Boat class.
        @discussion Methods declared in the BoatsCanFly category of the Boats class can only be u
sed with properly equiped Boat objects.
*/
$0|$13382|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 1
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 0
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/ObjC_category_1.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/ObjC_category_1.test
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => 0
$parserState->{categoryClass} =>  (BoatsCanFly)
$parserState->{classIsObjC} => 1
$parserState->{classtype} => @interface
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 4
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => end
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 1
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 0
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => interface
$parserState->{returntype} => @interface Boats
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => function
$parserState->{sodname} => Boats
$parserState->{sodtype} => 
$parserState->{sodtypeclasstoken} => interface
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 0
$parserState->{storeDec} =>  @interface Boats(

$parserState->{typestring} => Boats
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 4
typelist: @interface
namelist: Boats(BoatsCanFly)
posstypes: Boats
value: 
returntype: 
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 4
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---@
+---interface
|   +--- 
|   +---Boats
|   +--- 
|   +---(
|   |   +---BoatsCanFly
|   |   +---)
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---     
|   |   +---
@method levitateToHeight: 
|   |   +---
@abstract Raises the boat specified number of centimeters
|   |   +---
@param height The number of centimeters to levitate.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---void
|   |   |   +---)
|   |   +---levitateToHeight
|   |   +---:
|   |   +---(
|   |   |   +---float
|   |   |   +---)
|   |   +---height
|   |   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---@
|   +---@end
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: ObjC category 1
APIUID: //test_ref/doc/header/ObjC_category_1.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: <p></p>
LONG ATTRIBUTES: <p></p>
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::ObjCCategory
    NAME: Boats(BoatsCanFly)
    APIUID: 
    ABSTRACT: "<p>The BoatsCanFly category adds levitation methods to the Boat class.
"
    DISCUSSION: "<p>Methods declared in the BoatsCanFly category of the Boats class can only be u
sed with properly equiped Boat objects.
"
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::ObjCCategory"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Extends&nbsp;Class:</b> <!-- a logicalPath="//test_ref/occ/cl/Boats" -->Boats<!-- /a --><br>
<b>Declared In:</b> <a href="../../index.html" target="_top">ObjC category 1</a><br>
</p>
    LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Method
        NAME: levitateToHeight:
        APIUID: //test_ref/occ/instm/Boats(BoatsCanFly)/levitateToHeight:
        ABSTRACT: "<p>Raises the boat specified number of centimeters
"
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "void"
        LINENUM: ""
        CLASS: "HeaderDoc::Method"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: height
            TYPE: (float)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: height
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The number of centimeters to levitate."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: Boats(BoatsCanFly) (HeaderDoc::ObjCCategory)
+---@
+---interface
|   +--- 
|   +---Boats
|   +--- 
|   +---(
|   |   +---BoatsCanFly
|   |   +---)
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---     
|   |   +---
@method levitateToHeight: 
|   |   +---
@abstract Raises the boat specified number of centimeters
|   |   +---
@param height The number of centimeters to levitate.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---void
|   |   |   +---)
|   |   +---levitateToHeight
|   |   +---:
|   |   +---(
|   |   |   +---float
|   |   |   +---)
|   |   +---height
|   |   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---@
|   +---@end
+---[ NEWLINE ]
END OF OBJECT


OBJECT: levitateToHeight: (HeaderDoc::Method)
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---void
|   |   +---)
|   +---levitateToHeight
|   +---:
|   +---(
|   |   +---float
|   |   +---)
|   +---height
|   +---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---@
+---@end
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: Boats(BoatsCanFly) (HeaderDoc::ObjCCategory)
	@<!-- a logicalPath="//test_ref/occ/cl/interface //test_ref/occ/tdef/interface //test_ref/occ/tag/interface //test_ref/occ/econst/interface //test_ref/occ/struct/interface //test_ref/occ/clconst/interface //test_ref/occ/intf/interface" --><span class="type">interface</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/instm/Boats //test_ref/occ/clm/Boats //test_ref/occ/intfcm/Boats //test_ref/occ/intfm/Boats //test_ref/occ/func/Boats //test_ref/occ/ftmplt/Boats //test_ref/occ/defn/Boats //test_ref/occ/macro/Boats" --><span class="function">Boats</span><!-- /a --> (
	        <span class="param">BoatsCanFly</span>) <span class="comment">/*! 
	@method levitateToHeight: 
	@abstract Raises the boat specified number of centimeters
	@param height The number of centimeters to levitate.</span>
	        <span class="comment">*/</span>
	    - (
	            <span class="param">void</span>)<!-- a logicalPath="//test_ref/occ/cl/levitateToHeight //test_ref/occ/tdef/levitateToHeight //test_ref/occ/tag/levitateToHeight //test_ref/occ/econst/levitateToHeight //test_ref/occ/struct/levitateToHeight //test_ref/occ/clconst/levitateToHeight //test_ref/occ/intf/levitateToHeight" --><span class="type">levitateToHeight</span><!-- /a -->:(
	            <span class="param">float</span>)<!-- a logicalPath="//test_ref/occ/econst/height //test_ref/occ/data/height" --><span class="var">height</span><!-- /a -->;  @@end 
END OF OBJECT


OBJECT: levitateToHeight: (HeaderDoc::Method)
	- (<!-- a logicalPath="//test_ref/occ/cl/void //test_ref/occ/tdef/void //test_ref/occ/tag/void //test_ref/occ/econst/void //test_ref/occ/struct/void //test_ref/occ/clconst/void //test_ref/occ/intf/void" --><span class="type">void</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/instm/levitateToHeight //test_ref/occ/clm/levitateToHeight //test_ref/occ/intfcm/levitateToHeight //test_ref/occ/intfm/levitateToHeight //test_ref/occ/func/levitateToHeight //test_ref/occ/ftmplt/levitateToHeight //test_ref/occ/defn/levitateToHeight //test_ref/occ/macro/levitateToHeight" --><span class="function">levitateToHeight</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/float //test_ref/occ/tdef/float //test_ref/occ/tag/float //test_ref/occ/econst/float //test_ref/occ/struct/float //test_ref/occ/clconst/float //test_ref/occ/intf/float" --><span class="type">float</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/econst/height //test_ref/occ/data/height" --><span class="var">height</span><!-- /a -->; 
END OF OBJECT



$13382|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 1
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 0
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/ObjC_category_1.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/ObjC_category_1.test
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => 0
$parserState->{categoryClass} =>  (BoatsCanFly)
$parserState->{classIsObjC} => 1
$parserState->{classtype} => @interface
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 4
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => end
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 1
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 0
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => interface
$parserState->{returntype} => @interface Boats
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => function
$parserState->{sodname} => Boats
$parserState->{sodtype} => 
$parserState->{sodtypeclasstoken} => interface
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 0
$parserState->{storeDec} =>  @interface Boats(

$parserState->{typestring} => Boats
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 4
typelist: @interface
namelist: Boats(BoatsCanFly)
posstypes: Boats
value: 
returntype: 
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 4
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---@
+---interface
|   +--- 
|   +---Boats
|   +--- 
|   +---(
|   |   +---BoatsCanFly
|   |   +---)
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---     
|   |   +---
@method levitateToHeight: 
|   |   +---
@abstract Raises the boat specified number of centimeters
|   |   +---
@param height The number of centimeters to levitate.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---void
|   |   |   +---)
|   |   +---levitateToHeight
|   |   +---:
|   |   +---(
|   |   |   +---float
|   |   |   +---)
|   |   +---height
|   |   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---@
|   +---@end
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: ObjC category 1
APIUID: //test_ref/doc/header/ObjC_category_1.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: <p></p>
LONG ATTRIBUTES: <p></p>
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::ObjCCategory
    NAME: Boats(BoatsCanFly)
    APIUID: 
    ABSTRACT: "<p>The BoatsCanFly category adds levitation methods to the Boat class.
"
    DISCUSSION: "<p>Methods declared in the BoatsCanFly category of the Boats class can only be u
sed with properly equiped Boat objects.
"
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::ObjCCategory"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Extends&nbsp;Class:</b> <!-- a logicalPath="//test_ref/occ/cl/Boats" -->Boats<!-- /a --><br>
<b>Declared In:</b> <a href="../../index.html" target="_top">ObjC category 1</a><br>
</p>
    LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Method
        NAME: levitateToHeight:
        APIUID: //test_ref/occ/instm/Boats(BoatsCanFly)/levitateToHeight:
        ABSTRACT: "<p>Raises the boat specified number of centimeters
"
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "void"
        LINENUM: ""
        CLASS: "HeaderDoc::Method"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: height
            TYPE: (float)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: height
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The number of centimeters to levitate."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: Boats(BoatsCanFly) (HeaderDoc::ObjCCategory)
+---@
+---interface
|   +--- 
|   +---Boats
|   +--- 
|   +---(
|   |   +---BoatsCanFly
|   |   +---)
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---     
|   |   +---
@method levitateToHeight: 
|   |   +---
@abstract Raises the boat specified number of centimeters
|   |   +---
@param height The number of centimeters to levitate.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---void
|   |   |   +---)
|   |   +---levitateToHeight
|   |   +---:
|   |   +---(
|   |   |   +---float
|   |   |   +---)
|   |   +---height
|   |   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---@
|   +---@end
+---[ NEWLINE ]
END OF OBJECT


OBJECT: levitateToHeight: (HeaderDoc::Method)
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---void
|   |   +---)
|   +---levitateToHeight
|   +---:
|   +---(
|   |   +---float
|   |   +---)
|   +---height
|   +---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---@
+---@end
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: Boats(BoatsCanFly) (HeaderDoc::ObjCCategory)
	@<!-- a logicalPath="//test_ref/occ/cl/interface //test_ref/occ/tdef/interface //test_ref/occ/tag/interface //test_ref/occ/econst/interface //test_ref/occ/struct/interface //test_ref/occ/clconst/interface //test_ref/occ/intf/interface" --><span class="type">interface</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/instm/Boats //test_ref/occ/clm/Boats //test_ref/occ/intfcm/Boats //test_ref/occ/intfm/Boats //test_ref/occ/func/Boats //test_ref/occ/ftmplt/Boats //test_ref/occ/defn/Boats //test_ref/occ/macro/Boats" --><span class="function">Boats</span><!-- /a --> (
	        <span class="param">BoatsCanFly</span>) <span class="comment">/*! 
	@method levitateToHeight: 
	@abstract Raises the boat specified number of centimeters
	@param height The number of centimeters to levitate.</span>
	        <span class="comment">*/</span>
	    - (
	            <span class="param">void</span>)<!-- a logicalPath="//test_ref/occ/cl/levitateToHeight //test_ref/occ/tdef/levitateToHeight //test_ref/occ/tag/levitateToHeight //test_ref/occ/econst/levitateToHeight //test_ref/occ/struct/levitateToHeight //test_ref/occ/clconst/levitateToHeight //test_ref/occ/intf/levitateToHeight" --><span class="type">levitateToHeight</span><!-- /a -->:(
	            <span class="param">float</span>)<!-- a logicalPath="//test_ref/occ/econst/height //test_ref/occ/data/height" --><span class="var">height</span><!-- /a -->;  @@end 
END OF OBJECT


OBJECT: levitateToHeight: (HeaderDoc::Method)
	- (<!-- a logicalPath="//test_ref/occ/cl/void //test_ref/occ/tdef/void //test_ref/occ/tag/void //test_ref/occ/econst/void //test_ref/occ/struct/void //test_ref/occ/clconst/void //test_ref/occ/intf/void" --><span class="type">void</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/instm/levitateToHeight //test_ref/occ/clm/levitateToHeight //test_ref/occ/intfcm/levitateToHeight //test_ref/occ/intfm/levitateToHeight //test_ref/occ/func/levitateToHeight //test_ref/occ/ftmplt/levitateToHeight //test_ref/occ/defn/levitateToHeight //test_ref/occ/macro/levitateToHeight" --><span class="function">levitateToHeight</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/float //test_ref/occ/tdef/float //test_ref/occ/tag/float //test_ref/occ/econst/float //test_ref/occ/struct/float //test_ref/occ/clconst/float //test_ref/occ/intf/float" --><span class="type">float</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/econst/height //test_ref/occ/data/height" --><span class="var">height</span><!-- /a -->; 
END OF OBJECT



_$43|testsuite/parser_tests/ObjC_category_1.test$1|C$15|ObjC category 1$13382|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 1
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 0
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/ObjC_category_1.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/ObjC_category_1.test
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => 0
$parserState->{categoryClass} =>  (BoatsCanFly)
$parserState->{classIsObjC} => 1
$parserState->{classtype} => @interface
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 4
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => end
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 1
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 0
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => interface
$parserState->{returntype} => @interface Boats
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => function
$parserState->{sodname} => Boats
$parserState->{sodtype} => 
$parserState->{sodtypeclasstoken} => interface
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 0
$parserState->{storeDec} =>  @interface Boats(

$parserState->{typestring} => Boats
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 4
typelist: @interface
namelist: Boats(BoatsCanFly)
posstypes: Boats
value: 
returntype: 
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 4
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---@
+---interface
|   +--- 
|   +---Boats
|   +--- 
|   +---(
|   |   +---BoatsCanFly
|   |   +---)
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---     
|   |   +---
@method levitateToHeight: 
|   |   +---
@abstract Raises the boat specified number of centimeters
|   |   +---
@param height The number of centimeters to levitate.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---void
|   |   |   +---)
|   |   +---levitateToHeight
|   |   +---:
|   |   +---(
|   |   |   +---float
|   |   |   +---)
|   |   +---height
|   |   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---@
|   +---@end
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: ObjC category 1
APIUID: //test_ref/doc/header/ObjC_category_1.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: <p></p>
LONG ATTRIBUTES: <p></p>
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::ObjCCategory
    NAME: Boats(BoatsCanFly)
    APIUID: 
    ABSTRACT: "<p>The BoatsCanFly category adds levitation methods to the Boat class.
"
    DISCUSSION: "<p>Methods declared in the BoatsCanFly category of the Boats class can only be u
sed with properly equiped Boat objects.
"
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::ObjCCategory"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Extends&nbsp;Class:</b> <!-- a logicalPath="//test_ref/occ/cl/Boats" -->Boats<!-- /a --><br>
<b>Declared In:</b> <a href="../../index.html" target="_top">ObjC category 1</a><br>
</p>
    LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Method
        NAME: levitateToHeight:
        APIUID: //test_ref/occ/instm/Boats(BoatsCanFly)/levitateToHeight:
        ABSTRACT: "<p>Raises the boat specified number of centimeters
"
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "void"
        LINENUM: ""
        CLASS: "HeaderDoc::Method"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: height
            TYPE: (float)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: height
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The number of centimeters to levitate."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: Boats(BoatsCanFly) (HeaderDoc::ObjCCategory)
+---@
+---interface
|   +--- 
|   +---Boats
|   +--- 
|   +---(
|   |   +---BoatsCanFly
|   |   +---)
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---     
|   |   +---
@method levitateToHeight: 
|   |   +---
@abstract Raises the boat specified number of centimeters
|   |   +---
@param height The number of centimeters to levitate.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---void
|   |   |   +---)
|   |   +---levitateToHeight
|   |   +---:
|   |   +---(
|   |   |   +---float
|   |   |   +---)
|   |   +---height
|   |   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---@
|   +---@end
+---[ NEWLINE ]
END OF OBJECT


OBJECT: levitateToHeight: (HeaderDoc::Method)
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---void
|   |   +---)
|   +---levitateToHeight
|   +---:
|   +---(
|   |   +---float
|   |   +---)
|   +---height
|   +---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---@
+---@end
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: Boats(BoatsCanFly) (HeaderDoc::ObjCCategory)
	@<!-- a logicalPath="//test_ref/occ/cl/interface //test_ref/occ/tdef/interface //test_ref/occ/tag/interface //test_ref/occ/econst/interface //test_ref/occ/struct/interface //test_ref/occ/clconst/interface //test_ref/occ/intf/interface" --><span class="type">interface</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/instm/Boats //test_ref/occ/clm/Boats //test_ref/occ/intfcm/Boats //test_ref/occ/intfm/Boats //test_ref/occ/func/Boats //test_ref/occ/ftmplt/Boats //test_ref/occ/defn/Boats //test_ref/occ/macro/Boats" --><span class="function">Boats</span><!-- /a --> (
	        <span class="param">BoatsCanFly</span>) <span class="comment">/*! 
	@method levitateToHeight: 
	@abstract Raises the boat specified number of centimeters
	@param height The number of centimeters to levitate.</span>
	        <span class="comment">*/</span>
	    - (
	            <span class="param">void</span>)<!-- a logicalPath="//test_ref/occ/cl/levitateToHeight //test_ref/occ/tdef/levitateToHeight //test_ref/occ/tag/levitateToHeight //test_ref/occ/econst/levitateToHeight //test_ref/occ/struct/levitateToHeight //test_ref/occ/clconst/levitateToHeight //test_ref/occ/intf/levitateToHeight" --><span class="type">levitateToHeight</span><!-- /a -->:(
	            <span class="param">float</span>)<!-- a logicalPath="//test_ref/occ/econst/height //test_ref/occ/data/height" --><span class="var">height</span><!-- /a -->;  @@end 
END OF OBJECT


OBJECT: levitateToHeight: (HeaderDoc::Method)
	- (<!-- a logicalPath="//test_ref/occ/cl/void //test_ref/occ/tdef/void //test_ref/occ/tag/void //test_ref/occ/econst/void //test_ref/occ/struct/void //test_ref/occ/clconst/void //test_ref/occ/intf/void" --><span class="type">void</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/instm/levitateToHeight //test_ref/occ/clm/levitateToHeight //test_ref/occ/intfcm/levitateToHeight //test_ref/occ/intfm/levitateToHeight //test_ref/occ/func/levitateToHeight //test_ref/occ/ftmplt/levitateToHeight //test_ref/occ/defn/levitateToHeight //test_ref/occ/macro/levitateToHeight" --><span class="function">levitateToHeight</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/float //test_ref/occ/tdef/float //test_ref/occ/tag/float //test_ref/occ/econst/float //test_ref/occ/struct/float //test_ref/occ/clconst/float //test_ref/occ/intf/float" --><span class="type">float</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/econst/height //test_ref/occ/data/height" --><span class="var">height</span><!-- /a -->; 
END OF OBJECT



$13382|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 1
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 0
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/ObjC_category_1.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/ObjC_category_1.test
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => 0
$parserState->{categoryClass} =>  (BoatsCanFly)
$parserState->{classIsObjC} => 1
$parserState->{classtype} => @interface
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 4
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => end
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 1
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 0
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => interface
$parserState->{returntype} => @interface Boats
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => function
$parserState->{sodname} => Boats
$parserState->{sodtype} => 
$parserState->{sodtypeclasstoken} => interface
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 0
$parserState->{storeDec} =>  @interface Boats(

$parserState->{typestring} => Boats
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 4
typelist: @interface
namelist: Boats(BoatsCanFly)
posstypes: Boats
value: 
returntype: 
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 4
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---@
+---interface
|   +--- 
|   +---Boats
|   +--- 
|   +---(
|   |   +---BoatsCanFly
|   |   +---)
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---     
|   |   +---
@method levitateToHeight: 
|   |   +---
@abstract Raises the boat specified number of centimeters
|   |   +---
@param height The number of centimeters to levitate.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---void
|   |   |   +---)
|   |   +---levitateToHeight
|   |   +---:
|   |   +---(
|   |   |   +---float
|   |   |   +---)
|   |   +---height
|   |   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---@
|   +---@end
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: ObjC category 1
APIUID: //test_ref/doc/header/ObjC_category_1.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: <p></p>
LONG ATTRIBUTES: <p></p>
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::ObjCCategory
    NAME: Boats(BoatsCanFly)
    APIUID: 
    ABSTRACT: "<p>The BoatsCanFly category adds levitation methods to the Boat class.
"
    DISCUSSION: "<p>Methods declared in the BoatsCanFly category of the Boats class can only be u
sed with properly equiped Boat objects.
"
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::ObjCCategory"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Extends&nbsp;Class:</b> <!-- a logicalPath="//test_ref/occ/cl/Boats" -->Boats<!-- /a --><br>
<b>Declared In:</b> <a href="../../index.html" target="_top">ObjC category 1</a><br>
</p>
    LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Method
        NAME: levitateToHeight:
        APIUID: //test_ref/occ/instm/Boats(BoatsCanFly)/levitateToHeight:
        ABSTRACT: "<p>Raises the boat specified number of centimeters
"
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "void"
        LINENUM: ""
        CLASS: "HeaderDoc::Method"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: height
            TYPE: (float)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: height
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The number of centimeters to levitate."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: Boats(BoatsCanFly) (HeaderDoc::ObjCCategory)
+---@
+---interface
|   +--- 
|   +---Boats
|   +--- 
|   +---(
|   |   +---BoatsCanFly
|   |   +---)
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---     
|   |   +---
@method levitateToHeight: 
|   |   +---
@abstract Raises the boat specified number of centimeters
|   |   +---
@param height The number of centimeters to levitate.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---void
|   |   |   +---)
|   |   +---levitateToHeight
|   |   +---:
|   |   +---(
|   |   |   +---float
|   |   |   +---)
|   |   +---height
|   |   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---@
|   +---@end
+---[ NEWLINE ]
END OF OBJECT


OBJECT: levitateToHeight: (HeaderDoc::Method)
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---void
|   |   +---)
|   +---levitateToHeight
|   +---:
|   +---(
|   |   +---float
|   |   +---)
|   +---height
|   +---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---@
+---@end
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: Boats(BoatsCanFly) (HeaderDoc::ObjCCategory)
	@<!-- a logicalPath="//test_ref/occ/cl/interface //test_ref/occ/tdef/interface //test_ref/occ/tag/interface //test_ref/occ/econst/interface //test_ref/occ/struct/interface //test_ref/occ/clconst/interface //test_ref/occ/intf/interface" --><span class="type">interface</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/instm/Boats //test_ref/occ/clm/Boats //test_ref/occ/intfcm/Boats //test_ref/occ/intfm/Boats //test_ref/occ/func/Boats //test_ref/occ/ftmplt/Boats //test_ref/occ/defn/Boats //test_ref/occ/macro/Boats" --><span class="function">Boats</span><!-- /a --> (
	        <span class="param">BoatsCanFly</span>) <span class="comment">/*! 
	@method levitateToHeight: 
	@abstract Raises the boat specified number of centimeters
	@param height The number of centimeters to levitate.</span>
	        <span class="comment">*/</span>
	    - (
	            <span class="param">void</span>)<!-- a logicalPath="//test_ref/occ/cl/levitateToHeight //test_ref/occ/tdef/levitateToHeight //test_ref/occ/tag/levitateToHeight //test_ref/occ/econst/levitateToHeight //test_ref/occ/struct/levitateToHeight //test_ref/occ/clconst/levitateToHeight //test_ref/occ/intf/levitateToHeight" --><span class="type">levitateToHeight</span><!-- /a -->:(
	            <span class="param">float</span>)<!-- a logicalPath="//test_ref/occ/econst/height //test_ref/occ/data/height" --><span class="var">height</span><!-- /a -->;  @@end 
END OF OBJECT


OBJECT: levitateToHeight: (HeaderDoc::Method)
	- (<!-- a logicalPath="//test_ref/occ/cl/void //test_ref/occ/tdef/void //test_ref/occ/tag/void //test_ref/occ/econst/void //test_ref/occ/struct/void //test_ref/occ/clconst/void //test_ref/occ/intf/void" --><span class="type">void</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/instm/levitateToHeight //test_ref/occ/clm/levitateToHeight //test_ref/occ/intfcm/levitateToHeight //test_ref/occ/intfm/levitateToHeight //test_ref/occ/func/levitateToHeight //test_ref/occ/ftmplt/levitateToHeight //test_ref/occ/defn/levitateToHeight //test_ref/occ/macro/levitateToHeight" --><span class="function">levitateToHeight</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/float //test_ref/occ/tdef/float //test_ref/occ/tag/float //test_ref/occ/econst/float //test_ref/occ/struct/float //test_ref/occ/clconst/float //test_ref/occ/intf/float" --><span class="type">float</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/econst/height //test_ref/occ/data/height" --><span class="var">height</span><!-- /a -->; 
END OF OBJECT



$1|C$6|parser