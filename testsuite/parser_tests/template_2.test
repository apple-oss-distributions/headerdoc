FrT;@1|>>0|$15|HeaderDoc::Test%26|$4|CODE$7|COMMENT$7|CPPCODE$15|EXPECTED_RESULT$23|EXPECTED_RESULT_ALLDECS$7|FAILMSG$8|FILENAME$4|LANG$4|NAME$6|RESULT$14|RESULT_ALLDECS$7|SUBLANG$4|TYPE$718|template <class FOO, BAR>
class This_Does_Contain_Templates
{
    public:
        /*! @function insert
            @discussion insert new entry
         */
        bool insert(FOO, BAR);
        
        /*! @function commatest 
            @abstract Watch for extra line breaks
         */
        virtual bool CreateItemWithIdentifier(const ACFString &inIdentifier,
                const AEventParaneter<CFTypeRef> &inConfigData,
                AEventParameter<HIToolbarItemRef,AWriteOnly> &outItem);
        
        /*! @function S3Handle
            @discussion Hmm.
            @templatefield FOO the foo type.
         */
        template<class FOO> operator S3Handle<FOO>() { return S3Handle<S2>(mData); };
}
$227|/*! @template This_Does_Contain_Templates
    @templatefield FOO this is the base data type
    @templatefield BAR this is the data type of correlated data
    @discussion This class does basic correlation of two data types
*/
$0|$41117|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 1
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 0
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/template_2.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/template_2.test
$parserState->{ISFORWARDDECLARATION} => 0
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => -1
$parserState->{categoryClass} => 
$parserState->{classNameFound} => 1
$parserState->{classtype} => class
$parserState->{forceClassDone} => 1
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 16
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => 
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 3
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 0
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => template
$parserState->{preclasssodtype} => class
$parserState->{returntype} => template < class FOO, BAR > class 
This_Does_Contain_Templates  
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => This_Does_Contain_Templates
$parserState->{sodtype} => 
$parserState->{sodtypeclasstoken} => class
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 0
$parserState->{storeDec} => template < class FOO, BAR > class 

$parserState->{typestring} => template
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 16
typelist: class
namelist: This_Does_Contain_Templates
posstypes: 
value: 
returntype: 
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 7
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---template
+--- 
+---<
|   +---class
|   +--- 
|   +---FOO
|   +---,
|   +--- 
|   +---BAR
|   +--->
+---[ NEWLINE ]
+---class
+--- 
+---This_Does_Contain_Templates
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---    
|   +---public
|   +---:
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function insert
|   |   +---
@discussion insert new entry
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-bool (HAS STATE)
|   +--- 
|   +---insert
|   +---(
|   |   +---FOO
|   |   +---,
|   |   +--- 
|   |   +---BAR
|   |   +---)
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function commatest 
|   |   +---
@abstract Watch for extra line breaks
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-virtual (HAS STATE)
|   +--- 
|   +---bool
|   +--- 
|   +---CreateItemWithIdentifier
|   +---(
|   |   +---const
|   |   +--- 
|   |   +---ACFString
|   |   +--- 
|   |   +---&
|   |   +---inIdentifier
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---                
|   |   +---const
|   |   +--- 
|   |   +---AEventParaneter
|   |   +---<
|   |   |   +---CFTypeRef
|   |   |   +--->
|   |   +--- 
|   |   +---&
|   |   +---inConfigData
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---                
|   |   +---AEventParameter
|   |   +---<
|   |   |   +---HIToolbarItemRef
|   |   |   +---,
|   |   |   +---AWriteOnly
|   |   |   +--->
|   |   +--- 
|   |   +---&
|   |   +---outItem
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function S3Handle
|   |   +---
@discussion Hmm.
|   |   +---
@templatefield FOO the foo type.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-template (HAS STATE)
|   +---<
|   |   +---class
|   |   +--- 
|   |   +---FOO
|   |   +--->
|   +--- 
|   +---operator
|   +--- 
|   +---S3Handle
|   +---<
|   +---FOO
|   +--->
|   +---(
|   |   +---)
|   +--- 
|   +---;
|   +---[ NEWLINE ]
|   +---}
+---[ NEWLINE ]
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: template 2
APIUID: //test_ref/doc/header/template_2.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: <p></p>
LONG ATTRIBUTES: <p></p>
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::CPPClass
    NAME: This_Does_Contain_Templates This_Does_Contain_Templates
    APIUID: 
    ABSTRACT: ""
    DISCUSSION: "<p>This class does basic correlation of two data types
"
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::CPPClass"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: "This_Does_Contain_Templates"
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Declared In:</b> <a href="../../index.html" target="_top">template 2</a><br>
</p>
    LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: insert
        APIUID: //test_ref/cpp/instm/This_Does_Contain_TemplatesThis_Does_Contain_Templates/insert/bool/(FOO,BAR)
        ABSTRACT: ""
        DISCUSSION: "<p>insert new entry
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " bool"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: 
            TYPE:  FOO
            APIUID: //test_ref/cpp/internal_temporary_object/This_Does_Contain_TemplatesThis_Does_Contain_Templates
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: 
            TYPE:  BAR
            APIUID: //test_ref/cpp/internal_temporary_object/This_Does_Contain_TemplatesThis_Does_Contain_Templates
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: commatest
        APIUID: //test_ref/doc/title:instm/This_Does_Contain_TemplatesThis_Does_Contain_Templates/commatest/bool/(constACFString%26,constAEventParaneter%26,AEventParameter%26)
        ABSTRACT: "<p>Watch for extra line breaks
"
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " virtual bool"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inIdentifier
            TYPE: const ACFString &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inConfigData
            TYPE: const AEventParaneter &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: outItem
            TYPE: AEventParameter &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: CreateItemWithIdentifier
        APIUID: //test_ref/cpp/instm/This_Does_Contain_TemplatesThis_Does_Contain_Templates/CreateItemWithIdentifier/bool/(constACFString%26,constAEventParaneter%26,AEventParameter%26)
        ABSTRACT: "<p>Watch for extra line breaks
"
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " virtual bool"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inIdentifier
            TYPE: const ACFString &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inConfigData
            TYPE: const AEventParaneter &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: outItem
            TYPE: AEventParameter &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: S3Handle
        APIUID: //test_ref/cpp/instm/This_Does_Contain_TemplatesThis_Does_Contain_Templates/S3Handle/template%3CclassFOO%3E/()
        ABSTRACT: ""
        DISCUSSION: "<p>Hmm.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "         template< class FOO >"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: <b>Template Field:</b><div class='list_indent'><dl>
<dt><p>FOO</dt><dd>the foo type.</dd></dl></div>

        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator S3Handle<FOO>
        APIUID: //test_ref/cpp/instm/This_Does_Contain_TemplatesThis_Does_Contain_Templates/operator_S3Handle%3CFOO%3E/template%3CclassFOO%3E/()
        ABSTRACT: ""
        DISCUSSION: "<p>Hmm.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "         template< class FOO >"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: <b>Template Field:</b><div class='list_indent'><dl>
<dt><p>FOO</dt><dd>the foo type.</dd></dl></div>

        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: This_Does_Contain_Templates This_Does_Contain_Templates (HeaderDoc::CPPClass)
+---template
+--- 
+---<
|   +---class
|   +--- 
|   +---FOO
|   +---,
|   +--- 
|   +---BAR
|   +--->
+---[ NEWLINE ]
+---class
+--- 
+---This_Does_Contain_Templates
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---    
|   +---public
|   +---:
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function insert
|   |   +---
@discussion insert new entry
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-bool (HAS STATE)
|   +--- 
|   +---insert
|   +---(
|   |   +---FOO
|   |   +---,
|   |   +--- 
|   |   +---BAR
|   |   +---)
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function commatest 
|   |   +---
@abstract Watch for extra line breaks
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-virtual (HAS STATE)
|   +--- 
|   +---bool
|   +--- 
|   +---CreateItemWithIdentifier
|   +---(
|   |   +---const
|   |   +--- 
|   |   +---ACFString
|   |   +--- 
|   |   +---&
|   |   +---inIdentifier
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---                
|   |   +---const
|   |   +--- 
|   |   +---AEventParaneter
|   |   +---<
|   |   |   +---CFTypeRef
|   |   |   +--->
|   |   +--- 
|   |   +---&
|   |   +---inConfigData
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---                
|   |   +---AEventParameter
|   |   +---<
|   |   |   +---HIToolbarItemRef
|   |   |   +---,
|   |   |   +---AWriteOnly
|   |   |   +--->
|   |   +--- 
|   |   +---&
|   |   +---outItem
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function S3Handle
|   |   +---
@discussion Hmm.
|   |   +---
@templatefield FOO the foo type.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-template (HAS STATE)
|   +---<
|   |   +---class
|   |   +--- 
|   |   +---FOO
|   |   +--->
|   +--- 
|   +---operator
|   +--- 
|   +---S3Handle
|   +---<
|   +---FOO
|   +--->
|   +---(
|   |   +---)
|   +--- 
|   +---;
|   +---[ NEWLINE ]
|   +---}
+---[ NEWLINE ]
+---[ NEWLINE ]
END OF OBJECT


OBJECT: insert (HeaderDoc::Function)
+-*-bool (HAS STATE)
+--- 
+---insert
+---(
|   +---FOO
|   +---,
|   +--- 
|   +---BAR
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function commatest 
|   +---
@abstract Watch for extra line breaks
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+---        
+-*-virtual (HAS STATE)
+--- 
+---bool
+--- 
+---CreateItemWithIdentifier
+---(
|   +---const
|   +--- 
|   +---ACFString
|   +--- 
|   +---&
|   +---inIdentifier
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---const
|   +--- 
|   +---AEventParaneter
|   +---<
|   |   +---CFTypeRef
|   |   +--->
|   +--- 
|   +---&
|   +---inConfigData
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---AEventParameter
|   +---<
|   |   +---HIToolbarItemRef
|   |   +---,
|   |   +---AWriteOnly
|   |   +--->
|   +--- 
|   +---&
|   +---outItem
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function S3Handle
|   +---
@discussion Hmm.
|   +---
@templatefield FOO the foo type.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+---        
+-*-template (HAS STATE)
+---<
|   +---class
|   +--- 
|   +---FOO
|   +--->
+--- 
+---operator
+--- 
+---S3Handle
+---<
+---FOO
+--->
+---(
|   +---)
+--- 
+---;
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: CreateItemWithIdentifier (HeaderDoc::Function)
+-*-virtual (HAS STATE)
+--- 
+---bool
+--- 
+---CreateItemWithIdentifier
+---(
|   +---const
|   +--- 
|   +---ACFString
|   +--- 
|   +---&
|   +---inIdentifier
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---const
|   +--- 
|   +---AEventParaneter
|   +---<
|   |   +---CFTypeRef
|   |   +--->
|   +--- 
|   +---&
|   +---inConfigData
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---AEventParameter
|   +---<
|   |   +---HIToolbarItemRef
|   |   +---,
|   |   +---AWriteOnly
|   |   +--->
|   +--- 
|   +---&
|   +---outItem
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function S3Handle
|   +---
@discussion Hmm.
|   +---
@templatefield FOO the foo type.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+---        
+-*-template (HAS STATE)
+---<
|   +---class
|   +--- 
|   +---FOO
|   +--->
+--- 
+---operator
+--- 
+---S3Handle
+---<
+---FOO
+--->
+---(
|   +---)
+--- 
+---;
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: CreateItemWithIdentifier (HeaderDoc::Function)
+-*-virtual (HAS STATE)
+--- 
+---bool
+--- 
+---CreateItemWithIdentifier
+---(
|   +---const
|   +--- 
|   +---ACFString
|   +--- 
|   +---&
|   +---inIdentifier
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---const
|   +--- 
|   +---AEventParaneter
|   +---<
|   |   +---CFTypeRef
|   |   +--->
|   +--- 
|   +---&
|   +---inConfigData
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---AEventParameter
|   +---<
|   |   +---HIToolbarItemRef
|   |   +---,
|   |   +---AWriteOnly
|   |   +--->
|   +--- 
|   +---&
|   +---outItem
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function S3Handle
|   +---
@discussion Hmm.
|   +---
@templatefield FOO the foo type.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+---        
+-*-template (HAS STATE)
+---<
|   +---class
|   +--- 
|   +---FOO
|   +--->
+--- 
+---operator
+--- 
+---S3Handle
+---<
+---FOO
+--->
+---(
|   +---)
+--- 
+---;
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator S3Handle<FOO> (HeaderDoc::Function)
+-*-template (HAS STATE)
+---<
|   +---class
|   +--- 
|   +---FOO
|   +--->
+--- 
+---operator
+--- 
+---S3Handle
+---<
+---FOO
+--->
+---(
|   +---)
+--- 
+---;
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator S3Handle<FOO> (HeaderDoc::Function)
+-*-template (HAS STATE)
+---<
|   +---class
|   +--- 
|   +---FOO
|   +--->
+--- 
+---operator
+--- 
+---S3Handle
+---<
+---FOO
+--->
+---(
|   +---)
+--- 
+---;
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---}
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: This_Does_Contain_Templates This_Does_Contain_Templates (HeaderDoc::CPPClass)
	<span class="keyword">template</span> &lt;<span class="template">class</span> <span class="template">FOO</span>, <span class="template">BAR</span>&gt; <span class="keyword">class</span> <!-- a logicalPath="//test_ref/cpp/cl/This_Does_Contain_Templates //test_ref/cpp/tdef/This_Does_Contain_Templates //test_ref/cpp/tag/This_Does_Contain_Templates //test_ref/cpp/econst/This_Does_Contain_Templates //test_ref/cpp/struct/This_Does_Contain_Templates //test_ref/cpp/clconst/This_Does_Contain_Templates //test_ref/cpp/intf/This_Does_Contain_Templates" --><span class="type">This_Does_Contain_Templates</span><!-- /a --> { 
	    <span class="keyword">public</span>: <span class="comment">/*! @function insert
	@discussion insert new entry</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/insert //test_ref/cpp/clm/insert //test_ref/cpp/intfcm/insert //test_ref/cpp/intfm/insert //test_ref/cpp/func/insert //test_ref/cpp/ftmplt/insert //test_ref/cpp/defn/insert //test_ref/cpp/macro/insert" --><span class="function">insert</span><!-- /a -->(
	        <span class="param">FOO</span>,
	        <span class="param">BAR</span>);  
	    <span class="comment">/*! @function commatest 
	@abstract Watch for extra line breaks</span>
	        <span class="comment">*/</span>
	    <span class="keyword">virtual</span> <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/CreateItemWithIdentifier //test_ref/cpp/clm/CreateItemWithIdentifier //test_ref/cpp/intfcm/CreateItemWithIdentifier //test_ref/cpp/intfm/CreateItemWithIdentifier //test_ref/cpp/func/CreateItemWithIdentifier //test_ref/cpp/ftmplt/CreateItemWithIdentifier //test_ref/cpp/defn/CreateItemWithIdentifier //test_ref/cpp/macro/CreateItemWithIdentifier" --><span class="function">CreateItemWithIdentifier</span><!-- /a -->(
	        <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/ACFString //test_ref/cpp/data/ACFString" --><span class="var">ACFString</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inIdentifier //test_ref/cpp/data/inIdentifier" --><span class="var">inIdentifier</span><!-- /a -->, 
	        <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/AEventParaneter //test_ref/cpp/data/AEventParaneter" --><span class="var">AEventParaneter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/CFTypeRef //test_ref/cpp/data/CFTypeRef" --><span class="var">CFTypeRef</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/inConfigData //test_ref/cpp/data/inConfigData" --><span class="var">inConfigData</span><!-- /a -->, 
	        <!-- a logicalPath="//test_ref/cpp/econst/AEventParameter //test_ref/cpp/data/AEventParameter" --><span class="var">AEventParameter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/HIToolbarItemRef //test_ref/cpp/data/HIToolbarItemRef" --><span class="var">HIToolbarItemRef</span><!-- /a -->,
	            <!-- a logicalPath="//test_ref/cpp/econst/AWriteOnly //test_ref/cpp/data/AWriteOnly" --><span class="var">AWriteOnly</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/outItem //test_ref/cpp/data/outItem" --><span class="var">outItem</span><!-- /a -->);  
	    <span class="comment">/*! @function S3Handle
	@discussion Hmm.
	@templatefield FOO the foo type.</span>
	        <span class="comment">*/</span>
	    <span class="keyword">template</span>&lt;<span class="template">class</span> <span class="template">FOO</span>&gt; <span class="keyword">operator</span> <!-- a logicalPath="//test_ref/cpp/cl/S3Handle //test_ref/cpp/tdef/S3Handle //test_ref/cpp/tag/S3Handle //test_ref/cpp/econst/S3Handle //test_ref/cpp/struct/S3Handle //test_ref/cpp/clconst/S3Handle //test_ref/cpp/intf/S3Handle" --><span class="type">S3Handle</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/cl/FOO //test_ref/cpp/tdef/FOO //test_ref/cpp/tag/FOO //test_ref/cpp/econst/FOO //test_ref/cpp/struct/FOO //test_ref/cpp/clconst/FOO //test_ref/cpp/intf/FOO" --><span class="type">FOO</span><!-- /a -->&gt;(); 
	}  
END OF OBJECT


OBJECT: insert (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/insert //test_ref/cpp/clm/insert //test_ref/cpp/intfcm/insert //test_ref/cpp/intfm/insert //test_ref/cpp/func/insert //test_ref/cpp/ftmplt/insert //test_ref/cpp/defn/insert //test_ref/cpp/macro/insert" --><span class="function">insert</span><!-- /a -->(
	    <span class="param">FOO</span>,
	    <span class="param">BAR</span>); 
END OF OBJECT


OBJECT: CreateItemWithIdentifier (HeaderDoc::Function)
	<span class="keyword">virtual</span> <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/CreateItemWithIdentifier //test_ref/cpp/clm/CreateItemWithIdentifier //test_ref/cpp/intfcm/CreateItemWithIdentifier //test_ref/cpp/intfm/CreateItemWithIdentifier //test_ref/cpp/func/CreateItemWithIdentifier //test_ref/cpp/ftmplt/CreateItemWithIdentifier //test_ref/cpp/defn/CreateItemWithIdentifier //test_ref/cpp/macro/CreateItemWithIdentifier" --><span class="function">CreateItemWithIdentifier</span><!-- /a -->(
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/ACFString //test_ref/cpp/data/ACFString" --><span class="var">ACFString</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inIdentifier //test_ref/cpp/data/inIdentifier" --><span class="var">inIdentifier</span><!-- /a -->, 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/AEventParaneter //test_ref/cpp/data/AEventParaneter" --><span class="var">AEventParaneter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/CFTypeRef //test_ref/cpp/data/CFTypeRef" --><span class="var">CFTypeRef</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/inConfigData //test_ref/cpp/data/inConfigData" --><span class="var">inConfigData</span><!-- /a -->, 
	    <!-- a logicalPath="//test_ref/cpp/econst/AEventParameter //test_ref/cpp/data/AEventParameter" --><span class="var">AEventParameter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/HIToolbarItemRef //test_ref/cpp/data/HIToolbarItemRef" --><span class="var">HIToolbarItemRef</span><!-- /a -->,
	        <!-- a logicalPath="//test_ref/cpp/econst/AWriteOnly //test_ref/cpp/data/AWriteOnly" --><span class="var">AWriteOnly</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/outItem //test_ref/cpp/data/outItem" --><span class="var">outItem</span><!-- /a -->); 
END OF OBJECT


OBJECT: CreateItemWithIdentifier (HeaderDoc::Function)
	<span class="keyword">virtual</span> <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/CreateItemWithIdentifier //test_ref/cpp/clm/CreateItemWithIdentifier //test_ref/cpp/intfcm/CreateItemWithIdentifier //test_ref/cpp/intfm/CreateItemWithIdentifier //test_ref/cpp/func/CreateItemWithIdentifier //test_ref/cpp/ftmplt/CreateItemWithIdentifier //test_ref/cpp/defn/CreateItemWithIdentifier //test_ref/cpp/macro/CreateItemWithIdentifier" --><span class="function">CreateItemWithIdentifier</span><!-- /a -->(
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/ACFString //test_ref/cpp/data/ACFString" --><span class="var">ACFString</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inIdentifier //test_ref/cpp/data/inIdentifier" --><span class="var">inIdentifier</span><!-- /a -->, 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/AEventParaneter //test_ref/cpp/data/AEventParaneter" --><span class="var">AEventParaneter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/CFTypeRef //test_ref/cpp/data/CFTypeRef" --><span class="var">CFTypeRef</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/inConfigData //test_ref/cpp/data/inConfigData" --><span class="var">inConfigData</span><!-- /a -->, 
	    <!-- a logicalPath="//test_ref/cpp/econst/AEventParameter //test_ref/cpp/data/AEventParameter" --><span class="var">AEventParameter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/HIToolbarItemRef //test_ref/cpp/data/HIToolbarItemRef" --><span class="var">HIToolbarItemRef</span><!-- /a -->,
	        <!-- a logicalPath="//test_ref/cpp/econst/AWriteOnly //test_ref/cpp/data/AWriteOnly" --><span class="var">AWriteOnly</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/outItem //test_ref/cpp/data/outItem" --><span class="var">outItem</span><!-- /a -->); 
END OF OBJECT


OBJECT: operator S3Handle<FOO> (HeaderDoc::Function)
	<span class="keyword">template</span>&lt;<span class="template">class</span> <span class="template">FOO</span>&gt; <span class="keyword">operator</span> <!-- a logicalPath="//test_ref/cpp/cl/S3Handle //test_ref/cpp/tdef/S3Handle //test_ref/cpp/tag/S3Handle //test_ref/cpp/econst/S3Handle //test_ref/cpp/struct/S3Handle //test_ref/cpp/clconst/S3Handle //test_ref/cpp/intf/S3Handle" --><span class="type">S3Handle</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/cl/FOO //test_ref/cpp/tdef/FOO //test_ref/cpp/tag/FOO //test_ref/cpp/econst/FOO //test_ref/cpp/struct/FOO //test_ref/cpp/clconst/FOO //test_ref/cpp/intf/FOO" --><span class="type">FOO</span><!-- /a -->&gt;();
END OF OBJECT


OBJECT: operator S3Handle<FOO> (HeaderDoc::Function)
	<span class="keyword">template</span>&lt;<span class="template">class</span> <span class="template">FOO</span>&gt; <span class="keyword">operator</span> <!-- a logicalPath="//test_ref/cpp/cl/S3Handle //test_ref/cpp/tdef/S3Handle //test_ref/cpp/tag/S3Handle //test_ref/cpp/econst/S3Handle //test_ref/cpp/struct/S3Handle //test_ref/cpp/clconst/S3Handle //test_ref/cpp/intf/S3Handle" --><span class="type">S3Handle</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/cl/FOO //test_ref/cpp/tdef/FOO //test_ref/cpp/tag/FOO //test_ref/cpp/econst/FOO //test_ref/cpp/struct/FOO //test_ref/cpp/clconst/FOO //test_ref/cpp/intf/FOO" --><span class="type">FOO</span><!-- /a -->&gt;();
END OF OBJECT



$41117|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 1
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 0
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/template_2.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/template_2.test
$parserState->{ISFORWARDDECLARATION} => 0
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => -1
$parserState->{categoryClass} => 
$parserState->{classNameFound} => 1
$parserState->{classtype} => class
$parserState->{forceClassDone} => 1
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 16
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => 
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 3
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 0
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => template
$parserState->{preclasssodtype} => class
$parserState->{returntype} => template < class FOO, BAR > class 
This_Does_Contain_Templates  
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => This_Does_Contain_Templates
$parserState->{sodtype} => 
$parserState->{sodtypeclasstoken} => class
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 0
$parserState->{storeDec} => template < class FOO, BAR > class 

$parserState->{typestring} => template
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 16
typelist: class
namelist: This_Does_Contain_Templates
posstypes: 
value: 
returntype: 
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 7
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---template
+--- 
+---<
|   +---class
|   +--- 
|   +---FOO
|   +---,
|   +--- 
|   +---BAR
|   +--->
+---[ NEWLINE ]
+---class
+--- 
+---This_Does_Contain_Templates
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---    
|   +---public
|   +---:
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function insert
|   |   +---
@discussion insert new entry
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-bool (HAS STATE)
|   +--- 
|   +---insert
|   +---(
|   |   +---FOO
|   |   +---,
|   |   +--- 
|   |   +---BAR
|   |   +---)
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function commatest 
|   |   +---
@abstract Watch for extra line breaks
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-virtual (HAS STATE)
|   +--- 
|   +---bool
|   +--- 
|   +---CreateItemWithIdentifier
|   +---(
|   |   +---const
|   |   +--- 
|   |   +---ACFString
|   |   +--- 
|   |   +---&
|   |   +---inIdentifier
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---                
|   |   +---const
|   |   +--- 
|   |   +---AEventParaneter
|   |   +---<
|   |   |   +---CFTypeRef
|   |   |   +--->
|   |   +--- 
|   |   +---&
|   |   +---inConfigData
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---                
|   |   +---AEventParameter
|   |   +---<
|   |   |   +---HIToolbarItemRef
|   |   |   +---,
|   |   |   +---AWriteOnly
|   |   |   +--->
|   |   +--- 
|   |   +---&
|   |   +---outItem
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function S3Handle
|   |   +---
@discussion Hmm.
|   |   +---
@templatefield FOO the foo type.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-template (HAS STATE)
|   +---<
|   |   +---class
|   |   +--- 
|   |   +---FOO
|   |   +--->
|   +--- 
|   +---operator
|   +--- 
|   +---S3Handle
|   +---<
|   +---FOO
|   +--->
|   +---(
|   |   +---)
|   +--- 
|   +---;
|   +---[ NEWLINE ]
|   +---}
+---[ NEWLINE ]
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: template 2
APIUID: //test_ref/doc/header/template_2.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: <p></p>
LONG ATTRIBUTES: <p></p>
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::CPPClass
    NAME: This_Does_Contain_Templates This_Does_Contain_Templates
    APIUID: 
    ABSTRACT: ""
    DISCUSSION: "<p>This class does basic correlation of two data types
"
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::CPPClass"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: "This_Does_Contain_Templates"
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Declared In:</b> <a href="../../index.html" target="_top">template 2</a><br>
</p>
    LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: insert
        APIUID: //test_ref/cpp/instm/This_Does_Contain_TemplatesThis_Does_Contain_Templates/insert/bool/(FOO,BAR)
        ABSTRACT: ""
        DISCUSSION: "<p>insert new entry
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " bool"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: 
            TYPE:  FOO
            APIUID: //test_ref/cpp/internal_temporary_object/This_Does_Contain_TemplatesThis_Does_Contain_Templates
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: 
            TYPE:  BAR
            APIUID: //test_ref/cpp/internal_temporary_object/This_Does_Contain_TemplatesThis_Does_Contain_Templates
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: commatest
        APIUID: //test_ref/doc/title:instm/This_Does_Contain_TemplatesThis_Does_Contain_Templates/commatest/bool/(constACFString%26,constAEventParaneter%26,AEventParameter%26)
        ABSTRACT: "<p>Watch for extra line breaks
"
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " virtual bool"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inIdentifier
            TYPE: const ACFString &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inConfigData
            TYPE: const AEventParaneter &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: outItem
            TYPE: AEventParameter &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: CreateItemWithIdentifier
        APIUID: //test_ref/cpp/instm/This_Does_Contain_TemplatesThis_Does_Contain_Templates/CreateItemWithIdentifier/bool/(constACFString%26,constAEventParaneter%26,AEventParameter%26)
        ABSTRACT: "<p>Watch for extra line breaks
"
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " virtual bool"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inIdentifier
            TYPE: const ACFString &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inConfigData
            TYPE: const AEventParaneter &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: outItem
            TYPE: AEventParameter &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: S3Handle
        APIUID: //test_ref/cpp/instm/This_Does_Contain_TemplatesThis_Does_Contain_Templates/S3Handle/template%3CclassFOO%3E/()
        ABSTRACT: ""
        DISCUSSION: "<p>Hmm.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "         template< class FOO >"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: <b>Template Field:</b><div class='list_indent'><dl>
<dt><p>FOO</dt><dd>the foo type.</dd></dl></div>

        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator S3Handle<FOO>
        APIUID: //test_ref/cpp/instm/This_Does_Contain_TemplatesThis_Does_Contain_Templates/operator_S3Handle%3CFOO%3E/template%3CclassFOO%3E/()
        ABSTRACT: ""
        DISCUSSION: "<p>Hmm.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "         template< class FOO >"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: <b>Template Field:</b><div class='list_indent'><dl>
<dt><p>FOO</dt><dd>the foo type.</dd></dl></div>

        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: This_Does_Contain_Templates This_Does_Contain_Templates (HeaderDoc::CPPClass)
+---template
+--- 
+---<
|   +---class
|   +--- 
|   +---FOO
|   +---,
|   +--- 
|   +---BAR
|   +--->
+---[ NEWLINE ]
+---class
+--- 
+---This_Does_Contain_Templates
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---    
|   +---public
|   +---:
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function insert
|   |   +---
@discussion insert new entry
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-bool (HAS STATE)
|   +--- 
|   +---insert
|   +---(
|   |   +---FOO
|   |   +---,
|   |   +--- 
|   |   +---BAR
|   |   +---)
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function commatest 
|   |   +---
@abstract Watch for extra line breaks
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-virtual (HAS STATE)
|   +--- 
|   +---bool
|   +--- 
|   +---CreateItemWithIdentifier
|   +---(
|   |   +---const
|   |   +--- 
|   |   +---ACFString
|   |   +--- 
|   |   +---&
|   |   +---inIdentifier
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---                
|   |   +---const
|   |   +--- 
|   |   +---AEventParaneter
|   |   +---<
|   |   |   +---CFTypeRef
|   |   |   +--->
|   |   +--- 
|   |   +---&
|   |   +---inConfigData
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---                
|   |   +---AEventParameter
|   |   +---<
|   |   |   +---HIToolbarItemRef
|   |   |   +---,
|   |   |   +---AWriteOnly
|   |   |   +--->
|   |   +--- 
|   |   +---&
|   |   +---outItem
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function S3Handle
|   |   +---
@discussion Hmm.
|   |   +---
@templatefield FOO the foo type.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-template (HAS STATE)
|   +---<
|   |   +---class
|   |   +--- 
|   |   +---FOO
|   |   +--->
|   +--- 
|   +---operator
|   +--- 
|   +---S3Handle
|   +---<
|   +---FOO
|   +--->
|   +---(
|   |   +---)
|   +--- 
|   +---;
|   +---[ NEWLINE ]
|   +---}
+---[ NEWLINE ]
+---[ NEWLINE ]
END OF OBJECT


OBJECT: insert (HeaderDoc::Function)
+-*-bool (HAS STATE)
+--- 
+---insert
+---(
|   +---FOO
|   +---,
|   +--- 
|   +---BAR
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function commatest 
|   +---
@abstract Watch for extra line breaks
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+---        
+-*-virtual (HAS STATE)
+--- 
+---bool
+--- 
+---CreateItemWithIdentifier
+---(
|   +---const
|   +--- 
|   +---ACFString
|   +--- 
|   +---&
|   +---inIdentifier
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---const
|   +--- 
|   +---AEventParaneter
|   +---<
|   |   +---CFTypeRef
|   |   +--->
|   +--- 
|   +---&
|   +---inConfigData
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---AEventParameter
|   +---<
|   |   +---HIToolbarItemRef
|   |   +---,
|   |   +---AWriteOnly
|   |   +--->
|   +--- 
|   +---&
|   +---outItem
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function S3Handle
|   +---
@discussion Hmm.
|   +---
@templatefield FOO the foo type.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+---        
+-*-template (HAS STATE)
+---<
|   +---class
|   +--- 
|   +---FOO
|   +--->
+--- 
+---operator
+--- 
+---S3Handle
+---<
+---FOO
+--->
+---(
|   +---)
+--- 
+---;
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: CreateItemWithIdentifier (HeaderDoc::Function)
+-*-virtual (HAS STATE)
+--- 
+---bool
+--- 
+---CreateItemWithIdentifier
+---(
|   +---const
|   +--- 
|   +---ACFString
|   +--- 
|   +---&
|   +---inIdentifier
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---const
|   +--- 
|   +---AEventParaneter
|   +---<
|   |   +---CFTypeRef
|   |   +--->
|   +--- 
|   +---&
|   +---inConfigData
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---AEventParameter
|   +---<
|   |   +---HIToolbarItemRef
|   |   +---,
|   |   +---AWriteOnly
|   |   +--->
|   +--- 
|   +---&
|   +---outItem
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function S3Handle
|   +---
@discussion Hmm.
|   +---
@templatefield FOO the foo type.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+---        
+-*-template (HAS STATE)
+---<
|   +---class
|   +--- 
|   +---FOO
|   +--->
+--- 
+---operator
+--- 
+---S3Handle
+---<
+---FOO
+--->
+---(
|   +---)
+--- 
+---;
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: CreateItemWithIdentifier (HeaderDoc::Function)
+-*-virtual (HAS STATE)
+--- 
+---bool
+--- 
+---CreateItemWithIdentifier
+---(
|   +---const
|   +--- 
|   +---ACFString
|   +--- 
|   +---&
|   +---inIdentifier
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---const
|   +--- 
|   +---AEventParaneter
|   +---<
|   |   +---CFTypeRef
|   |   +--->
|   +--- 
|   +---&
|   +---inConfigData
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---AEventParameter
|   +---<
|   |   +---HIToolbarItemRef
|   |   +---,
|   |   +---AWriteOnly
|   |   +--->
|   +--- 
|   +---&
|   +---outItem
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function S3Handle
|   +---
@discussion Hmm.
|   +---
@templatefield FOO the foo type.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+---        
+-*-template (HAS STATE)
+---<
|   +---class
|   +--- 
|   +---FOO
|   +--->
+--- 
+---operator
+--- 
+---S3Handle
+---<
+---FOO
+--->
+---(
|   +---)
+--- 
+---;
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator S3Handle<FOO> (HeaderDoc::Function)
+-*-template (HAS STATE)
+---<
|   +---class
|   +--- 
|   +---FOO
|   +--->
+--- 
+---operator
+--- 
+---S3Handle
+---<
+---FOO
+--->
+---(
|   +---)
+--- 
+---;
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator S3Handle<FOO> (HeaderDoc::Function)
+-*-template (HAS STATE)
+---<
|   +---class
|   +--- 
|   +---FOO
|   +--->
+--- 
+---operator
+--- 
+---S3Handle
+---<
+---FOO
+--->
+---(
|   +---)
+--- 
+---;
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---}
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: This_Does_Contain_Templates This_Does_Contain_Templates (HeaderDoc::CPPClass)
	<span class="keyword">template</span> &lt;<span class="template">class</span> <span class="template">FOO</span>, <span class="template">BAR</span>&gt; <span class="keyword">class</span> <!-- a logicalPath="//test_ref/cpp/cl/This_Does_Contain_Templates //test_ref/cpp/tdef/This_Does_Contain_Templates //test_ref/cpp/tag/This_Does_Contain_Templates //test_ref/cpp/econst/This_Does_Contain_Templates //test_ref/cpp/struct/This_Does_Contain_Templates //test_ref/cpp/clconst/This_Does_Contain_Templates //test_ref/cpp/intf/This_Does_Contain_Templates" --><span class="type">This_Does_Contain_Templates</span><!-- /a --> { 
	    <span class="keyword">public</span>: <span class="comment">/*! @function insert
	@discussion insert new entry</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/insert //test_ref/cpp/clm/insert //test_ref/cpp/intfcm/insert //test_ref/cpp/intfm/insert //test_ref/cpp/func/insert //test_ref/cpp/ftmplt/insert //test_ref/cpp/defn/insert //test_ref/cpp/macro/insert" --><span class="function">insert</span><!-- /a -->(
	        <span class="param">FOO</span>,
	        <span class="param">BAR</span>);  
	    <span class="comment">/*! @function commatest 
	@abstract Watch for extra line breaks</span>
	        <span class="comment">*/</span>
	    <span class="keyword">virtual</span> <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/CreateItemWithIdentifier //test_ref/cpp/clm/CreateItemWithIdentifier //test_ref/cpp/intfcm/CreateItemWithIdentifier //test_ref/cpp/intfm/CreateItemWithIdentifier //test_ref/cpp/func/CreateItemWithIdentifier //test_ref/cpp/ftmplt/CreateItemWithIdentifier //test_ref/cpp/defn/CreateItemWithIdentifier //test_ref/cpp/macro/CreateItemWithIdentifier" --><span class="function">CreateItemWithIdentifier</span><!-- /a -->(
	        <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/ACFString //test_ref/cpp/data/ACFString" --><span class="var">ACFString</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inIdentifier //test_ref/cpp/data/inIdentifier" --><span class="var">inIdentifier</span><!-- /a -->, 
	        <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/AEventParaneter //test_ref/cpp/data/AEventParaneter" --><span class="var">AEventParaneter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/CFTypeRef //test_ref/cpp/data/CFTypeRef" --><span class="var">CFTypeRef</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/inConfigData //test_ref/cpp/data/inConfigData" --><span class="var">inConfigData</span><!-- /a -->, 
	        <!-- a logicalPath="//test_ref/cpp/econst/AEventParameter //test_ref/cpp/data/AEventParameter" --><span class="var">AEventParameter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/HIToolbarItemRef //test_ref/cpp/data/HIToolbarItemRef" --><span class="var">HIToolbarItemRef</span><!-- /a -->,
	            <!-- a logicalPath="//test_ref/cpp/econst/AWriteOnly //test_ref/cpp/data/AWriteOnly" --><span class="var">AWriteOnly</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/outItem //test_ref/cpp/data/outItem" --><span class="var">outItem</span><!-- /a -->);  
	    <span class="comment">/*! @function S3Handle
	@discussion Hmm.
	@templatefield FOO the foo type.</span>
	        <span class="comment">*/</span>
	    <span class="keyword">template</span>&lt;<span class="template">class</span> <span class="template">FOO</span>&gt; <span class="keyword">operator</span> <!-- a logicalPath="//test_ref/cpp/cl/S3Handle //test_ref/cpp/tdef/S3Handle //test_ref/cpp/tag/S3Handle //test_ref/cpp/econst/S3Handle //test_ref/cpp/struct/S3Handle //test_ref/cpp/clconst/S3Handle //test_ref/cpp/intf/S3Handle" --><span class="type">S3Handle</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/cl/FOO //test_ref/cpp/tdef/FOO //test_ref/cpp/tag/FOO //test_ref/cpp/econst/FOO //test_ref/cpp/struct/FOO //test_ref/cpp/clconst/FOO //test_ref/cpp/intf/FOO" --><span class="type">FOO</span><!-- /a -->&gt;(); 
	}  
END OF OBJECT


OBJECT: insert (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/insert //test_ref/cpp/clm/insert //test_ref/cpp/intfcm/insert //test_ref/cpp/intfm/insert //test_ref/cpp/func/insert //test_ref/cpp/ftmplt/insert //test_ref/cpp/defn/insert //test_ref/cpp/macro/insert" --><span class="function">insert</span><!-- /a -->(
	    <span class="param">FOO</span>,
	    <span class="param">BAR</span>); 
END OF OBJECT


OBJECT: CreateItemWithIdentifier (HeaderDoc::Function)
	<span class="keyword">virtual</span> <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/CreateItemWithIdentifier //test_ref/cpp/clm/CreateItemWithIdentifier //test_ref/cpp/intfcm/CreateItemWithIdentifier //test_ref/cpp/intfm/CreateItemWithIdentifier //test_ref/cpp/func/CreateItemWithIdentifier //test_ref/cpp/ftmplt/CreateItemWithIdentifier //test_ref/cpp/defn/CreateItemWithIdentifier //test_ref/cpp/macro/CreateItemWithIdentifier" --><span class="function">CreateItemWithIdentifier</span><!-- /a -->(
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/ACFString //test_ref/cpp/data/ACFString" --><span class="var">ACFString</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inIdentifier //test_ref/cpp/data/inIdentifier" --><span class="var">inIdentifier</span><!-- /a -->, 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/AEventParaneter //test_ref/cpp/data/AEventParaneter" --><span class="var">AEventParaneter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/CFTypeRef //test_ref/cpp/data/CFTypeRef" --><span class="var">CFTypeRef</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/inConfigData //test_ref/cpp/data/inConfigData" --><span class="var">inConfigData</span><!-- /a -->, 
	    <!-- a logicalPath="//test_ref/cpp/econst/AEventParameter //test_ref/cpp/data/AEventParameter" --><span class="var">AEventParameter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/HIToolbarItemRef //test_ref/cpp/data/HIToolbarItemRef" --><span class="var">HIToolbarItemRef</span><!-- /a -->,
	        <!-- a logicalPath="//test_ref/cpp/econst/AWriteOnly //test_ref/cpp/data/AWriteOnly" --><span class="var">AWriteOnly</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/outItem //test_ref/cpp/data/outItem" --><span class="var">outItem</span><!-- /a -->); 
END OF OBJECT


OBJECT: CreateItemWithIdentifier (HeaderDoc::Function)
	<span class="keyword">virtual</span> <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/CreateItemWithIdentifier //test_ref/cpp/clm/CreateItemWithIdentifier //test_ref/cpp/intfcm/CreateItemWithIdentifier //test_ref/cpp/intfm/CreateItemWithIdentifier //test_ref/cpp/func/CreateItemWithIdentifier //test_ref/cpp/ftmplt/CreateItemWithIdentifier //test_ref/cpp/defn/CreateItemWithIdentifier //test_ref/cpp/macro/CreateItemWithIdentifier" --><span class="function">CreateItemWithIdentifier</span><!-- /a -->(
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/ACFString //test_ref/cpp/data/ACFString" --><span class="var">ACFString</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inIdentifier //test_ref/cpp/data/inIdentifier" --><span class="var">inIdentifier</span><!-- /a -->, 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/AEventParaneter //test_ref/cpp/data/AEventParaneter" --><span class="var">AEventParaneter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/CFTypeRef //test_ref/cpp/data/CFTypeRef" --><span class="var">CFTypeRef</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/inConfigData //test_ref/cpp/data/inConfigData" --><span class="var">inConfigData</span><!-- /a -->, 
	    <!-- a logicalPath="//test_ref/cpp/econst/AEventParameter //test_ref/cpp/data/AEventParameter" --><span class="var">AEventParameter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/HIToolbarItemRef //test_ref/cpp/data/HIToolbarItemRef" --><span class="var">HIToolbarItemRef</span><!-- /a -->,
	        <!-- a logicalPath="//test_ref/cpp/econst/AWriteOnly //test_ref/cpp/data/AWriteOnly" --><span class="var">AWriteOnly</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/outItem //test_ref/cpp/data/outItem" --><span class="var">outItem</span><!-- /a -->); 
END OF OBJECT


OBJECT: operator S3Handle<FOO> (HeaderDoc::Function)
	<span class="keyword">template</span>&lt;<span class="template">class</span> <span class="template">FOO</span>&gt; <span class="keyword">operator</span> <!-- a logicalPath="//test_ref/cpp/cl/S3Handle //test_ref/cpp/tdef/S3Handle //test_ref/cpp/tag/S3Handle //test_ref/cpp/econst/S3Handle //test_ref/cpp/struct/S3Handle //test_ref/cpp/clconst/S3Handle //test_ref/cpp/intf/S3Handle" --><span class="type">S3Handle</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/cl/FOO //test_ref/cpp/tdef/FOO //test_ref/cpp/tag/FOO //test_ref/cpp/econst/FOO //test_ref/cpp/struct/FOO //test_ref/cpp/clconst/FOO //test_ref/cpp/intf/FOO" --><span class="type">FOO</span><!-- /a -->&gt;();
END OF OBJECT


OBJECT: operator S3Handle<FOO> (HeaderDoc::Function)
	<span class="keyword">template</span>&lt;<span class="template">class</span> <span class="template">FOO</span>&gt; <span class="keyword">operator</span> <!-- a logicalPath="//test_ref/cpp/cl/S3Handle //test_ref/cpp/tdef/S3Handle //test_ref/cpp/tag/S3Handle //test_ref/cpp/econst/S3Handle //test_ref/cpp/struct/S3Handle //test_ref/cpp/clconst/S3Handle //test_ref/cpp/intf/S3Handle" --><span class="type">S3Handle</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/cl/FOO //test_ref/cpp/tdef/FOO //test_ref/cpp/tag/FOO //test_ref/cpp/econst/FOO //test_ref/cpp/struct/FOO //test_ref/cpp/clconst/FOO //test_ref/cpp/intf/FOO" --><span class="type">FOO</span><!-- /a -->&gt;();
END OF OBJECT



_$38|testsuite/parser_tests/template_2.test$1|C$10|template 2$41117|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 1
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 0
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/template_2.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/template_2.test
$parserState->{ISFORWARDDECLARATION} => 0
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => -1
$parserState->{categoryClass} => 
$parserState->{classNameFound} => 1
$parserState->{classtype} => class
$parserState->{forceClassDone} => 1
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 16
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => 
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 3
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 0
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => template
$parserState->{preclasssodtype} => class
$parserState->{returntype} => template < class FOO, BAR > class 
This_Does_Contain_Templates  
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => This_Does_Contain_Templates
$parserState->{sodtype} => 
$parserState->{sodtypeclasstoken} => class
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 0
$parserState->{storeDec} => template < class FOO, BAR > class 

$parserState->{typestring} => template
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 16
typelist: class
namelist: This_Does_Contain_Templates
posstypes: 
value: 
returntype: 
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 7
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---template
+--- 
+---<
|   +---class
|   +--- 
|   +---FOO
|   +---,
|   +--- 
|   +---BAR
|   +--->
+---[ NEWLINE ]
+---class
+--- 
+---This_Does_Contain_Templates
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---    
|   +---public
|   +---:
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function insert
|   |   +---
@discussion insert new entry
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-bool (HAS STATE)
|   +--- 
|   +---insert
|   +---(
|   |   +---FOO
|   |   +---,
|   |   +--- 
|   |   +---BAR
|   |   +---)
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function commatest 
|   |   +---
@abstract Watch for extra line breaks
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-virtual (HAS STATE)
|   +--- 
|   +---bool
|   +--- 
|   +---CreateItemWithIdentifier
|   +---(
|   |   +---const
|   |   +--- 
|   |   +---ACFString
|   |   +--- 
|   |   +---&
|   |   +---inIdentifier
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---                
|   |   +---const
|   |   +--- 
|   |   +---AEventParaneter
|   |   +---<
|   |   |   +---CFTypeRef
|   |   |   +--->
|   |   +--- 
|   |   +---&
|   |   +---inConfigData
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---                
|   |   +---AEventParameter
|   |   +---<
|   |   |   +---HIToolbarItemRef
|   |   |   +---,
|   |   |   +---AWriteOnly
|   |   |   +--->
|   |   +--- 
|   |   +---&
|   |   +---outItem
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function S3Handle
|   |   +---
@discussion Hmm.
|   |   +---
@templatefield FOO the foo type.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-template (HAS STATE)
|   +---<
|   |   +---class
|   |   +--- 
|   |   +---FOO
|   |   +--->
|   +--- 
|   +---operator
|   +--- 
|   +---S3Handle
|   +---<
|   +---FOO
|   +--->
|   +---(
|   |   +---)
|   +--- 
|   +---;
|   +---[ NEWLINE ]
|   +---}
+---[ NEWLINE ]
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: template 2
APIUID: //test_ref/doc/header/template_2.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: <p></p>
LONG ATTRIBUTES: <p></p>
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::CPPClass
    NAME: This_Does_Contain_Templates This_Does_Contain_Templates
    APIUID: 
    ABSTRACT: ""
    DISCUSSION: "<p>This class does basic correlation of two data types
"
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::CPPClass"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: "This_Does_Contain_Templates"
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Declared In:</b> <a href="../../index.html" target="_top">template 2</a><br>
</p>
    LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: insert
        APIUID: //test_ref/cpp/instm/This_Does_Contain_TemplatesThis_Does_Contain_Templates/insert/bool/(FOO,BAR)
        ABSTRACT: ""
        DISCUSSION: "<p>insert new entry
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " bool"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: 
            TYPE:  FOO
            APIUID: //test_ref/cpp/internal_temporary_object/This_Does_Contain_TemplatesThis_Does_Contain_Templates
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: 
            TYPE:  BAR
            APIUID: //test_ref/cpp/internal_temporary_object/This_Does_Contain_TemplatesThis_Does_Contain_Templates
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: commatest
        APIUID: //test_ref/doc/title:instm/This_Does_Contain_TemplatesThis_Does_Contain_Templates/commatest/bool/(constACFString%26,constAEventParaneter%26,AEventParameter%26)
        ABSTRACT: "<p>Watch for extra line breaks
"
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " virtual bool"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inIdentifier
            TYPE: const ACFString &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inConfigData
            TYPE: const AEventParaneter &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: outItem
            TYPE: AEventParameter &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: CreateItemWithIdentifier
        APIUID: //test_ref/cpp/instm/This_Does_Contain_TemplatesThis_Does_Contain_Templates/CreateItemWithIdentifier/bool/(constACFString%26,constAEventParaneter%26,AEventParameter%26)
        ABSTRACT: "<p>Watch for extra line breaks
"
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " virtual bool"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inIdentifier
            TYPE: const ACFString &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inConfigData
            TYPE: const AEventParaneter &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: outItem
            TYPE: AEventParameter &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: S3Handle
        APIUID: //test_ref/cpp/instm/This_Does_Contain_TemplatesThis_Does_Contain_Templates/S3Handle/template%3CclassFOO%3E/()
        ABSTRACT: ""
        DISCUSSION: "<p>Hmm.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "         template< class FOO >"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: <b>Template Field:</b><div class='list_indent'><dl>
<dt><p>FOO</dt><dd>the foo type.</dd></dl></div>

        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator S3Handle<FOO>
        APIUID: //test_ref/cpp/instm/This_Does_Contain_TemplatesThis_Does_Contain_Templates/operator_S3Handle%3CFOO%3E/template%3CclassFOO%3E/()
        ABSTRACT: ""
        DISCUSSION: "<p>Hmm.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "         template< class FOO >"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: <b>Template Field:</b><div class='list_indent'><dl>
<dt><p>FOO</dt><dd>the foo type.</dd></dl></div>

        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: This_Does_Contain_Templates This_Does_Contain_Templates (HeaderDoc::CPPClass)
+---template
+--- 
+---<
|   +---class
|   +--- 
|   +---FOO
|   +---,
|   +--- 
|   +---BAR
|   +--->
+---[ NEWLINE ]
+---class
+--- 
+---This_Does_Contain_Templates
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---    
|   +---public
|   +---:
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function insert
|   |   +---
@discussion insert new entry
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-bool (HAS STATE)
|   +--- 
|   +---insert
|   +---(
|   |   +---FOO
|   |   +---,
|   |   +--- 
|   |   +---BAR
|   |   +---)
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function commatest 
|   |   +---
@abstract Watch for extra line breaks
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-virtual (HAS STATE)
|   +--- 
|   +---bool
|   +--- 
|   +---CreateItemWithIdentifier
|   +---(
|   |   +---const
|   |   +--- 
|   |   +---ACFString
|   |   +--- 
|   |   +---&
|   |   +---inIdentifier
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---                
|   |   +---const
|   |   +--- 
|   |   +---AEventParaneter
|   |   +---<
|   |   |   +---CFTypeRef
|   |   |   +--->
|   |   +--- 
|   |   +---&
|   |   +---inConfigData
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---                
|   |   +---AEventParameter
|   |   +---<
|   |   |   +---HIToolbarItemRef
|   |   |   +---,
|   |   |   +---AWriteOnly
|   |   |   +--->
|   |   +--- 
|   |   +---&
|   |   +---outItem
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function S3Handle
|   |   +---
@discussion Hmm.
|   |   +---
@templatefield FOO the foo type.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-template (HAS STATE)
|   +---<
|   |   +---class
|   |   +--- 
|   |   +---FOO
|   |   +--->
|   +--- 
|   +---operator
|   +--- 
|   +---S3Handle
|   +---<
|   +---FOO
|   +--->
|   +---(
|   |   +---)
|   +--- 
|   +---;
|   +---[ NEWLINE ]
|   +---}
+---[ NEWLINE ]
+---[ NEWLINE ]
END OF OBJECT


OBJECT: insert (HeaderDoc::Function)
+-*-bool (HAS STATE)
+--- 
+---insert
+---(
|   +---FOO
|   +---,
|   +--- 
|   +---BAR
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function commatest 
|   +---
@abstract Watch for extra line breaks
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+---        
+-*-virtual (HAS STATE)
+--- 
+---bool
+--- 
+---CreateItemWithIdentifier
+---(
|   +---const
|   +--- 
|   +---ACFString
|   +--- 
|   +---&
|   +---inIdentifier
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---const
|   +--- 
|   +---AEventParaneter
|   +---<
|   |   +---CFTypeRef
|   |   +--->
|   +--- 
|   +---&
|   +---inConfigData
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---AEventParameter
|   +---<
|   |   +---HIToolbarItemRef
|   |   +---,
|   |   +---AWriteOnly
|   |   +--->
|   +--- 
|   +---&
|   +---outItem
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function S3Handle
|   +---
@discussion Hmm.
|   +---
@templatefield FOO the foo type.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+---        
+-*-template (HAS STATE)
+---<
|   +---class
|   +--- 
|   +---FOO
|   +--->
+--- 
+---operator
+--- 
+---S3Handle
+---<
+---FOO
+--->
+---(
|   +---)
+--- 
+---;
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: CreateItemWithIdentifier (HeaderDoc::Function)
+-*-virtual (HAS STATE)
+--- 
+---bool
+--- 
+---CreateItemWithIdentifier
+---(
|   +---const
|   +--- 
|   +---ACFString
|   +--- 
|   +---&
|   +---inIdentifier
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---const
|   +--- 
|   +---AEventParaneter
|   +---<
|   |   +---CFTypeRef
|   |   +--->
|   +--- 
|   +---&
|   +---inConfigData
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---AEventParameter
|   +---<
|   |   +---HIToolbarItemRef
|   |   +---,
|   |   +---AWriteOnly
|   |   +--->
|   +--- 
|   +---&
|   +---outItem
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function S3Handle
|   +---
@discussion Hmm.
|   +---
@templatefield FOO the foo type.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+---        
+-*-template (HAS STATE)
+---<
|   +---class
|   +--- 
|   +---FOO
|   +--->
+--- 
+---operator
+--- 
+---S3Handle
+---<
+---FOO
+--->
+---(
|   +---)
+--- 
+---;
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: CreateItemWithIdentifier (HeaderDoc::Function)
+-*-virtual (HAS STATE)
+--- 
+---bool
+--- 
+---CreateItemWithIdentifier
+---(
|   +---const
|   +--- 
|   +---ACFString
|   +--- 
|   +---&
|   +---inIdentifier
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---const
|   +--- 
|   +---AEventParaneter
|   +---<
|   |   +---CFTypeRef
|   |   +--->
|   +--- 
|   +---&
|   +---inConfigData
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---AEventParameter
|   +---<
|   |   +---HIToolbarItemRef
|   |   +---,
|   |   +---AWriteOnly
|   |   +--->
|   +--- 
|   +---&
|   +---outItem
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function S3Handle
|   +---
@discussion Hmm.
|   +---
@templatefield FOO the foo type.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+---        
+-*-template (HAS STATE)
+---<
|   +---class
|   +--- 
|   +---FOO
|   +--->
+--- 
+---operator
+--- 
+---S3Handle
+---<
+---FOO
+--->
+---(
|   +---)
+--- 
+---;
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator S3Handle<FOO> (HeaderDoc::Function)
+-*-template (HAS STATE)
+---<
|   +---class
|   +--- 
|   +---FOO
|   +--->
+--- 
+---operator
+--- 
+---S3Handle
+---<
+---FOO
+--->
+---(
|   +---)
+--- 
+---;
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator S3Handle<FOO> (HeaderDoc::Function)
+-*-template (HAS STATE)
+---<
|   +---class
|   +--- 
|   +---FOO
|   +--->
+--- 
+---operator
+--- 
+---S3Handle
+---<
+---FOO
+--->
+---(
|   +---)
+--- 
+---;
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---}
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: This_Does_Contain_Templates This_Does_Contain_Templates (HeaderDoc::CPPClass)
	<span class="keyword">template</span> &lt;<span class="template">class</span> <span class="template">FOO</span>, <span class="template">BAR</span>&gt; <span class="keyword">class</span> <!-- a logicalPath="//test_ref/cpp/cl/This_Does_Contain_Templates //test_ref/cpp/tdef/This_Does_Contain_Templates //test_ref/cpp/tag/This_Does_Contain_Templates //test_ref/cpp/econst/This_Does_Contain_Templates //test_ref/cpp/struct/This_Does_Contain_Templates //test_ref/cpp/clconst/This_Does_Contain_Templates //test_ref/cpp/intf/This_Does_Contain_Templates" --><span class="type">This_Does_Contain_Templates</span><!-- /a --> { 
	    <span class="keyword">public</span>: <span class="comment">/*! @function insert
	@discussion insert new entry</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/insert //test_ref/cpp/clm/insert //test_ref/cpp/intfcm/insert //test_ref/cpp/intfm/insert //test_ref/cpp/func/insert //test_ref/cpp/ftmplt/insert //test_ref/cpp/defn/insert //test_ref/cpp/macro/insert" --><span class="function">insert</span><!-- /a -->(
	        <span class="param">FOO</span>,
	        <span class="param">BAR</span>);  
	    <span class="comment">/*! @function commatest 
	@abstract Watch for extra line breaks</span>
	        <span class="comment">*/</span>
	    <span class="keyword">virtual</span> <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/CreateItemWithIdentifier //test_ref/cpp/clm/CreateItemWithIdentifier //test_ref/cpp/intfcm/CreateItemWithIdentifier //test_ref/cpp/intfm/CreateItemWithIdentifier //test_ref/cpp/func/CreateItemWithIdentifier //test_ref/cpp/ftmplt/CreateItemWithIdentifier //test_ref/cpp/defn/CreateItemWithIdentifier //test_ref/cpp/macro/CreateItemWithIdentifier" --><span class="function">CreateItemWithIdentifier</span><!-- /a -->(
	        <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/ACFString //test_ref/cpp/data/ACFString" --><span class="var">ACFString</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inIdentifier //test_ref/cpp/data/inIdentifier" --><span class="var">inIdentifier</span><!-- /a -->, 
	        <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/AEventParaneter //test_ref/cpp/data/AEventParaneter" --><span class="var">AEventParaneter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/CFTypeRef //test_ref/cpp/data/CFTypeRef" --><span class="var">CFTypeRef</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/inConfigData //test_ref/cpp/data/inConfigData" --><span class="var">inConfigData</span><!-- /a -->, 
	        <!-- a logicalPath="//test_ref/cpp/econst/AEventParameter //test_ref/cpp/data/AEventParameter" --><span class="var">AEventParameter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/HIToolbarItemRef //test_ref/cpp/data/HIToolbarItemRef" --><span class="var">HIToolbarItemRef</span><!-- /a -->,
	            <!-- a logicalPath="//test_ref/cpp/econst/AWriteOnly //test_ref/cpp/data/AWriteOnly" --><span class="var">AWriteOnly</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/outItem //test_ref/cpp/data/outItem" --><span class="var">outItem</span><!-- /a -->);  
	    <span class="comment">/*! @function S3Handle
	@discussion Hmm.
	@templatefield FOO the foo type.</span>
	        <span class="comment">*/</span>
	    <span class="keyword">template</span>&lt;<span class="template">class</span> <span class="template">FOO</span>&gt; <span class="keyword">operator</span> <!-- a logicalPath="//test_ref/cpp/cl/S3Handle //test_ref/cpp/tdef/S3Handle //test_ref/cpp/tag/S3Handle //test_ref/cpp/econst/S3Handle //test_ref/cpp/struct/S3Handle //test_ref/cpp/clconst/S3Handle //test_ref/cpp/intf/S3Handle" --><span class="type">S3Handle</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/cl/FOO //test_ref/cpp/tdef/FOO //test_ref/cpp/tag/FOO //test_ref/cpp/econst/FOO //test_ref/cpp/struct/FOO //test_ref/cpp/clconst/FOO //test_ref/cpp/intf/FOO" --><span class="type">FOO</span><!-- /a -->&gt;(); 
	}  
END OF OBJECT


OBJECT: insert (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/insert //test_ref/cpp/clm/insert //test_ref/cpp/intfcm/insert //test_ref/cpp/intfm/insert //test_ref/cpp/func/insert //test_ref/cpp/ftmplt/insert //test_ref/cpp/defn/insert //test_ref/cpp/macro/insert" --><span class="function">insert</span><!-- /a -->(
	    <span class="param">FOO</span>,
	    <span class="param">BAR</span>); 
END OF OBJECT


OBJECT: CreateItemWithIdentifier (HeaderDoc::Function)
	<span class="keyword">virtual</span> <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/CreateItemWithIdentifier //test_ref/cpp/clm/CreateItemWithIdentifier //test_ref/cpp/intfcm/CreateItemWithIdentifier //test_ref/cpp/intfm/CreateItemWithIdentifier //test_ref/cpp/func/CreateItemWithIdentifier //test_ref/cpp/ftmplt/CreateItemWithIdentifier //test_ref/cpp/defn/CreateItemWithIdentifier //test_ref/cpp/macro/CreateItemWithIdentifier" --><span class="function">CreateItemWithIdentifier</span><!-- /a -->(
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/ACFString //test_ref/cpp/data/ACFString" --><span class="var">ACFString</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inIdentifier //test_ref/cpp/data/inIdentifier" --><span class="var">inIdentifier</span><!-- /a -->, 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/AEventParaneter //test_ref/cpp/data/AEventParaneter" --><span class="var">AEventParaneter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/CFTypeRef //test_ref/cpp/data/CFTypeRef" --><span class="var">CFTypeRef</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/inConfigData //test_ref/cpp/data/inConfigData" --><span class="var">inConfigData</span><!-- /a -->, 
	    <!-- a logicalPath="//test_ref/cpp/econst/AEventParameter //test_ref/cpp/data/AEventParameter" --><span class="var">AEventParameter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/HIToolbarItemRef //test_ref/cpp/data/HIToolbarItemRef" --><span class="var">HIToolbarItemRef</span><!-- /a -->,
	        <!-- a logicalPath="//test_ref/cpp/econst/AWriteOnly //test_ref/cpp/data/AWriteOnly" --><span class="var">AWriteOnly</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/outItem //test_ref/cpp/data/outItem" --><span class="var">outItem</span><!-- /a -->); 
END OF OBJECT


OBJECT: CreateItemWithIdentifier (HeaderDoc::Function)
	<span class="keyword">virtual</span> <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/CreateItemWithIdentifier //test_ref/cpp/clm/CreateItemWithIdentifier //test_ref/cpp/intfcm/CreateItemWithIdentifier //test_ref/cpp/intfm/CreateItemWithIdentifier //test_ref/cpp/func/CreateItemWithIdentifier //test_ref/cpp/ftmplt/CreateItemWithIdentifier //test_ref/cpp/defn/CreateItemWithIdentifier //test_ref/cpp/macro/CreateItemWithIdentifier" --><span class="function">CreateItemWithIdentifier</span><!-- /a -->(
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/ACFString //test_ref/cpp/data/ACFString" --><span class="var">ACFString</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inIdentifier //test_ref/cpp/data/inIdentifier" --><span class="var">inIdentifier</span><!-- /a -->, 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/AEventParaneter //test_ref/cpp/data/AEventParaneter" --><span class="var">AEventParaneter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/CFTypeRef //test_ref/cpp/data/CFTypeRef" --><span class="var">CFTypeRef</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/inConfigData //test_ref/cpp/data/inConfigData" --><span class="var">inConfigData</span><!-- /a -->, 
	    <!-- a logicalPath="//test_ref/cpp/econst/AEventParameter //test_ref/cpp/data/AEventParameter" --><span class="var">AEventParameter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/HIToolbarItemRef //test_ref/cpp/data/HIToolbarItemRef" --><span class="var">HIToolbarItemRef</span><!-- /a -->,
	        <!-- a logicalPath="//test_ref/cpp/econst/AWriteOnly //test_ref/cpp/data/AWriteOnly" --><span class="var">AWriteOnly</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/outItem //test_ref/cpp/data/outItem" --><span class="var">outItem</span><!-- /a -->); 
END OF OBJECT


OBJECT: operator S3Handle<FOO> (HeaderDoc::Function)
	<span class="keyword">template</span>&lt;<span class="template">class</span> <span class="template">FOO</span>&gt; <span class="keyword">operator</span> <!-- a logicalPath="//test_ref/cpp/cl/S3Handle //test_ref/cpp/tdef/S3Handle //test_ref/cpp/tag/S3Handle //test_ref/cpp/econst/S3Handle //test_ref/cpp/struct/S3Handle //test_ref/cpp/clconst/S3Handle //test_ref/cpp/intf/S3Handle" --><span class="type">S3Handle</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/cl/FOO //test_ref/cpp/tdef/FOO //test_ref/cpp/tag/FOO //test_ref/cpp/econst/FOO //test_ref/cpp/struct/FOO //test_ref/cpp/clconst/FOO //test_ref/cpp/intf/FOO" --><span class="type">FOO</span><!-- /a -->&gt;();
END OF OBJECT


OBJECT: operator S3Handle<FOO> (HeaderDoc::Function)
	<span class="keyword">template</span>&lt;<span class="template">class</span> <span class="template">FOO</span>&gt; <span class="keyword">operator</span> <!-- a logicalPath="//test_ref/cpp/cl/S3Handle //test_ref/cpp/tdef/S3Handle //test_ref/cpp/tag/S3Handle //test_ref/cpp/econst/S3Handle //test_ref/cpp/struct/S3Handle //test_ref/cpp/clconst/S3Handle //test_ref/cpp/intf/S3Handle" --><span class="type">S3Handle</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/cl/FOO //test_ref/cpp/tdef/FOO //test_ref/cpp/tag/FOO //test_ref/cpp/econst/FOO //test_ref/cpp/struct/FOO //test_ref/cpp/clconst/FOO //test_ref/cpp/intf/FOO" --><span class="type">FOO</span><!-- /a -->&gt;();
END OF OBJECT



$41117|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 1
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 0
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/template_2.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/template_2.test
$parserState->{ISFORWARDDECLARATION} => 0
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => -1
$parserState->{categoryClass} => 
$parserState->{classNameFound} => 1
$parserState->{classtype} => class
$parserState->{forceClassDone} => 1
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 16
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => 
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 3
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 0
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => template
$parserState->{preclasssodtype} => class
$parserState->{returntype} => template < class FOO, BAR > class 
This_Does_Contain_Templates  
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => This_Does_Contain_Templates
$parserState->{sodtype} => 
$parserState->{sodtypeclasstoken} => class
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 0
$parserState->{storeDec} => template < class FOO, BAR > class 

$parserState->{typestring} => template
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 16
typelist: class
namelist: This_Does_Contain_Templates
posstypes: 
value: 
returntype: 
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 7
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---template
+--- 
+---<
|   +---class
|   +--- 
|   +---FOO
|   +---,
|   +--- 
|   +---BAR
|   +--->
+---[ NEWLINE ]
+---class
+--- 
+---This_Does_Contain_Templates
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---    
|   +---public
|   +---:
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function insert
|   |   +---
@discussion insert new entry
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-bool (HAS STATE)
|   +--- 
|   +---insert
|   +---(
|   |   +---FOO
|   |   +---,
|   |   +--- 
|   |   +---BAR
|   |   +---)
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function commatest 
|   |   +---
@abstract Watch for extra line breaks
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-virtual (HAS STATE)
|   +--- 
|   +---bool
|   +--- 
|   +---CreateItemWithIdentifier
|   +---(
|   |   +---const
|   |   +--- 
|   |   +---ACFString
|   |   +--- 
|   |   +---&
|   |   +---inIdentifier
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---                
|   |   +---const
|   |   +--- 
|   |   +---AEventParaneter
|   |   +---<
|   |   |   +---CFTypeRef
|   |   |   +--->
|   |   +--- 
|   |   +---&
|   |   +---inConfigData
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---                
|   |   +---AEventParameter
|   |   +---<
|   |   |   +---HIToolbarItemRef
|   |   |   +---,
|   |   |   +---AWriteOnly
|   |   |   +--->
|   |   +--- 
|   |   +---&
|   |   +---outItem
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function S3Handle
|   |   +---
@discussion Hmm.
|   |   +---
@templatefield FOO the foo type.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-template (HAS STATE)
|   +---<
|   |   +---class
|   |   +--- 
|   |   +---FOO
|   |   +--->
|   +--- 
|   +---operator
|   +--- 
|   +---S3Handle
|   +---<
|   +---FOO
|   +--->
|   +---(
|   |   +---)
|   +--- 
|   +---;
|   +---[ NEWLINE ]
|   +---}
+---[ NEWLINE ]
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: template 2
APIUID: //test_ref/doc/header/template_2.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: <p></p>
LONG ATTRIBUTES: <p></p>
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::CPPClass
    NAME: This_Does_Contain_Templates This_Does_Contain_Templates
    APIUID: 
    ABSTRACT: ""
    DISCUSSION: "<p>This class does basic correlation of two data types
"
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::CPPClass"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: "This_Does_Contain_Templates"
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Declared In:</b> <a href="../../index.html" target="_top">template 2</a><br>
</p>
    LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: insert
        APIUID: //test_ref/cpp/instm/This_Does_Contain_TemplatesThis_Does_Contain_Templates/insert/bool/(FOO,BAR)
        ABSTRACT: ""
        DISCUSSION: "<p>insert new entry
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " bool"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: 
            TYPE:  FOO
            APIUID: //test_ref/cpp/internal_temporary_object/This_Does_Contain_TemplatesThis_Does_Contain_Templates
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: 
            TYPE:  BAR
            APIUID: //test_ref/cpp/internal_temporary_object/This_Does_Contain_TemplatesThis_Does_Contain_Templates
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: commatest
        APIUID: //test_ref/doc/title:instm/This_Does_Contain_TemplatesThis_Does_Contain_Templates/commatest/bool/(constACFString%26,constAEventParaneter%26,AEventParameter%26)
        ABSTRACT: "<p>Watch for extra line breaks
"
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " virtual bool"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inIdentifier
            TYPE: const ACFString &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inConfigData
            TYPE: const AEventParaneter &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: outItem
            TYPE: AEventParameter &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: CreateItemWithIdentifier
        APIUID: //test_ref/cpp/instm/This_Does_Contain_TemplatesThis_Does_Contain_Templates/CreateItemWithIdentifier/bool/(constACFString%26,constAEventParaneter%26,AEventParameter%26)
        ABSTRACT: "<p>Watch for extra line breaks
"
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " virtual bool"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inIdentifier
            TYPE: const ACFString &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inConfigData
            TYPE: const AEventParaneter &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: outItem
            TYPE: AEventParameter &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: S3Handle
        APIUID: //test_ref/cpp/instm/This_Does_Contain_TemplatesThis_Does_Contain_Templates/S3Handle/template%3CclassFOO%3E/()
        ABSTRACT: ""
        DISCUSSION: "<p>Hmm.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "         template< class FOO >"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: <b>Template Field:</b><div class='list_indent'><dl>
<dt><p>FOO</dt><dd>the foo type.</dd></dl></div>

        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator S3Handle<FOO>
        APIUID: //test_ref/cpp/instm/This_Does_Contain_TemplatesThis_Does_Contain_Templates/operator_S3Handle%3CFOO%3E/template%3CclassFOO%3E/()
        ABSTRACT: ""
        DISCUSSION: "<p>Hmm.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "         template< class FOO >"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: <b>Template Field:</b><div class='list_indent'><dl>
<dt><p>FOO</dt><dd>the foo type.</dd></dl></div>

        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: This_Does_Contain_Templates This_Does_Contain_Templates (HeaderDoc::CPPClass)
+---template
+--- 
+---<
|   +---class
|   +--- 
|   +---FOO
|   +---,
|   +--- 
|   +---BAR
|   +--->
+---[ NEWLINE ]
+---class
+--- 
+---This_Does_Contain_Templates
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---    
|   +---public
|   +---:
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function insert
|   |   +---
@discussion insert new entry
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-bool (HAS STATE)
|   +--- 
|   +---insert
|   +---(
|   |   +---FOO
|   |   +---,
|   |   +--- 
|   |   +---BAR
|   |   +---)
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function commatest 
|   |   +---
@abstract Watch for extra line breaks
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-virtual (HAS STATE)
|   +--- 
|   +---bool
|   +--- 
|   +---CreateItemWithIdentifier
|   +---(
|   |   +---const
|   |   +--- 
|   |   +---ACFString
|   |   +--- 
|   |   +---&
|   |   +---inIdentifier
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---                
|   |   +---const
|   |   +--- 
|   |   +---AEventParaneter
|   |   +---<
|   |   |   +---CFTypeRef
|   |   |   +--->
|   |   +--- 
|   |   +---&
|   |   +---inConfigData
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---                
|   |   +---AEventParameter
|   |   +---<
|   |   |   +---HIToolbarItemRef
|   |   |   +---,
|   |   |   +---AWriteOnly
|   |   |   +--->
|   |   +--- 
|   |   +---&
|   |   +---outItem
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function S3Handle
|   |   +---
@discussion Hmm.
|   |   +---
@templatefield FOO the foo type.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---        
|   +-*-template (HAS STATE)
|   +---<
|   |   +---class
|   |   +--- 
|   |   +---FOO
|   |   +--->
|   +--- 
|   +---operator
|   +--- 
|   +---S3Handle
|   +---<
|   +---FOO
|   +--->
|   +---(
|   |   +---)
|   +--- 
|   +---;
|   +---[ NEWLINE ]
|   +---}
+---[ NEWLINE ]
+---[ NEWLINE ]
END OF OBJECT


OBJECT: insert (HeaderDoc::Function)
+-*-bool (HAS STATE)
+--- 
+---insert
+---(
|   +---FOO
|   +---,
|   +--- 
|   +---BAR
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function commatest 
|   +---
@abstract Watch for extra line breaks
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+---        
+-*-virtual (HAS STATE)
+--- 
+---bool
+--- 
+---CreateItemWithIdentifier
+---(
|   +---const
|   +--- 
|   +---ACFString
|   +--- 
|   +---&
|   +---inIdentifier
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---const
|   +--- 
|   +---AEventParaneter
|   +---<
|   |   +---CFTypeRef
|   |   +--->
|   +--- 
|   +---&
|   +---inConfigData
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---AEventParameter
|   +---<
|   |   +---HIToolbarItemRef
|   |   +---,
|   |   +---AWriteOnly
|   |   +--->
|   +--- 
|   +---&
|   +---outItem
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function S3Handle
|   +---
@discussion Hmm.
|   +---
@templatefield FOO the foo type.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+---        
+-*-template (HAS STATE)
+---<
|   +---class
|   +--- 
|   +---FOO
|   +--->
+--- 
+---operator
+--- 
+---S3Handle
+---<
+---FOO
+--->
+---(
|   +---)
+--- 
+---;
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: CreateItemWithIdentifier (HeaderDoc::Function)
+-*-virtual (HAS STATE)
+--- 
+---bool
+--- 
+---CreateItemWithIdentifier
+---(
|   +---const
|   +--- 
|   +---ACFString
|   +--- 
|   +---&
|   +---inIdentifier
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---const
|   +--- 
|   +---AEventParaneter
|   +---<
|   |   +---CFTypeRef
|   |   +--->
|   +--- 
|   +---&
|   +---inConfigData
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---AEventParameter
|   +---<
|   |   +---HIToolbarItemRef
|   |   +---,
|   |   +---AWriteOnly
|   |   +--->
|   +--- 
|   +---&
|   +---outItem
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function S3Handle
|   +---
@discussion Hmm.
|   +---
@templatefield FOO the foo type.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+---        
+-*-template (HAS STATE)
+---<
|   +---class
|   +--- 
|   +---FOO
|   +--->
+--- 
+---operator
+--- 
+---S3Handle
+---<
+---FOO
+--->
+---(
|   +---)
+--- 
+---;
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: CreateItemWithIdentifier (HeaderDoc::Function)
+-*-virtual (HAS STATE)
+--- 
+---bool
+--- 
+---CreateItemWithIdentifier
+---(
|   +---const
|   +--- 
|   +---ACFString
|   +--- 
|   +---&
|   +---inIdentifier
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---const
|   +--- 
|   +---AEventParaneter
|   +---<
|   |   +---CFTypeRef
|   |   +--->
|   +--- 
|   +---&
|   +---inConfigData
|   +---,
|   +---[ NEWLINE ]
|   +---                
|   +---AEventParameter
|   +---<
|   |   +---HIToolbarItemRef
|   |   +---,
|   |   +---AWriteOnly
|   |   +--->
|   +--- 
|   +---&
|   +---outItem
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function S3Handle
|   +---
@discussion Hmm.
|   +---
@templatefield FOO the foo type.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+---        
+-*-template (HAS STATE)
+---<
|   +---class
|   +--- 
|   +---FOO
|   +--->
+--- 
+---operator
+--- 
+---S3Handle
+---<
+---FOO
+--->
+---(
|   +---)
+--- 
+---;
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator S3Handle<FOO> (HeaderDoc::Function)
+-*-template (HAS STATE)
+---<
|   +---class
|   +--- 
|   +---FOO
|   +--->
+--- 
+---operator
+--- 
+---S3Handle
+---<
+---FOO
+--->
+---(
|   +---)
+--- 
+---;
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator S3Handle<FOO> (HeaderDoc::Function)
+-*-template (HAS STATE)
+---<
|   +---class
|   +--- 
|   +---FOO
|   +--->
+--- 
+---operator
+--- 
+---S3Handle
+---<
+---FOO
+--->
+---(
|   +---)
+--- 
+---;
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---}
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: This_Does_Contain_Templates This_Does_Contain_Templates (HeaderDoc::CPPClass)
	<span class="keyword">template</span> &lt;<span class="template">class</span> <span class="template">FOO</span>, <span class="template">BAR</span>&gt; <span class="keyword">class</span> <!-- a logicalPath="//test_ref/cpp/cl/This_Does_Contain_Templates //test_ref/cpp/tdef/This_Does_Contain_Templates //test_ref/cpp/tag/This_Does_Contain_Templates //test_ref/cpp/econst/This_Does_Contain_Templates //test_ref/cpp/struct/This_Does_Contain_Templates //test_ref/cpp/clconst/This_Does_Contain_Templates //test_ref/cpp/intf/This_Does_Contain_Templates" --><span class="type">This_Does_Contain_Templates</span><!-- /a --> { 
	    <span class="keyword">public</span>: <span class="comment">/*! @function insert
	@discussion insert new entry</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/insert //test_ref/cpp/clm/insert //test_ref/cpp/intfcm/insert //test_ref/cpp/intfm/insert //test_ref/cpp/func/insert //test_ref/cpp/ftmplt/insert //test_ref/cpp/defn/insert //test_ref/cpp/macro/insert" --><span class="function">insert</span><!-- /a -->(
	        <span class="param">FOO</span>,
	        <span class="param">BAR</span>);  
	    <span class="comment">/*! @function commatest 
	@abstract Watch for extra line breaks</span>
	        <span class="comment">*/</span>
	    <span class="keyword">virtual</span> <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/CreateItemWithIdentifier //test_ref/cpp/clm/CreateItemWithIdentifier //test_ref/cpp/intfcm/CreateItemWithIdentifier //test_ref/cpp/intfm/CreateItemWithIdentifier //test_ref/cpp/func/CreateItemWithIdentifier //test_ref/cpp/ftmplt/CreateItemWithIdentifier //test_ref/cpp/defn/CreateItemWithIdentifier //test_ref/cpp/macro/CreateItemWithIdentifier" --><span class="function">CreateItemWithIdentifier</span><!-- /a -->(
	        <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/ACFString //test_ref/cpp/data/ACFString" --><span class="var">ACFString</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inIdentifier //test_ref/cpp/data/inIdentifier" --><span class="var">inIdentifier</span><!-- /a -->, 
	        <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/AEventParaneter //test_ref/cpp/data/AEventParaneter" --><span class="var">AEventParaneter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/CFTypeRef //test_ref/cpp/data/CFTypeRef" --><span class="var">CFTypeRef</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/inConfigData //test_ref/cpp/data/inConfigData" --><span class="var">inConfigData</span><!-- /a -->, 
	        <!-- a logicalPath="//test_ref/cpp/econst/AEventParameter //test_ref/cpp/data/AEventParameter" --><span class="var">AEventParameter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/HIToolbarItemRef //test_ref/cpp/data/HIToolbarItemRef" --><span class="var">HIToolbarItemRef</span><!-- /a -->,
	            <!-- a logicalPath="//test_ref/cpp/econst/AWriteOnly //test_ref/cpp/data/AWriteOnly" --><span class="var">AWriteOnly</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/outItem //test_ref/cpp/data/outItem" --><span class="var">outItem</span><!-- /a -->);  
	    <span class="comment">/*! @function S3Handle
	@discussion Hmm.
	@templatefield FOO the foo type.</span>
	        <span class="comment">*/</span>
	    <span class="keyword">template</span>&lt;<span class="template">class</span> <span class="template">FOO</span>&gt; <span class="keyword">operator</span> <!-- a logicalPath="//test_ref/cpp/cl/S3Handle //test_ref/cpp/tdef/S3Handle //test_ref/cpp/tag/S3Handle //test_ref/cpp/econst/S3Handle //test_ref/cpp/struct/S3Handle //test_ref/cpp/clconst/S3Handle //test_ref/cpp/intf/S3Handle" --><span class="type">S3Handle</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/cl/FOO //test_ref/cpp/tdef/FOO //test_ref/cpp/tag/FOO //test_ref/cpp/econst/FOO //test_ref/cpp/struct/FOO //test_ref/cpp/clconst/FOO //test_ref/cpp/intf/FOO" --><span class="type">FOO</span><!-- /a -->&gt;(); 
	}  
END OF OBJECT


OBJECT: insert (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/insert //test_ref/cpp/clm/insert //test_ref/cpp/intfcm/insert //test_ref/cpp/intfm/insert //test_ref/cpp/func/insert //test_ref/cpp/ftmplt/insert //test_ref/cpp/defn/insert //test_ref/cpp/macro/insert" --><span class="function">insert</span><!-- /a -->(
	    <span class="param">FOO</span>,
	    <span class="param">BAR</span>); 
END OF OBJECT


OBJECT: CreateItemWithIdentifier (HeaderDoc::Function)
	<span class="keyword">virtual</span> <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/CreateItemWithIdentifier //test_ref/cpp/clm/CreateItemWithIdentifier //test_ref/cpp/intfcm/CreateItemWithIdentifier //test_ref/cpp/intfm/CreateItemWithIdentifier //test_ref/cpp/func/CreateItemWithIdentifier //test_ref/cpp/ftmplt/CreateItemWithIdentifier //test_ref/cpp/defn/CreateItemWithIdentifier //test_ref/cpp/macro/CreateItemWithIdentifier" --><span class="function">CreateItemWithIdentifier</span><!-- /a -->(
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/ACFString //test_ref/cpp/data/ACFString" --><span class="var">ACFString</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inIdentifier //test_ref/cpp/data/inIdentifier" --><span class="var">inIdentifier</span><!-- /a -->, 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/AEventParaneter //test_ref/cpp/data/AEventParaneter" --><span class="var">AEventParaneter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/CFTypeRef //test_ref/cpp/data/CFTypeRef" --><span class="var">CFTypeRef</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/inConfigData //test_ref/cpp/data/inConfigData" --><span class="var">inConfigData</span><!-- /a -->, 
	    <!-- a logicalPath="//test_ref/cpp/econst/AEventParameter //test_ref/cpp/data/AEventParameter" --><span class="var">AEventParameter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/HIToolbarItemRef //test_ref/cpp/data/HIToolbarItemRef" --><span class="var">HIToolbarItemRef</span><!-- /a -->,
	        <!-- a logicalPath="//test_ref/cpp/econst/AWriteOnly //test_ref/cpp/data/AWriteOnly" --><span class="var">AWriteOnly</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/outItem //test_ref/cpp/data/outItem" --><span class="var">outItem</span><!-- /a -->); 
END OF OBJECT


OBJECT: CreateItemWithIdentifier (HeaderDoc::Function)
	<span class="keyword">virtual</span> <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/CreateItemWithIdentifier //test_ref/cpp/clm/CreateItemWithIdentifier //test_ref/cpp/intfcm/CreateItemWithIdentifier //test_ref/cpp/intfm/CreateItemWithIdentifier //test_ref/cpp/func/CreateItemWithIdentifier //test_ref/cpp/ftmplt/CreateItemWithIdentifier //test_ref/cpp/defn/CreateItemWithIdentifier //test_ref/cpp/macro/CreateItemWithIdentifier" --><span class="function">CreateItemWithIdentifier</span><!-- /a -->(
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/ACFString //test_ref/cpp/data/ACFString" --><span class="var">ACFString</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inIdentifier //test_ref/cpp/data/inIdentifier" --><span class="var">inIdentifier</span><!-- /a -->, 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/AEventParaneter //test_ref/cpp/data/AEventParaneter" --><span class="var">AEventParaneter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/CFTypeRef //test_ref/cpp/data/CFTypeRef" --><span class="var">CFTypeRef</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/inConfigData //test_ref/cpp/data/inConfigData" --><span class="var">inConfigData</span><!-- /a -->, 
	    <!-- a logicalPath="//test_ref/cpp/econst/AEventParameter //test_ref/cpp/data/AEventParameter" --><span class="var">AEventParameter</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/econst/HIToolbarItemRef //test_ref/cpp/data/HIToolbarItemRef" --><span class="var">HIToolbarItemRef</span><!-- /a -->,
	        <!-- a logicalPath="//test_ref/cpp/econst/AWriteOnly //test_ref/cpp/data/AWriteOnly" --><span class="var">AWriteOnly</span><!-- /a -->&gt; &amp;<!-- a logicalPath="//test_ref/cpp/econst/outItem //test_ref/cpp/data/outItem" --><span class="var">outItem</span><!-- /a -->); 
END OF OBJECT


OBJECT: operator S3Handle<FOO> (HeaderDoc::Function)
	<span class="keyword">template</span>&lt;<span class="template">class</span> <span class="template">FOO</span>&gt; <span class="keyword">operator</span> <!-- a logicalPath="//test_ref/cpp/cl/S3Handle //test_ref/cpp/tdef/S3Handle //test_ref/cpp/tag/S3Handle //test_ref/cpp/econst/S3Handle //test_ref/cpp/struct/S3Handle //test_ref/cpp/clconst/S3Handle //test_ref/cpp/intf/S3Handle" --><span class="type">S3Handle</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/cl/FOO //test_ref/cpp/tdef/FOO //test_ref/cpp/tag/FOO //test_ref/cpp/econst/FOO //test_ref/cpp/struct/FOO //test_ref/cpp/clconst/FOO //test_ref/cpp/intf/FOO" --><span class="type">FOO</span><!-- /a -->&gt;();
END OF OBJECT


OBJECT: operator S3Handle<FOO> (HeaderDoc::Function)
	<span class="keyword">template</span>&lt;<span class="template">class</span> <span class="template">FOO</span>&gt; <span class="keyword">operator</span> <!-- a logicalPath="//test_ref/cpp/cl/S3Handle //test_ref/cpp/tdef/S3Handle //test_ref/cpp/tag/S3Handle //test_ref/cpp/econst/S3Handle //test_ref/cpp/struct/S3Handle //test_ref/cpp/clconst/S3Handle //test_ref/cpp/intf/S3Handle" --><span class="type">S3Handle</span><!-- /a -->&lt;<!-- a logicalPath="//test_ref/cpp/cl/FOO //test_ref/cpp/tdef/FOO //test_ref/cpp/tag/FOO //test_ref/cpp/econst/FOO //test_ref/cpp/struct/FOO //test_ref/cpp/clconst/FOO //test_ref/cpp/intf/FOO" --><span class="type">FOO</span><!-- /a -->&gt;();
END OF OBJECT



$1|C$6|parser