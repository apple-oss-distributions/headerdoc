FrT;@1|>>0|$15|HeaderDoc::Test%26|$4|CODE$7|COMMENT$7|CPPCODE$15|EXPECTED_RESULT$23|EXPECTED_RESULT_ALLDECS$7|FAILMSG$8|FILENAME$4|LANG$4|NAME$6|RESULT$14|RESULT_ALLDECS$7|SUBLANG$4|TYPE$4069|class operator_test_class
{

/*!
    @function
 */
foo_t operator new();

/*!
    @function       operator <<
    @abstract       Inequality operator
    @discussion     All message contents, including the parameters, are checked.
    @result         True if the messages are different.
    @param  inOtherMessage  The message to compare.
*/
bool
    operator << (
            const operator_test_class &inOtherMessage) const
    {
        return !(*this == inOtherMessage);
    }

/*!
    @function       operator >>
    @abstract       Inequality operator
    @discussion     All message contents, including the parameters, are checked.
    @result         True if the messages are different.
    @param  inOtherMessage  The message to compare.
*/
bool
    operator >> (
            const operator_test_class &inOtherMessage) const
    {
        return !(*this == inOtherMessage);
    }
/*!
	@constant foo
 */
const int foo;

/*!
    @function       operator ==
    @abstract       Equality operator
    @discussion     All message contents, including the parameters, are checked.
    @result         True if the messages are identical.
    @param  inOtherMessage  The message to compare.
*/
bool
    operator == (
            const operator_test_class &inOtherMessage) const;
/*!
    @function       operator !=
    @abstract       Inequality operator
    @discussion     All message contents, including the parameters, are checked.
    @result         True if the messages are different.
    @param  inOtherMessage  The message to compare.
*/
bool
    operator != (
            const operator_test_class &inOtherMessage) const
    {
        return !(*this == inOtherMessage);
    }

/*!
    @function       operator +
    @abstract       Addition operator
    @discussion     All message contents, including the parameters, are checked.
    @result         I dunno what this does....
    @param  inOtherMessage  The message to compare.
*/
bool
    operator +(
            const operator_test_class &inOtherMessage) const
    {
        return !(*this == inOtherMessage);
    }

/*!
    @function       operator ++
    @abstract       Increment operator
    @discussion     All message contents, including the parameters, are checked.
    @result         I dunno what this does....
    @param  inOtherMessage  The message to compare.
*/
bool
    operator ++(
            const operator_test_class &inOtherMessage) const
    {
        return !(*this == inOtherMessage);
    }

/*!
    @function       operator -
    @abstract       Subtraction operator
    @discussion     All message contents, including the parameters, are checked.
    @result         I dunno what this does....
    @param  inOtherMessage  The message to compare.
*/
bool
    operator -(
            const operator_test_class &inOtherMessage) const
    {
        return !(*this == inOtherMessage);
    }

/*!
    @function       operator --
    @abstract       Decrement operator
    @discussion     All message contents, including the parameters, are checked.
    @result         I dunno what this does....
    @param  inOtherMessage  The message to compare.
*/
bool
    operator --(
            const operator_test_class &inOtherMessage) const
    {
        return !(*this == inOtherMessage);
    }

/*!
    @function       operator *
    @abstract       Multiplication operator
    @discussion     All message contents, including the parameters, are checked.
    @result         I dunno what this does....
    @param  inOtherMessage  The message to compare.
*/
bool
    operator *(
            const operator_test_class &inOtherMessage) const
    {
        return !(*this == inOtherMessage);
    }

/*!
    @function       operator /
    @abstract       Division operator
    @discussion     All message contents, including the parameters, are checked.
    @result         I dunno what this does....
    @param  inOtherMessage  The message to compare.
*/
bool
    operator /(
            const operator_test_class &inOtherMessage) const
    {
        return !(*this == inOtherMessage);
    }

};
$13|/*! class */
$0|$125870|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 0
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 1
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/operator_test_2.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/operator_test_2.test
$parserState->{ISFORWARDDECLARATION} => 0
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => -1
$parserState->{categoryClass} => 
$parserState->{classNameFound} => 1
$parserState->{classtype} => class
$parserState->{forceClassDone} => 1
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 85
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => ;
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 2
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 1
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => class
$parserState->{returntype} => class operator_test_class  
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => operator_test_class
$parserState->{sodtype} => 
$parserState->{sodtypeclasstoken} => class
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 1
$parserState->{storeDec} => 
$parserState->{temponlyComments} => 0
$parserState->{treePopTwo} => 0
$parserState->{typestring} => operator_test_class
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 85
typelist: class
namelist: operator_test_class
posstypes: 
value: 
returntype: 
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 64
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---class
+--- 
+---operator_test_class
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-foo_t (HAS STATE)
|   +--- 
|   +---operator
|   +--- 
|   +---new
|   +---(
|   |   +---)
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator <<
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---<<
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator >>
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +--->>
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@constant foo
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-const (HAS STATE)
|   +--- 
|   +---int
|   +--- 
|   +---foo
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator ==
|   |   +---
@abstract       Equality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are identical.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---==
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator !=
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---!=
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator +
|   |   +---
@abstract       Addition operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---+
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator ++
|   |   +---
@abstract       Increment operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---+
|   +---+
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator -
|   |   +---
@abstract       Subtraction operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +----
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator --
|   |   +---
@abstract       Decrement operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +----
|   +----
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator *
|   |   +---
@abstract       Multiplication operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---*
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator /
|   |   +---
@abstract       Division operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---/
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: operator test 2
APIUID: //test_ref/doc/header/operator_test_2.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: <p></p>
LONG ATTRIBUTES: <p></p>
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::CPPClass
    NAME: operator_test_class
    APIUID: 
    ABSTRACT: ""
    DISCUSSION: "<p>class "
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::CPPClass"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Declared In:</b> <a href="../../index.html" target="_top">operator test 2</a><br>
</p>
    LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator new
        APIUID: //test_ref/cpp/instm/operator_test_class/operator_new/foo_t/()
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "foo_t"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator <<
        APIUID: //test_ref/cpp/instm/operator_test_class/operator%3C%3C/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Inequality operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator >>
        APIUID: //test_ref/cpp/instm/operator_test_class/operator%3E%3E/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Inequality operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator ==
        APIUID: //test_ref/cpp/instm/operator_test_class/operator%3D%3D/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Equality operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator !=
        APIUID: //test_ref/cpp/instm/operator_test_class/operator!%3D/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Inequality operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator +
        APIUID: //test_ref/cpp/instm/operator_test_class/operator+/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Addition operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator ++
        APIUID: //test_ref/cpp/instm/operator_test_class/operator++/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Increment operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator -
        APIUID: //test_ref/cpp/instm/operator_test_class/operator-/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Subtraction operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator --
        APIUID: //test_ref/cpp/instm/operator_test_class/operator--/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Decrement operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator *
        APIUID: //test_ref/cpp/instm/operator_test_class/operator*/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Multiplication operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator /
        APIUID: //test_ref/cpp/instm/operator_test_class/operator//bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Division operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Constant
        NAME: foo
        APIUID: //test_ref/cpp/clconst/operator_test_class/foo
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "const int"
        LINENUM: ""
        CLASS: "HeaderDoc::Constant"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: operator_test_class (HeaderDoc::CPPClass)
+---class
+--- 
+---operator_test_class
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-foo_t (HAS STATE)
|   +--- 
|   +---operator
|   +--- 
|   +---new
|   +---(
|   |   +---)
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator <<
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---<<
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator >>
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +--->>
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@constant foo
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-const (HAS STATE)
|   +--- 
|   +---int
|   +--- 
|   +---foo
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator ==
|   |   +---
@abstract       Equality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are identical.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---==
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator !=
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---!=
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator +
|   |   +---
@abstract       Addition operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---+
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator ++
|   |   +---
@abstract       Increment operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---+
|   +---+
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator -
|   |   +---
@abstract       Subtraction operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +----
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator --
|   |   +---
@abstract       Decrement operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +----
|   +----
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator *
|   |   +---
@abstract       Multiplication operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---*
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator /
|   |   +---
@abstract       Division operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---/
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
END OF OBJECT


OBJECT: operator new (HeaderDoc::Function)
+-*-foo_t (HAS STATE)
+--- 
+---operator
+--- 
+---new
+---(
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator <<
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---<<
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator >>
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+--->>
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@constant foo
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-const (HAS STATE)
+--- 
+---int
+--- 
+---foo
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ==
|   +---
@abstract       Equality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are identical.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---==
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator !=
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator << (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---<<
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator >>
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+--->>
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@constant foo
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-const (HAS STATE)
+--- 
+---int
+--- 
+---foo
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ==
|   +---
@abstract       Equality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are identical.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---==
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator !=
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator >> (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+--->>
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@constant foo
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-const (HAS STATE)
+--- 
+---int
+--- 
+---foo
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ==
|   +---
@abstract       Equality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are identical.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---==
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator !=
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator == (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---==
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator !=
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator != (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator + (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator ++ (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator - (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator -- (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator * (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator / (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: foo (HeaderDoc::Constant)
+-*-const (HAS STATE)
+--- 
+---int
+--- 
+---foo
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ==
|   +---
@abstract       Equality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are identical.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---==
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator !=
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: operator_test_class (HeaderDoc::CPPClass)
	<span class="keyword">class</span> <!-- a logicalPath="//test_ref/cpp/cl/operator_test_class //test_ref/cpp/tdef/operator_test_class //test_ref/cpp/tag/operator_test_class //test_ref/cpp/econst/operator_test_class //test_ref/cpp/struct/operator_test_class //test_ref/cpp/clconst/operator_test_class //test_ref/cpp/intf/operator_test_class" --><span class="type">operator_test_class</span><!-- /a --> {  
	    <span class="comment">/*!
	@function</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/foo_t //test_ref/cpp/tdef/foo_t //test_ref/cpp/tag/foo_t //test_ref/cpp/econst/foo_t //test_ref/cpp/struct/foo_t //test_ref/cpp/clconst/foo_t //test_ref/cpp/intf/foo_t" --><span class="type">foo_t</span><!-- /a --> <span class="keyword">operator</span> <!-- a logicalPath="//test_ref/cpp/instm/new //test_ref/cpp/clm/new //test_ref/cpp/intfcm/new //test_ref/cpp/intfm/new //test_ref/cpp/func/new //test_ref/cpp/ftmplt/new //test_ref/cpp/defn/new //test_ref/cpp/macro/new" --><span class="function">new</span><!-- /a -->();  
	    <span class="comment">/*!
	@function       operator &lt;&lt;
	@abstract       Inequality operator
	@discussion     All message contents, including the parameters, are checked.
	@result         True if the messages are different.
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> &lt;&lt; ( 
	        <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator &gt;&gt;
	@abstract       Inequality operator
	@discussion     All message contents, including the parameters, are checked.
	@result         True if the messages are different.
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> &gt;&gt; ( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>   <span class="comment">/*!
	@constant foo</span>
	        <span class="comment">*/</span>
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/int //test_ref/cpp/data/int" --><span class="var">int</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/foo //test_ref/cpp/data/foo" --><span class="var">foo</span><!-- /a -->;  
	    <span class="comment">/*!
	@function       operator ==
	@abstract       Equality operator
	@discussion     All message contents, including the parameters, are checked.
	@result         True if the messages are identical.
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> == ( 
	        <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>; 
	    <span class="comment">/*!
	@function       operator !=
	@abstract       Inequality operator
	@discussion     All message contents, including the parameters, are checked.
	@result         True if the messages are different.
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> != ( 
	        <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator +
	@abstract       Addition operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> +( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator ++
	@abstract       Increment operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> ++( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator -
	@abstract       Subtraction operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> -( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator --
	@abstract       Decrement operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> --( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator *
	@abstract       Multiplication operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> <span class="var">*</span>( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator /
	@abstract       Division operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> /( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    };  
END OF OBJECT


OBJECT: operator new (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/foo_t //test_ref/cpp/tdef/foo_t //test_ref/cpp/tag/foo_t //test_ref/cpp/econst/foo_t //test_ref/cpp/struct/foo_t //test_ref/cpp/clconst/foo_t //test_ref/cpp/intf/foo_t" --><span class="type">foo_t</span><!-- /a --> <span class="keyword">operator</span> <!-- a logicalPath="//test_ref/cpp/instm/new //test_ref/cpp/clm/new //test_ref/cpp/intfcm/new //test_ref/cpp/intfm/new //test_ref/cpp/func/new //test_ref/cpp/ftmplt/new //test_ref/cpp/defn/new //test_ref/cpp/macro/new" --><span class="function">new</span><!-- /a -->(); 
END OF OBJECT


OBJECT: operator << (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> &lt;&lt; ( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator >> (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> &gt;&gt; ( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator == (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> == ( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>; 
END OF OBJECT


OBJECT: operator != (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> != ( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator + (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> +( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator ++ (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> ++( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator - (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> -( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator -- (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> --( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator * (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> <span class="function">*</span>( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator / (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> /( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: foo (HeaderDoc::Constant)
	<span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/int //test_ref/cpp/data/int" --><span class="var">int</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/foo //test_ref/cpp/data/foo" --><span class="var">foo</span><!-- /a -->; 
END OF OBJECT



$125870|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 0
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 1
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/operator_test_2.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/operator_test_2.test
$parserState->{ISFORWARDDECLARATION} => 0
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => -1
$parserState->{categoryClass} => 
$parserState->{classNameFound} => 1
$parserState->{classtype} => class
$parserState->{forceClassDone} => 1
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 85
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => ;
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 2
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 1
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => class
$parserState->{returntype} => class operator_test_class  
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => operator_test_class
$parserState->{sodtype} => 
$parserState->{sodtypeclasstoken} => class
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 1
$parserState->{storeDec} => 
$parserState->{temponlyComments} => 0
$parserState->{treePopTwo} => 0
$parserState->{typestring} => operator_test_class
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 85
typelist: class
namelist: operator_test_class
posstypes: 
value: 
returntype: 
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 64
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---class
+--- 
+---operator_test_class
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-foo_t (HAS STATE)
|   +--- 
|   +---operator
|   +--- 
|   +---new
|   +---(
|   |   +---)
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator <<
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---<<
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator >>
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +--->>
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@constant foo
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-const (HAS STATE)
|   +--- 
|   +---int
|   +--- 
|   +---foo
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator ==
|   |   +---
@abstract       Equality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are identical.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---==
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator !=
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---!=
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator +
|   |   +---
@abstract       Addition operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---+
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator ++
|   |   +---
@abstract       Increment operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---+
|   +---+
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator -
|   |   +---
@abstract       Subtraction operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +----
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator --
|   |   +---
@abstract       Decrement operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +----
|   +----
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator *
|   |   +---
@abstract       Multiplication operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---*
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator /
|   |   +---
@abstract       Division operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---/
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: operator test 2
APIUID: //test_ref/doc/header/operator_test_2.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: <p></p>
LONG ATTRIBUTES: <p></p>
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::CPPClass
    NAME: operator_test_class
    APIUID: 
    ABSTRACT: ""
    DISCUSSION: "<p>class "
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::CPPClass"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Declared In:</b> <a href="../../index.html" target="_top">operator test 2</a><br>
</p>
    LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator new
        APIUID: //test_ref/cpp/instm/operator_test_class/operator_new/foo_t/()
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "foo_t"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator <<
        APIUID: //test_ref/cpp/instm/operator_test_class/operator%3C%3C/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Inequality operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator >>
        APIUID: //test_ref/cpp/instm/operator_test_class/operator%3E%3E/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Inequality operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator ==
        APIUID: //test_ref/cpp/instm/operator_test_class/operator%3D%3D/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Equality operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator !=
        APIUID: //test_ref/cpp/instm/operator_test_class/operator!%3D/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Inequality operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator +
        APIUID: //test_ref/cpp/instm/operator_test_class/operator+/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Addition operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator ++
        APIUID: //test_ref/cpp/instm/operator_test_class/operator++/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Increment operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator -
        APIUID: //test_ref/cpp/instm/operator_test_class/operator-/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Subtraction operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator --
        APIUID: //test_ref/cpp/instm/operator_test_class/operator--/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Decrement operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator *
        APIUID: //test_ref/cpp/instm/operator_test_class/operator*/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Multiplication operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator /
        APIUID: //test_ref/cpp/instm/operator_test_class/operator//bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Division operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Constant
        NAME: foo
        APIUID: //test_ref/cpp/clconst/operator_test_class/foo
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "const int"
        LINENUM: ""
        CLASS: "HeaderDoc::Constant"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: operator_test_class (HeaderDoc::CPPClass)
+---class
+--- 
+---operator_test_class
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-foo_t (HAS STATE)
|   +--- 
|   +---operator
|   +--- 
|   +---new
|   +---(
|   |   +---)
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator <<
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---<<
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator >>
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +--->>
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@constant foo
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-const (HAS STATE)
|   +--- 
|   +---int
|   +--- 
|   +---foo
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator ==
|   |   +---
@abstract       Equality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are identical.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---==
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator !=
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---!=
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator +
|   |   +---
@abstract       Addition operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---+
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator ++
|   |   +---
@abstract       Increment operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---+
|   +---+
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator -
|   |   +---
@abstract       Subtraction operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +----
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator --
|   |   +---
@abstract       Decrement operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +----
|   +----
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator *
|   |   +---
@abstract       Multiplication operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---*
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator /
|   |   +---
@abstract       Division operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---/
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
END OF OBJECT


OBJECT: operator new (HeaderDoc::Function)
+-*-foo_t (HAS STATE)
+--- 
+---operator
+--- 
+---new
+---(
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator <<
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---<<
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator >>
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+--->>
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@constant foo
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-const (HAS STATE)
+--- 
+---int
+--- 
+---foo
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ==
|   +---
@abstract       Equality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are identical.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---==
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator !=
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator << (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---<<
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator >>
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+--->>
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@constant foo
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-const (HAS STATE)
+--- 
+---int
+--- 
+---foo
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ==
|   +---
@abstract       Equality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are identical.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---==
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator !=
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator >> (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+--->>
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@constant foo
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-const (HAS STATE)
+--- 
+---int
+--- 
+---foo
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ==
|   +---
@abstract       Equality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are identical.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---==
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator !=
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator == (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---==
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator !=
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator != (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator + (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator ++ (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator - (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator -- (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator * (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator / (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: foo (HeaderDoc::Constant)
+-*-const (HAS STATE)
+--- 
+---int
+--- 
+---foo
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ==
|   +---
@abstract       Equality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are identical.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---==
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator !=
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: operator_test_class (HeaderDoc::CPPClass)
	<span class="keyword">class</span> <!-- a logicalPath="//test_ref/cpp/cl/operator_test_class //test_ref/cpp/tdef/operator_test_class //test_ref/cpp/tag/operator_test_class //test_ref/cpp/econst/operator_test_class //test_ref/cpp/struct/operator_test_class //test_ref/cpp/clconst/operator_test_class //test_ref/cpp/intf/operator_test_class" --><span class="type">operator_test_class</span><!-- /a --> {  
	    <span class="comment">/*!
	@function</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/foo_t //test_ref/cpp/tdef/foo_t //test_ref/cpp/tag/foo_t //test_ref/cpp/econst/foo_t //test_ref/cpp/struct/foo_t //test_ref/cpp/clconst/foo_t //test_ref/cpp/intf/foo_t" --><span class="type">foo_t</span><!-- /a --> <span class="keyword">operator</span> <!-- a logicalPath="//test_ref/cpp/instm/new //test_ref/cpp/clm/new //test_ref/cpp/intfcm/new //test_ref/cpp/intfm/new //test_ref/cpp/func/new //test_ref/cpp/ftmplt/new //test_ref/cpp/defn/new //test_ref/cpp/macro/new" --><span class="function">new</span><!-- /a -->();  
	    <span class="comment">/*!
	@function       operator &lt;&lt;
	@abstract       Inequality operator
	@discussion     All message contents, including the parameters, are checked.
	@result         True if the messages are different.
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> &lt;&lt; ( 
	        <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator &gt;&gt;
	@abstract       Inequality operator
	@discussion     All message contents, including the parameters, are checked.
	@result         True if the messages are different.
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> &gt;&gt; ( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>   <span class="comment">/*!
	@constant foo</span>
	        <span class="comment">*/</span>
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/int //test_ref/cpp/data/int" --><span class="var">int</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/foo //test_ref/cpp/data/foo" --><span class="var">foo</span><!-- /a -->;  
	    <span class="comment">/*!
	@function       operator ==
	@abstract       Equality operator
	@discussion     All message contents, including the parameters, are checked.
	@result         True if the messages are identical.
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> == ( 
	        <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>; 
	    <span class="comment">/*!
	@function       operator !=
	@abstract       Inequality operator
	@discussion     All message contents, including the parameters, are checked.
	@result         True if the messages are different.
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> != ( 
	        <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator +
	@abstract       Addition operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> +( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator ++
	@abstract       Increment operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> ++( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator -
	@abstract       Subtraction operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> -( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator --
	@abstract       Decrement operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> --( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator *
	@abstract       Multiplication operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> <span class="var">*</span>( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator /
	@abstract       Division operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> /( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    };  
END OF OBJECT


OBJECT: operator new (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/foo_t //test_ref/cpp/tdef/foo_t //test_ref/cpp/tag/foo_t //test_ref/cpp/econst/foo_t //test_ref/cpp/struct/foo_t //test_ref/cpp/clconst/foo_t //test_ref/cpp/intf/foo_t" --><span class="type">foo_t</span><!-- /a --> <span class="keyword">operator</span> <!-- a logicalPath="//test_ref/cpp/instm/new //test_ref/cpp/clm/new //test_ref/cpp/intfcm/new //test_ref/cpp/intfm/new //test_ref/cpp/func/new //test_ref/cpp/ftmplt/new //test_ref/cpp/defn/new //test_ref/cpp/macro/new" --><span class="function">new</span><!-- /a -->(); 
END OF OBJECT


OBJECT: operator << (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> &lt;&lt; ( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator >> (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> &gt;&gt; ( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator == (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> == ( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>; 
END OF OBJECT


OBJECT: operator != (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> != ( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator + (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> +( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator ++ (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> ++( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator - (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> -( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator -- (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> --( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator * (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> <span class="function">*</span>( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator / (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> /( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: foo (HeaderDoc::Constant)
	<span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/int //test_ref/cpp/data/int" --><span class="var">int</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/foo //test_ref/cpp/data/foo" --><span class="var">foo</span><!-- /a -->; 
END OF OBJECT



_$43|testsuite/parser_tests/operator_test_2.test$1|C$15|operator test 2$125870|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 0
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 1
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/operator_test_2.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/operator_test_2.test
$parserState->{ISFORWARDDECLARATION} => 0
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => -1
$parserState->{categoryClass} => 
$parserState->{classNameFound} => 1
$parserState->{classtype} => class
$parserState->{forceClassDone} => 1
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 85
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => ;
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 2
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 1
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => class
$parserState->{returntype} => class operator_test_class  
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => operator_test_class
$parserState->{sodtype} => 
$parserState->{sodtypeclasstoken} => class
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 1
$parserState->{storeDec} => 
$parserState->{temponlyComments} => 0
$parserState->{treePopTwo} => 0
$parserState->{typestring} => operator_test_class
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 85
typelist: class
namelist: operator_test_class
posstypes: 
value: 
returntype: 
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 64
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---class
+--- 
+---operator_test_class
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-foo_t (HAS STATE)
|   +--- 
|   +---operator
|   +--- 
|   +---new
|   +---(
|   |   +---)
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator <<
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---<<
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator >>
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +--->>
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@constant foo
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-const (HAS STATE)
|   +--- 
|   +---int
|   +--- 
|   +---foo
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator ==
|   |   +---
@abstract       Equality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are identical.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---==
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator !=
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---!=
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator +
|   |   +---
@abstract       Addition operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---+
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator ++
|   |   +---
@abstract       Increment operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---+
|   +---+
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator -
|   |   +---
@abstract       Subtraction operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +----
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator --
|   |   +---
@abstract       Decrement operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +----
|   +----
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator *
|   |   +---
@abstract       Multiplication operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---*
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator /
|   |   +---
@abstract       Division operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---/
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: operator test 2
APIUID: //test_ref/doc/header/operator_test_2.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: <p></p>
LONG ATTRIBUTES: <p></p>
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::CPPClass
    NAME: operator_test_class
    APIUID: 
    ABSTRACT: ""
    DISCUSSION: "<p>class "
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::CPPClass"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Declared In:</b> <a href="../../index.html" target="_top">operator test 2</a><br>
</p>
    LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator new
        APIUID: //test_ref/cpp/instm/operator_test_class/operator_new/foo_t/()
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "foo_t"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator <<
        APIUID: //test_ref/cpp/instm/operator_test_class/operator%3C%3C/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Inequality operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator >>
        APIUID: //test_ref/cpp/instm/operator_test_class/operator%3E%3E/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Inequality operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator ==
        APIUID: //test_ref/cpp/instm/operator_test_class/operator%3D%3D/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Equality operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator !=
        APIUID: //test_ref/cpp/instm/operator_test_class/operator!%3D/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Inequality operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator +
        APIUID: //test_ref/cpp/instm/operator_test_class/operator+/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Addition operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator ++
        APIUID: //test_ref/cpp/instm/operator_test_class/operator++/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Increment operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator -
        APIUID: //test_ref/cpp/instm/operator_test_class/operator-/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Subtraction operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator --
        APIUID: //test_ref/cpp/instm/operator_test_class/operator--/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Decrement operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator *
        APIUID: //test_ref/cpp/instm/operator_test_class/operator*/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Multiplication operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator /
        APIUID: //test_ref/cpp/instm/operator_test_class/operator//bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Division operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Constant
        NAME: foo
        APIUID: //test_ref/cpp/clconst/operator_test_class/foo
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "const int"
        LINENUM: ""
        CLASS: "HeaderDoc::Constant"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: operator_test_class (HeaderDoc::CPPClass)
+---class
+--- 
+---operator_test_class
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-foo_t (HAS STATE)
|   +--- 
|   +---operator
|   +--- 
|   +---new
|   +---(
|   |   +---)
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator <<
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---<<
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator >>
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +--->>
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@constant foo
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-const (HAS STATE)
|   +--- 
|   +---int
|   +--- 
|   +---foo
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator ==
|   |   +---
@abstract       Equality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are identical.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---==
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator !=
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---!=
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator +
|   |   +---
@abstract       Addition operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---+
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator ++
|   |   +---
@abstract       Increment operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---+
|   +---+
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator -
|   |   +---
@abstract       Subtraction operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +----
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator --
|   |   +---
@abstract       Decrement operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +----
|   +----
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator *
|   |   +---
@abstract       Multiplication operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---*
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator /
|   |   +---
@abstract       Division operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---/
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
END OF OBJECT


OBJECT: operator new (HeaderDoc::Function)
+-*-foo_t (HAS STATE)
+--- 
+---operator
+--- 
+---new
+---(
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator <<
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---<<
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator >>
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+--->>
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@constant foo
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-const (HAS STATE)
+--- 
+---int
+--- 
+---foo
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ==
|   +---
@abstract       Equality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are identical.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---==
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator !=
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator << (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---<<
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator >>
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+--->>
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@constant foo
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-const (HAS STATE)
+--- 
+---int
+--- 
+---foo
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ==
|   +---
@abstract       Equality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are identical.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---==
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator !=
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator >> (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+--->>
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@constant foo
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-const (HAS STATE)
+--- 
+---int
+--- 
+---foo
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ==
|   +---
@abstract       Equality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are identical.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---==
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator !=
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator == (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---==
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator !=
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator != (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator + (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator ++ (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator - (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator -- (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator * (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator / (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: foo (HeaderDoc::Constant)
+-*-const (HAS STATE)
+--- 
+---int
+--- 
+---foo
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ==
|   +---
@abstract       Equality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are identical.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---==
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator !=
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: operator_test_class (HeaderDoc::CPPClass)
	<span class="keyword">class</span> <!-- a logicalPath="//test_ref/cpp/cl/operator_test_class //test_ref/cpp/tdef/operator_test_class //test_ref/cpp/tag/operator_test_class //test_ref/cpp/econst/operator_test_class //test_ref/cpp/struct/operator_test_class //test_ref/cpp/clconst/operator_test_class //test_ref/cpp/intf/operator_test_class" --><span class="type">operator_test_class</span><!-- /a --> {  
	    <span class="comment">/*!
	@function</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/foo_t //test_ref/cpp/tdef/foo_t //test_ref/cpp/tag/foo_t //test_ref/cpp/econst/foo_t //test_ref/cpp/struct/foo_t //test_ref/cpp/clconst/foo_t //test_ref/cpp/intf/foo_t" --><span class="type">foo_t</span><!-- /a --> <span class="keyword">operator</span> <!-- a logicalPath="//test_ref/cpp/instm/new //test_ref/cpp/clm/new //test_ref/cpp/intfcm/new //test_ref/cpp/intfm/new //test_ref/cpp/func/new //test_ref/cpp/ftmplt/new //test_ref/cpp/defn/new //test_ref/cpp/macro/new" --><span class="function">new</span><!-- /a -->();  
	    <span class="comment">/*!
	@function       operator &lt;&lt;
	@abstract       Inequality operator
	@discussion     All message contents, including the parameters, are checked.
	@result         True if the messages are different.
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> &lt;&lt; ( 
	        <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator &gt;&gt;
	@abstract       Inequality operator
	@discussion     All message contents, including the parameters, are checked.
	@result         True if the messages are different.
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> &gt;&gt; ( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>   <span class="comment">/*!
	@constant foo</span>
	        <span class="comment">*/</span>
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/int //test_ref/cpp/data/int" --><span class="var">int</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/foo //test_ref/cpp/data/foo" --><span class="var">foo</span><!-- /a -->;  
	    <span class="comment">/*!
	@function       operator ==
	@abstract       Equality operator
	@discussion     All message contents, including the parameters, are checked.
	@result         True if the messages are identical.
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> == ( 
	        <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>; 
	    <span class="comment">/*!
	@function       operator !=
	@abstract       Inequality operator
	@discussion     All message contents, including the parameters, are checked.
	@result         True if the messages are different.
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> != ( 
	        <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator +
	@abstract       Addition operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> +( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator ++
	@abstract       Increment operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> ++( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator -
	@abstract       Subtraction operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> -( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator --
	@abstract       Decrement operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> --( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator *
	@abstract       Multiplication operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> <span class="var">*</span>( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator /
	@abstract       Division operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> /( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    };  
END OF OBJECT


OBJECT: operator new (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/foo_t //test_ref/cpp/tdef/foo_t //test_ref/cpp/tag/foo_t //test_ref/cpp/econst/foo_t //test_ref/cpp/struct/foo_t //test_ref/cpp/clconst/foo_t //test_ref/cpp/intf/foo_t" --><span class="type">foo_t</span><!-- /a --> <span class="keyword">operator</span> <!-- a logicalPath="//test_ref/cpp/instm/new //test_ref/cpp/clm/new //test_ref/cpp/intfcm/new //test_ref/cpp/intfm/new //test_ref/cpp/func/new //test_ref/cpp/ftmplt/new //test_ref/cpp/defn/new //test_ref/cpp/macro/new" --><span class="function">new</span><!-- /a -->(); 
END OF OBJECT


OBJECT: operator << (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> &lt;&lt; ( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator >> (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> &gt;&gt; ( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator == (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> == ( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>; 
END OF OBJECT


OBJECT: operator != (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> != ( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator + (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> +( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator ++ (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> ++( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator - (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> -( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator -- (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> --( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator * (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> <span class="function">*</span>( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator / (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> /( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: foo (HeaderDoc::Constant)
	<span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/int //test_ref/cpp/data/int" --><span class="var">int</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/foo //test_ref/cpp/data/foo" --><span class="var">foo</span><!-- /a -->; 
END OF OBJECT



$125870|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 0
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 1
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/operator_test_2.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/operator_test_2.test
$parserState->{ISFORWARDDECLARATION} => 0
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => -1
$parserState->{categoryClass} => 
$parserState->{classNameFound} => 1
$parserState->{classtype} => class
$parserState->{forceClassDone} => 1
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 85
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => ;
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 2
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 1
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => class
$parserState->{returntype} => class operator_test_class  
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => operator_test_class
$parserState->{sodtype} => 
$parserState->{sodtypeclasstoken} => class
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 1
$parserState->{storeDec} => 
$parserState->{temponlyComments} => 0
$parserState->{treePopTwo} => 0
$parserState->{typestring} => operator_test_class
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 85
typelist: class
namelist: operator_test_class
posstypes: 
value: 
returntype: 
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 64
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---class
+--- 
+---operator_test_class
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-foo_t (HAS STATE)
|   +--- 
|   +---operator
|   +--- 
|   +---new
|   +---(
|   |   +---)
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator <<
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---<<
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator >>
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +--->>
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@constant foo
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-const (HAS STATE)
|   +--- 
|   +---int
|   +--- 
|   +---foo
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator ==
|   |   +---
@abstract       Equality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are identical.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---==
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator !=
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---!=
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator +
|   |   +---
@abstract       Addition operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---+
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator ++
|   |   +---
@abstract       Increment operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---+
|   +---+
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator -
|   |   +---
@abstract       Subtraction operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +----
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator --
|   |   +---
@abstract       Decrement operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +----
|   +----
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator *
|   |   +---
@abstract       Multiplication operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---*
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator /
|   |   +---
@abstract       Division operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---/
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: operator test 2
APIUID: //test_ref/doc/header/operator_test_2.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: <p></p>
LONG ATTRIBUTES: <p></p>
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::CPPClass
    NAME: operator_test_class
    APIUID: 
    ABSTRACT: ""
    DISCUSSION: "<p>class "
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::CPPClass"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Declared In:</b> <a href="../../index.html" target="_top">operator test 2</a><br>
</p>
    LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator new
        APIUID: //test_ref/cpp/instm/operator_test_class/operator_new/foo_t/()
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "foo_t"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator <<
        APIUID: //test_ref/cpp/instm/operator_test_class/operator%3C%3C/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Inequality operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator >>
        APIUID: //test_ref/cpp/instm/operator_test_class/operator%3E%3E/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Inequality operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator ==
        APIUID: //test_ref/cpp/instm/operator_test_class/operator%3D%3D/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Equality operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator !=
        APIUID: //test_ref/cpp/instm/operator_test_class/operator!%3D/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Inequality operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator +
        APIUID: //test_ref/cpp/instm/operator_test_class/operator+/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Addition operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator ++
        APIUID: //test_ref/cpp/instm/operator_test_class/operator++/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Increment operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator -
        APIUID: //test_ref/cpp/instm/operator_test_class/operator-/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Subtraction operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator --
        APIUID: //test_ref/cpp/instm/operator_test_class/operator--/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Decrement operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator *
        APIUID: //test_ref/cpp/instm/operator_test_class/operator*/bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Multiplication operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: operator /
        APIUID: //test_ref/cpp/instm/operator_test_class/operator//bool/(constoperator_test_class%26)
        ABSTRACT: "<p>Division operator
"
        DISCUSSION: "<p>All message contents, including the parameters, are checked.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "bool "
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: const operator_test_class &
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: inOtherMessage
            TYPE: 
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p>The message to compare."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Constant
        NAME: foo
        APIUID: //test_ref/cpp/clconst/operator_test_class/foo
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "const int"
        LINENUM: ""
        CLASS: "HeaderDoc::Constant"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: operator_test_class (HeaderDoc::CPPClass)
+---class
+--- 
+---operator_test_class
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-foo_t (HAS STATE)
|   +--- 
|   +---operator
|   +--- 
|   +---new
|   +---(
|   |   +---)
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator <<
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---<<
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator >>
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +--->>
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@constant foo
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-const (HAS STATE)
|   +--- 
|   +---int
|   +--- 
|   +---foo
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator ==
|   |   +---
@abstract       Equality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are identical.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---==
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator !=
|   |   +---
@abstract       Inequality operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         True if the messages are different.
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---!=
|   +--- 
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator +
|   |   +---
@abstract       Addition operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---+
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator ++
|   |   +---
@abstract       Increment operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---+
|   +---+
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator -
|   |   +---
@abstract       Subtraction operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +----
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator --
|   |   +---
@abstract       Decrement operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +----
|   +----
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator *
|   |   +---
@abstract       Multiplication operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---*
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@function       operator /
|   |   +---
@abstract       Division operator
|   |   +---
@discussion     All message contents, including the parameters, are checked.
|   |   +---
@result         I dunno what this does....
|   |   +---
@param  inOtherMessage  The message to compare.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-bool (HAS STATE)
|   +---[ NEWLINE ]
|   +---    
|   +---operator
|   +--- 
|   +---/
|   +---(
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---const
|   |   +--- 
|   |   +---operator_test_class
|   |   +--- 
|   |   +---&
|   |   +---inOtherMessage
|   |   +---)
|   +--- 
|   +---const
|   +---[ NEWLINE ]
|   +---    
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
END OF OBJECT


OBJECT: operator new (HeaderDoc::Function)
+-*-foo_t (HAS STATE)
+--- 
+---operator
+--- 
+---new
+---(
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator <<
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---<<
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator >>
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+--->>
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@constant foo
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-const (HAS STATE)
+--- 
+---int
+--- 
+---foo
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ==
|   +---
@abstract       Equality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are identical.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---==
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator !=
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator << (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---<<
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator >>
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+--->>
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@constant foo
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-const (HAS STATE)
+--- 
+---int
+--- 
+---foo
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ==
|   +---
@abstract       Equality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are identical.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---==
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator !=
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator >> (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+--->>
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@constant foo
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-const (HAS STATE)
+--- 
+---int
+--- 
+---foo
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ==
|   +---
@abstract       Equality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are identical.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---==
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator !=
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator == (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---==
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator !=
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator != (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator + (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator ++ (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator - (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator -- (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator * (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: operator / (HeaderDoc::Function)
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: foo (HeaderDoc::Constant)
+-*-const (HAS STATE)
+--- 
+---int
+--- 
+---foo
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ==
|   +---
@abstract       Equality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are identical.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---==
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator !=
|   +---
@abstract       Inequality operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         True if the messages are different.
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---!=
+--- 
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator +
|   +---
@abstract       Addition operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator ++
|   +---
@abstract       Increment operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---+
+---+
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator -
|   +---
@abstract       Subtraction operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator --
|   +---
@abstract       Decrement operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+----
+----
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator *
|   +---
@abstract       Multiplication operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---*
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@function       operator /
|   +---
@abstract       Division operator
|   +---
@discussion     All message contents, including the parameters, are checked.
|   +---
@result         I dunno what this does....
|   +---
@param  inOtherMessage  The message to compare.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-bool (HAS STATE)
+---[ NEWLINE ]
+---    
+---operator
+--- 
+---/
+---(
|   +---[ NEWLINE ]
|   +---            
|   +---const
|   +--- 
|   +---operator_test_class
|   +--- 
|   +---&
|   +---inOtherMessage
|   +---)
+--- 
+---const
+---[ NEWLINE ]
+---    
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: operator_test_class (HeaderDoc::CPPClass)
	<span class="keyword">class</span> <!-- a logicalPath="//test_ref/cpp/cl/operator_test_class //test_ref/cpp/tdef/operator_test_class //test_ref/cpp/tag/operator_test_class //test_ref/cpp/econst/operator_test_class //test_ref/cpp/struct/operator_test_class //test_ref/cpp/clconst/operator_test_class //test_ref/cpp/intf/operator_test_class" --><span class="type">operator_test_class</span><!-- /a --> {  
	    <span class="comment">/*!
	@function</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/foo_t //test_ref/cpp/tdef/foo_t //test_ref/cpp/tag/foo_t //test_ref/cpp/econst/foo_t //test_ref/cpp/struct/foo_t //test_ref/cpp/clconst/foo_t //test_ref/cpp/intf/foo_t" --><span class="type">foo_t</span><!-- /a --> <span class="keyword">operator</span> <!-- a logicalPath="//test_ref/cpp/instm/new //test_ref/cpp/clm/new //test_ref/cpp/intfcm/new //test_ref/cpp/intfm/new //test_ref/cpp/func/new //test_ref/cpp/ftmplt/new //test_ref/cpp/defn/new //test_ref/cpp/macro/new" --><span class="function">new</span><!-- /a -->();  
	    <span class="comment">/*!
	@function       operator &lt;&lt;
	@abstract       Inequality operator
	@discussion     All message contents, including the parameters, are checked.
	@result         True if the messages are different.
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> &lt;&lt; ( 
	        <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator &gt;&gt;
	@abstract       Inequality operator
	@discussion     All message contents, including the parameters, are checked.
	@result         True if the messages are different.
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> &gt;&gt; ( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>   <span class="comment">/*!
	@constant foo</span>
	        <span class="comment">*/</span>
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/int //test_ref/cpp/data/int" --><span class="var">int</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/foo //test_ref/cpp/data/foo" --><span class="var">foo</span><!-- /a -->;  
	    <span class="comment">/*!
	@function       operator ==
	@abstract       Equality operator
	@discussion     All message contents, including the parameters, are checked.
	@result         True if the messages are identical.
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> == ( 
	        <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>; 
	    <span class="comment">/*!
	@function       operator !=
	@abstract       Inequality operator
	@discussion     All message contents, including the parameters, are checked.
	@result         True if the messages are different.
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> != ( 
	        <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator +
	@abstract       Addition operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> +( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator ++
	@abstract       Increment operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> ++( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator -
	@abstract       Subtraction operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> -( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator --
	@abstract       Decrement operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> --( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator *
	@abstract       Multiplication operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> <span class="var">*</span>( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    <span class="comment">/*!
	@function       operator /
	@abstract       Division operator
	@discussion     All message contents, including the parameters, are checked.
	@result         I dunno what this does....
	@param  inOtherMessage  The message to compare.</span>
	        <span class="comment">*/</span>
	    <!-- a logicalPath="//test_ref/cpp/econst/bool //test_ref/cpp/data/bool" --><span class="var">bool</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/operator //test_ref/cpp/data/operator" --><span class="var">operator</span><!-- /a --> /( <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>    };  
END OF OBJECT


OBJECT: operator new (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/foo_t //test_ref/cpp/tdef/foo_t //test_ref/cpp/tag/foo_t //test_ref/cpp/econst/foo_t //test_ref/cpp/struct/foo_t //test_ref/cpp/clconst/foo_t //test_ref/cpp/intf/foo_t" --><span class="type">foo_t</span><!-- /a --> <span class="keyword">operator</span> <!-- a logicalPath="//test_ref/cpp/instm/new //test_ref/cpp/clm/new //test_ref/cpp/intfcm/new //test_ref/cpp/intfm/new //test_ref/cpp/func/new //test_ref/cpp/ftmplt/new //test_ref/cpp/defn/new //test_ref/cpp/macro/new" --><span class="function">new</span><!-- /a -->(); 
END OF OBJECT


OBJECT: operator << (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> &lt;&lt; ( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator >> (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> &gt;&gt; ( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator == (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> == ( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>; 
END OF OBJECT


OBJECT: operator != (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> != ( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator + (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> +( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator ++ (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> ++( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator - (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> -( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator -- (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> --( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator * (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> <span class="function">*</span>( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: operator / (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/bool //test_ref/cpp/tdef/bool //test_ref/cpp/tag/bool //test_ref/cpp/econst/bool //test_ref/cpp/struct/bool //test_ref/cpp/clconst/bool //test_ref/cpp/intf/bool" --><span class="type">bool</span><!-- /a --> <span class="keyword">operator</span> /( 
	    <span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/operator_test_class //test_ref/cpp/data/operator_test_class" --><span class="var">operator_test_class</span><!-- /a --> &amp;<!-- a logicalPath="//test_ref/cpp/econst/inOtherMessage //test_ref/cpp/data/inOtherMessage" --><span class="var">inOtherMessage</span><!-- /a -->) <span class="keyword">const</span>  
END OF OBJECT


OBJECT: foo (HeaderDoc::Constant)
	<span class="keyword">const</span> <!-- a logicalPath="//test_ref/cpp/econst/int //test_ref/cpp/data/int" --><span class="var">int</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/econst/foo //test_ref/cpp/data/foo" --><span class="var">foo</span><!-- /a -->; 
END OF OBJECT



$1|C$6|parser