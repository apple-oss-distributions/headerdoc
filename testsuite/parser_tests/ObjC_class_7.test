FrT;@1|>>0|$15|HeaderDoc::Test%22|$4|CODE$7|COMMENT$7|CPPCODE$15|EXPECTED_RESULT$23|EXPECTED_RESULT_ALLDECS$7|FAILMSG$8|FILENAME$4|LANG$4|NAME$7|SUBLANG$4|TYPE$2027|@interface ObjCClassDeux : ObjCClassUn
{   
    /*All instance variables are private*/
    struct __bFlags {   
                NSBorderType    borderType:2;
                NSTitlePosition titlePosition:3;
                unsigned int    transparent:1;
        unsigned int    boxType:2;
        unsigned int    _RESERVED:24;
    } _bFlags;
    id                  _unused;
}       
        
/*!
        @method classTwoMethodOne
        @abstract Returns the receiver's border type.
        @discussion Returns the receiver's border type. Border types are defined in NSView.h. Currently, the following border types are defined:
                
                * NSNoBorder
                
                * NSLineBorder
                
                * NSBezelBorder
                
                * NSGrooveBorder

        By default, an NSBox's border type is NSGrooveBorder.
*/      
- (NSBorderType)classTwoMethodOne;

/*!     
        @method classTwoMethodTwo
        @abstract Returns a constant representing the title position.
*/
- (NSTitlePosition)classTwoMethodTwo;
/*!             @method classTwoMethodThree
        @abstract Sets the border type to aType, which must be a valid border type. 
        @discussion Border types are defined in NSView.h. Currently, the following border types are defi
ned:
                
                * NSNoBorder
                * NSLineBorder
                * NSBezelBorder
                * NSGrooveBorder
        
        By default, an NSBox's border type is NSGrooveBorder.
        
        @param aType The specified type.
*/
- (void)classTwoMethodThree:(NSBorderType)aType;

/*!     
        @method classTwoMethodFour:bogusOne:bogusTwo
        @abstract Sets the title position and includes two bogus args for
                  testing purposes         @param bogusOne Fictive at best.         @param bogusTwo This argument is rarely used.
*/
- (void)classTwoMethodFour:(NSTitlePosition)aPosition bogusOne:(NSView *)bogusOne bogusTwo:(NSView *)bog
usTwo;

@end
$250|/*!     
        @class ObjCClassDeux 
        @abstract ObjCClassDeux provides a visual grouping element.
        @discussion An NSBox object is a simple NSView that can do two things: It can draw a border around itself, and it can title itself.
*/
$0|$64704|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 1
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 0
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/ObjC_class_7.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/ObjC_class_7.test
$parserState->{ISFORWARDDECLARATION} => 0
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => 0
$parserState->{categoryClass} =>  
$parserState->{classIsObjC} => 1
$parserState->{classtype} => @interface
$parserState->{forceClassDone} => 1
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 26
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => end
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occSuper} => ObjCClassUn
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 1
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 0
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 1
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => interface
$parserState->{prekeywordsodname} => 
$parserState->{prekeywordsodtype} => 
$parserState->{returntype} => @interface ObjCClassDeux : ObjCClassUn
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => end
$parserState->{sodtype} =>  ObjCClassDeux ObjCClassUn
$parserState->{sodtypeclasstoken} => interface
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 2
$parserState->{storeDec} => 
$parserState->{sublang} => C
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 26
typelist: @interface
namelist: ObjCClassDeux
posstypes: ObjCClassUn
value: 
returntype: ObjCClassDeux ObjCClassUn
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 34
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---@
+---interface
|   +--- 
|   +---ObjCClassDeux
|   +--- 
|   +---:
|   +--- 
|   +---ObjCClassUn
|   +---[ NEWLINE ]
|   +---{
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +---/*
|   |   |   +---All
|   |   |   +--- instance variables are private
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +-*-struct (HAS STATE)
|   |   +--- 
|   |   +---__bFlags
|   |   +--- 
|   |   +---{
|   |   |   +---[ NEWLINE ]
|   |   |   +---                
|   |   |   +---NSBorderType
|   |   |   +---    
|   |   |   +---borderType
|   |   |   +---:
|   |   |   +---2
|   |   |   +---;
|   |   |   +---[ NEWLINE ]
|   |   |   +---                
|   |   |   +---NSTitlePosition
|   |   |   +--- 
|   |   |   +---titlePosition
|   |   |   +---:
|   |   |   +---3
|   |   |   +---;
|   |   |   +---[ NEWLINE ]
|   |   |   +---                
|   |   |   +---unsigned
|   |   |   +--- 
|   |   |   +---int
|   |   |   +---    
|   |   |   +---transparent
|   |   |   +---:
|   |   |   +---1
|   |   |   +---;
|   |   |   +---[ NEWLINE ]
|   |   |   +---        
|   |   |   +---unsigned
|   |   |   +--- 
|   |   |   +---int
|   |   |   +---    
|   |   |   +---boxType
|   |   |   +---:
|   |   |   +---2
|   |   |   +---;
|   |   |   +---[ NEWLINE ]
|   |   |   +---        
|   |   |   +---unsigned
|   |   |   +--- 
|   |   |   +---int
|   |   |   +---    
|   |   |   +---_RESERVED
|   |   |   +---:
|   |   |   +---24
|   |   |   +---;
|   |   |   +---[ NEWLINE ]
|   |   |   +---    
|   |   |   +---}
|   |   +--- 
|   |   +---_bFlags
|   |   +---;
|   |   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +-*-id (HAS STATE)
|   |   +---                  
|   |   +---_unused
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +---}
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@method classTwoMethodOne
|   |   +---
@abstract Returns the receiver's border type.
|   |   +---
@discussion Returns the receiver's border type. Border types are defined in NSView.h. Currently, the following border types are defined:
|   |   +---[ NEWLINE ]
|   |   +---
* NSNoBorder
|   |   +---[ NEWLINE ]
|   |   +---
* NSLineBorder
|   |   +---[ NEWLINE ]
|   |   +---
* NSBezelBorder
|   |   +---[ NEWLINE ]
|   |   +---
* NSGrooveBorder
|   |   +---[ NEWLINE ]
|   |   +---
By default, an NSBox's border type is NSGrooveBorder.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---NSBorderType
|   |   |   +---)
|   |   +---classTwoMethodOne
|   |   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---     
|   |   +---
@method classTwoMethodTwo
|   |   +---
@abstract Returns a constant representing the title position.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---NSTitlePosition
|   |   |   +---)
|   |   +---classTwoMethodTwo
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---             @method classTwoMethodThree
|   |   +---
@abstract Sets the border type to aType, which must be a valid border type. 
|   |   +---
@discussion Border types are defined in NSView.h. Currently, the following border types are defi
|   |   +---
ned:
|   |   +---[ NEWLINE ]
|   |   +---
* NSNoBorder
|   |   +---
* NSLineBorder
|   |   +---
* NSBezelBorder
|   |   +---
* NSGrooveBorder
|   |   +---[ NEWLINE ]
|   |   +---
By default, an NSBox's border type is NSGrooveBorder.
|   |   +---[ NEWLINE ]
|   |   +---
@param aType The specified type.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---void
|   |   |   +---)
|   |   +---classTwoMethodThree
|   |   +---:
|   |   +---(
|   |   |   +---NSBorderType
|   |   |   +---)
|   |   +---aType
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---     
|   |   +---
@method classTwoMethodFour:bogusOne:bogusTwo
|   |   +---
@abstract Sets the title position and includes two bogus args for
|   |   +---
testing purposes         @param bogusOne Fictive at best.         @param bogusTwo This argument is rarely used.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---void
|   |   |   +---)
|   |   +---classTwoMethodFour
|   |   +---:
|   |   +---(
|   |   |   +---NSTitlePosition
|   |   |   +---)
|   |   +---aPosition
|   |   +--- 
|   |   +---bogusOne
|   |   +---:
|   |   +---(
|   |   |   +---NSView
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---bogusOne
|   |   +--- 
|   |   +---bogusTwo
|   |   +---:
|   |   +---(
|   |   |   +---NSView
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---bog
|   |   +---[ NEWLINE ]
|   |   +---usTwo
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---@
|   +---@end
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: ObjC class 7
APIUID: //test_ref/doc/header/ObjC_class_7.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: 
LONG ATTRIBUTES: 
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::ObjCClass
    NAME: ObjCClassDeux
    APIUID: 
    ABSTRACT: "<p>ObjCClassDeux provides a visual grouping element.
"
    DISCUSSION: "<p>An NSBox object is a simple NSView that can do two things: It can draw a border around itself, and it can title itself.
"
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::ObjCClass"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "0"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Superclass</b></p>

<p><!-- a logicalPath="//test_ref/occ/cl/ObjCClassUn" machineGenerated="true" -->ObjCClassUn<!-- /a --></p>
<p><b>Declared In</b></p><p><a href="../../index.html" logicalPath="//test_ref/doc/header/ObjC_class_7.test" target="_top" machineGenerated="true">ObjC class 7</a></p>

    LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Method
        NAME: classTwoMethodOne
        APIUID: //test_ref/occ/instm/ObjCClassDeux/classTwoMethodOne
        ABSTRACT: "<p>Returns the receiver's border type.
"
        DISCUSSION: "<p>Returns the receiver's border type. Border types are defined in NSView.h. Currently, the following border types are defined:
</p>
<p>* NSNoBorder
</p>
<p>* NSLineBorder
</p>
<p>* NSBezelBorder
</p>
<p>* NSGrooveBorder
</p>
<p>By default, an NSBox's border type is NSGrooveBorder.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "NSBorderType"
        LINENUM: ""
        CLASS: "HeaderDoc::Method"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aType
            TYPE: (NSBorderType)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aPosition
            TYPE: (NSTitlePosition)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: bogusOne
            TYPE: (NSView *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: bog
            TYPE: (NSView *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Method
        NAME: classTwoMethodTwo
        APIUID: //test_ref/occ/instm/ObjCClassDeux/classTwoMethodTwo
        ABSTRACT: "<p>Returns a constant representing the title position.
"
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "NSTitlePosition"
        LINENUM: ""
        CLASS: "HeaderDoc::Method"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aType
            TYPE: (NSBorderType)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aPosition
            TYPE: (NSTitlePosition)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: bogusOne
            TYPE: (NSView *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: bog
            TYPE: (NSView *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Method
        NAME: classTwoMethodThree:
        APIUID: //test_ref/occ/instm/ObjCClassDeux/classTwoMethodThree:
        ABSTRACT: "<p>Sets the border type to aType, which must be a valid border type. 
"
        DISCUSSION: "<p>Border types are defined in NSView.h. Currently, the following border types are defi
ned:
</p>
<p>* NSNoBorder
* NSLineBorder
* NSBezelBorder
* NSGrooveBorder
</p>
<p>By default, an NSBox's border type is NSGrooveBorder.
</p>
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "void"
        LINENUM: ""
        CLASS: "HeaderDoc::Method"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aType
            TYPE: (NSBorderType)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aPosition
            TYPE: (NSTitlePosition)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: bogusOne
            TYPE: (NSView *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: bog
            TYPE: (NSView *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aType
            TYPE: 
            APIUID: //test_ref/doc/methodparam/ObjCClassDeux/classTwoMethodThree:/aType
            ABSTRACT: ""
            DISCUSSION: "<p>The specified type."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Method
        NAME: classTwoMethodFour:bogusOne:bogusTwo:
        APIUID: //test_ref/occ/instm/ObjCClassDeux/classTwoMethodFour:bogusOne:bogusTwo:
        ABSTRACT: "<p>Sets the title position and includes two bogus args for
testing purposes         "
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "void"
        LINENUM: ""
        CLASS: "HeaderDoc::Method"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aPosition
            TYPE: (NSTitlePosition)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: bogusOne
            TYPE: (NSView *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: bog
            TYPE: (NSView *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: bogusOne
            TYPE: 
            APIUID: //test_ref/doc/methodparam/ObjCClassDeux/classTwoMethodFour:bogusOne:bogusTwo:/bogusOne
            ABSTRACT: ""
            DISCUSSION: "<p>Fictive at best."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: bogusTwo
            TYPE: 
            APIUID: //test_ref/doc/methodparam/ObjCClassDeux/classTwoMethodFour:bogusOne:bogusTwo:/bogusTwo
            ABSTRACT: ""
            DISCUSSION: "<p>This argument is rarely used."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: ObjCClassDeux (HeaderDoc::ObjCClass)
+---@
+---interface
|   +--- 
|   +---ObjCClassDeux
|   +--- 
|   +---:
|   +--- 
|   +---ObjCClassUn
|   +---[ NEWLINE ]
|   +---{
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +---/*
|   |   |   +---All
|   |   |   +--- instance variables are private
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +-*-struct (HAS STATE)
|   |   +--- 
|   |   +---__bFlags
|   |   +--- 
|   |   +---{
|   |   |   +---[ NEWLINE ]
|   |   |   +---                
|   |   |   +---NSBorderType
|   |   |   +---    
|   |   |   +---borderType
|   |   |   +---:
|   |   |   +---2
|   |   |   +---;
|   |   |   +---[ NEWLINE ]
|   |   |   +---                
|   |   |   +---NSTitlePosition
|   |   |   +--- 
|   |   |   +---titlePosition
|   |   |   +---:
|   |   |   +---3
|   |   |   +---;
|   |   |   +---[ NEWLINE ]
|   |   |   +---                
|   |   |   +---unsigned
|   |   |   +--- 
|   |   |   +---int
|   |   |   +---    
|   |   |   +---transparent
|   |   |   +---:
|   |   |   +---1
|   |   |   +---;
|   |   |   +---[ NEWLINE ]
|   |   |   +---        
|   |   |   +---unsigned
|   |   |   +--- 
|   |   |   +---int
|   |   |   +---    
|   |   |   +---boxType
|   |   |   +---:
|   |   |   +---2
|   |   |   +---;
|   |   |   +---[ NEWLINE ]
|   |   |   +---        
|   |   |   +---unsigned
|   |   |   +--- 
|   |   |   +---int
|   |   |   +---    
|   |   |   +---_RESERVED
|   |   |   +---:
|   |   |   +---24
|   |   |   +---;
|   |   |   +---[ NEWLINE ]
|   |   |   +---    
|   |   |   +---}
|   |   +--- 
|   |   +---_bFlags
|   |   +---;
|   |   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +-*-id (HAS STATE)
|   |   +---                  
|   |   +---_unused
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +---}
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@method classTwoMethodOne
|   |   +---
@abstract Returns the receiver's border type.
|   |   +---
@discussion Returns the receiver's border type. Border types are defined in NSView.h. Currently, the following border types are defined:
|   |   +---[ NEWLINE ]
|   |   +---
* NSNoBorder
|   |   +---[ NEWLINE ]
|   |   +---
* NSLineBorder
|   |   +---[ NEWLINE ]
|   |   +---
* NSBezelBorder
|   |   +---[ NEWLINE ]
|   |   +---
* NSGrooveBorder
|   |   +---[ NEWLINE ]
|   |   +---
By default, an NSBox's border type is NSGrooveBorder.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---NSBorderType
|   |   |   +---)
|   |   +---classTwoMethodOne
|   |   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---     
|   |   +---
@method classTwoMethodTwo
|   |   +---
@abstract Returns a constant representing the title position.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---NSTitlePosition
|   |   |   +---)
|   |   +---classTwoMethodTwo
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---             @method classTwoMethodThree
|   |   +---
@abstract Sets the border type to aType, which must be a valid border type. 
|   |   +---
@discussion Border types are defined in NSView.h. Currently, the following border types are defi
|   |   +---
ned:
|   |   +---[ NEWLINE ]
|   |   +---
* NSNoBorder
|   |   +---
* NSLineBorder
|   |   +---
* NSBezelBorder
|   |   +---
* NSGrooveBorder
|   |   +---[ NEWLINE ]
|   |   +---
By default, an NSBox's border type is NSGrooveBorder.
|   |   +---[ NEWLINE ]
|   |   +---
@param aType The specified type.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---void
|   |   |   +---)
|   |   +---classTwoMethodThree
|   |   +---:
|   |   +---(
|   |   |   +---NSBorderType
|   |   |   +---)
|   |   +---aType
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---     
|   |   +---
@method classTwoMethodFour:bogusOne:bogusTwo
|   |   +---
@abstract Sets the title position and includes two bogus args for
|   |   +---
testing purposes         @param bogusOne Fictive at best.         @param bogusTwo This argument is rarely used.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---void
|   |   |   +---)
|   |   +---classTwoMethodFour
|   |   +---:
|   |   +---(
|   |   |   +---NSTitlePosition
|   |   |   +---)
|   |   +---aPosition
|   |   +--- 
|   |   +---bogusOne
|   |   +---:
|   |   +---(
|   |   |   +---NSView
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---bogusOne
|   |   +--- 
|   |   +---bogusTwo
|   |   +---:
|   |   +---(
|   |   |   +---NSView
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---bog
|   |   +---[ NEWLINE ]
|   |   +---usTwo
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---@
|   +---@end
+---[ NEWLINE ]
END OF OBJECT


OBJECT: classTwoMethodOne (HeaderDoc::Method)
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---NSBorderType
|   |   +---)
|   +---classTwoMethodOne
|   +---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---     
|   +---
@method classTwoMethodTwo
|   +---
@abstract Returns a constant representing the title position.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---NSTitlePosition
|   |   +---)
|   +---classTwoMethodTwo
|   +---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +---             @method classTwoMethodThree
|   +---
@abstract Sets the border type to aType, which must be a valid border type. 
|   +---
@discussion Border types are defined in NSView.h. Currently, the following border types are defi
|   +---
ned:
|   +---[ NEWLINE ]
|   +---
* NSNoBorder
|   +---
* NSLineBorder
|   +---
* NSBezelBorder
|   +---
* NSGrooveBorder
|   +---[ NEWLINE ]
|   +---
By default, an NSBox's border type is NSGrooveBorder.
|   +---[ NEWLINE ]
|   +---
@param aType The specified type.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---void
|   |   +---)
|   +---classTwoMethodThree
|   +---:
|   +---(
|   |   +---NSBorderType
|   |   +---)
|   +---aType
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---     
|   +---
@method classTwoMethodFour:bogusOne:bogusTwo
|   +---
@abstract Sets the title position and includes two bogus args for
|   +---
testing purposes         @param bogusOne Fictive at best.         @param bogusTwo This argument is rarely used.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---void
|   |   +---)
|   +---classTwoMethodFour
|   +---:
|   +---(
|   |   +---NSTitlePosition
|   |   +---)
|   +---aPosition
|   +--- 
|   +---bogusOne
|   +---:
|   +---(
|   |   +---NSView
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---bogusOne
|   +--- 
|   +---bogusTwo
|   +---:
|   +---(
|   |   +---NSView
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---bog
|   +---[ NEWLINE ]
|   +---usTwo
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@
+---@end
END OF OBJECT


OBJECT: classTwoMethodTwo (HeaderDoc::Method)
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---NSTitlePosition
|   |   +---)
|   +---classTwoMethodTwo
|   +---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---/*
|   +---!
|   +---             @method classTwoMethodThree
|   +---
@abstract Sets the border type to aType, which must be a valid border type. 
|   +---
@discussion Border types are defined in NSView.h. Currently, the following border types are defi
|   +---
ned:
|   +---[ NEWLINE ]
|   +---
* NSNoBorder
|   +---
* NSLineBorder
|   +---
* NSBezelBorder
|   +---
* NSGrooveBorder
|   +---[ NEWLINE ]
|   +---
By default, an NSBox's border type is NSGrooveBorder.
|   +---[ NEWLINE ]
|   +---
@param aType The specified type.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---void
|   |   +---)
|   +---classTwoMethodThree
|   +---:
|   +---(
|   |   +---NSBorderType
|   |   +---)
|   +---aType
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---     
|   +---
@method classTwoMethodFour:bogusOne:bogusTwo
|   +---
@abstract Sets the title position and includes two bogus args for
|   +---
testing purposes         @param bogusOne Fictive at best.         @param bogusTwo This argument is rarely used.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---void
|   |   +---)
|   +---classTwoMethodFour
|   +---:
|   +---(
|   |   +---NSTitlePosition
|   |   +---)
|   +---aPosition
|   +--- 
|   +---bogusOne
|   +---:
|   +---(
|   |   +---NSView
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---bogusOne
|   +--- 
|   +---bogusTwo
|   +---:
|   +---(
|   |   +---NSView
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---bog
|   +---[ NEWLINE ]
|   +---usTwo
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@
+---@end
END OF OBJECT


OBJECT: classTwoMethodThree: (HeaderDoc::Method)
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---void
|   |   +---)
|   +---classTwoMethodThree
|   +---:
|   +---(
|   |   +---NSBorderType
|   |   +---)
|   +---aType
|   +---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---     
|   +---
@method classTwoMethodFour:bogusOne:bogusTwo
|   +---
@abstract Sets the title position and includes two bogus args for
|   +---
testing purposes         @param bogusOne Fictive at best.         @param bogusTwo This argument is rarely used.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---void
|   |   +---)
|   +---classTwoMethodFour
|   +---:
|   +---(
|   |   +---NSTitlePosition
|   |   +---)
|   +---aPosition
|   +--- 
|   +---bogusOne
|   +---:
|   +---(
|   |   +---NSView
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---bogusOne
|   +--- 
|   +---bogusTwo
|   +---:
|   +---(
|   |   +---NSView
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---bog
|   +---[ NEWLINE ]
|   +---usTwo
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@
+---@end
END OF OBJECT


OBJECT: classTwoMethodFour:bogusOne:bogusTwo: (HeaderDoc::Method)
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---void
|   |   +---)
|   +---classTwoMethodFour
|   +---:
|   +---(
|   |   +---NSTitlePosition
|   |   +---)
|   +---aPosition
|   +--- 
|   +---bogusOne
|   +---:
|   +---(
|   |   +---NSView
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---bogusOne
|   +--- 
|   +---bogusTwo
|   +---:
|   +---(
|   |   +---NSView
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---bog
|   +---[ NEWLINE ]
|   +---usTwo
|   +---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@
+---@end
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: ObjCClassDeux (HeaderDoc::ObjCClass)
	@<!-- a logicalPath="//test_ref/occ/cl/interface //test_ref/occ/tdef/interface //test_ref/occ/tag/interface //test_ref/occ/struct/interface //test_ref/occ/intf/interface //test_ref/doc/anysymbol/interface" machineGenerated="true" --><span class="type">interface</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/ObjCClassDeux //test_ref/occ/tdef/ObjCClassDeux //test_ref/occ/tag/ObjCClassDeux //test_ref/occ/struct/ObjCClassDeux //test_ref/occ/intf/ObjCClassDeux //test_ref/doc/anysymbol/ObjCClassDeux" machineGenerated="true" --><span class="type">ObjCClassDeux</span><!-- /a --> : <!-- a logicalPath="//test_ref/occ/cl/ObjCClassUn //test_ref/occ/tdef/ObjCClassUn //test_ref/occ/tag/ObjCClassUn //test_ref/occ/struct/ObjCClassUn //test_ref/occ/intf/ObjCClassUn //test_ref/doc/anysymbol/ObjCClassUn" machineGenerated="true" --><span class="type">ObjCClassUn</span><!-- /a --> { 
	        <span class="comment">/*All instance variables are private*/</span>
	        <span class="keyword">struct</span> <!-- a logicalPath="//test_ref/occ/cl/__bFlags //test_ref/occ/tdef/__bFlags //test_ref/occ/tag/__bFlags //test_ref/occ/struct/__bFlags //test_ref/occ/intf/__bFlags //test_ref/doc/anysymbol/__bFlags" machineGenerated="true" --><span class="type">__bFlags</span><!-- /a --> { 
	            <!-- a logicalPath="//test_ref/occ/cl/NSBorderType //test_ref/occ/tdef/NSBorderType //test_ref/occ/tag/NSBorderType //test_ref/occ/struct/NSBorderType //test_ref/occ/intf/NSBorderType //test_ref/doc/anysymbol/NSBorderType" machineGenerated="true" --><span class="type">NSBorderType</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/borderType //test_ref/occ/tdef/borderType //test_ref/occ/tag/borderType //test_ref/occ/struct/borderType //test_ref/occ/intf/borderType //test_ref/doc/anysymbol/borderType" machineGenerated="true" --><span class="type">borderType</span><!-- /a -->:<span class="number">2</span>; 
	            <!-- a logicalPath="//test_ref/occ/cl/NSTitlePosition //test_ref/occ/tdef/NSTitlePosition //test_ref/occ/tag/NSTitlePosition //test_ref/occ/struct/NSTitlePosition //test_ref/occ/intf/NSTitlePosition //test_ref/doc/anysymbol/NSTitlePosition" machineGenerated="true" --><span class="type">NSTitlePosition</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/titlePosition //test_ref/occ/tdef/titlePosition //test_ref/occ/tag/titlePosition //test_ref/occ/struct/titlePosition //test_ref/occ/intf/titlePosition //test_ref/doc/anysymbol/titlePosition" machineGenerated="true" --><span class="type">titlePosition</span><!-- /a -->:<span class="number">3</span>; 
	            <span class="keyword">unsigned</span> <!-- a logicalPath="//test_ref/occ/cl/int //test_ref/occ/tdef/int //test_ref/occ/tag/int //test_ref/occ/struct/int //test_ref/occ/intf/int //test_ref/doc/anysymbol/int" machineGenerated="true" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/transparent //test_ref/occ/tdef/transparent //test_ref/occ/tag/transparent //test_ref/occ/struct/transparent //test_ref/occ/intf/transparent //test_ref/doc/anysymbol/transparent" machineGenerated="true" --><span class="type">transparent</span><!-- /a -->:<span class="number">1</span>; 
	            <span class="keyword">unsigned</span> <!-- a logicalPath="//test_ref/occ/cl/int //test_ref/occ/tdef/int //test_ref/occ/tag/int //test_ref/occ/struct/int //test_ref/occ/intf/int //test_ref/doc/anysymbol/int" machineGenerated="true" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/boxType //test_ref/occ/tdef/boxType //test_ref/occ/tag/boxType //test_ref/occ/struct/boxType //test_ref/occ/intf/boxType //test_ref/doc/anysymbol/boxType" machineGenerated="true" --><span class="type">boxType</span><!-- /a -->:<span class="number">2</span>; 
	            <span class="keyword">unsigned</span> <!-- a logicalPath="//test_ref/occ/cl/int //test_ref/occ/tdef/int //test_ref/occ/tag/int //test_ref/occ/struct/int //test_ref/occ/intf/int //test_ref/doc/anysymbol/int" machineGenerated="true" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/_RESERVED //test_ref/occ/tdef/_RESERVED //test_ref/occ/tag/_RESERVED //test_ref/occ/struct/_RESERVED //test_ref/occ/intf/_RESERVED //test_ref/doc/anysymbol/_RESERVED" machineGenerated="true" --><span class="type">_RESERVED</span><!-- /a -->:<span class="number">24</span>; 
	                } <!-- a logicalPath="//test_ref/occ/econst/_bFlags //test_ref/occ/data/_bFlags //test_ref/occ/clconst/_bFlags " machineGenerated="true" --><span class="var">_bFlags</span><!-- /a -->; 
	        <!-- a logicalPath="//test_ref/occ/cl/id //test_ref/occ/tdef/id //test_ref/occ/tag/id //test_ref/occ/struct/id //test_ref/occ/intf/id //test_ref/doc/anysymbol/id" machineGenerated="true" --><span class="type">id</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/econst/_unused //test_ref/occ/data/_unused //test_ref/occ/clconst/_unused " machineGenerated="true" --><span class="var">_unused</span><!-- /a -->; 
	        }  <span class="comment">/*!
	@method classTwoMethodOne
	@abstract Returns the receiver's border type.
	@discussion Returns the receiver's border type. Border types are defined in NSView.h. Currently, the following border types are defined:
	
	* NSNoBorder
	
	* NSLineBorder
	
	* NSBezelBorder
	
	* NSGrooveBorder
	
	By default, an NSBox's border type is NSGrooveBorder.</span>
	        <span class="comment">*/</span>
	    - (
	            <span class="param">NSBorderType</span>)<!-- a logicalPath="//test_ref/occ/econst/classTwoMethodOne //test_ref/occ/data/classTwoMethodOne //test_ref/occ/clconst/classTwoMethodOne " machineGenerated="true" --><span class="var">classTwoMethodOne</span><!-- /a -->;   <span class="comment">/*! 
	@method classTwoMethodTwo
	@abstract Returns a constant representing the title position.</span>
	        <span class="comment">*/</span>
	    - (
	            <span class="param">NSTitlePosition</span>)<!-- a logicalPath="//test_ref/occ/econst/classTwoMethodTwo //test_ref/occ/data/classTwoMethodTwo //test_ref/occ/clconst/classTwoMethodTwo " machineGenerated="true" --><span class="var">classTwoMethodTwo</span><!-- /a -->;  <span class="comment">/*!             @method classTwoMethodThree
	@abstract Sets the border type to aType, which must be a valid border type. 
	@discussion Border types are defined in NSView.h. Currently, the following border types are defi
	ned:
	
	* NSNoBorder
	* NSLineBorder
	* NSBezelBorder
	* NSGrooveBorder
	
	By default, an NSBox's border type is NSGrooveBorder.
	
	@param aType The specified type.</span>
	        <span class="comment">*/</span>
	    - (
	            <span class="param">void</span>)<!-- a logicalPath="//test_ref/occ/cl/classTwoMethodThree //test_ref/occ/tdef/classTwoMethodThree //test_ref/occ/tag/classTwoMethodThree //test_ref/occ/struct/classTwoMethodThree //test_ref/occ/intf/classTwoMethodThree //test_ref/doc/anysymbol/classTwoMethodThree" machineGenerated="true" --><span class="type">classTwoMethodThree</span><!-- /a -->:(
	            <span class="param">NSBorderType</span>)<!-- a logicalPath="//test_ref/occ/econst/aType //test_ref/occ/data/aType //test_ref/occ/clconst/aType " machineGenerated="true" --><span class="var">aType</span><!-- /a -->;   <span class="comment">/*! 
	@method classTwoMethodFour:bogusOne:bogusTwo
	@abstract Sets the title position and includes two bogus args for
	testing purposes         @param bogusOne Fictive at best.         @param bogusTwo This argument is rarely used.</span>
	        <span class="comment">*/</span>
	    - (
	            <span class="param">void</span>)<!-- a logicalPath="//test_ref/occ/cl/classTwoMethodFour //test_ref/occ/tdef/classTwoMethodFour //test_ref/occ/tag/classTwoMethodFour //test_ref/occ/struct/classTwoMethodFour //test_ref/occ/intf/classTwoMethodFour //test_ref/doc/anysymbol/classTwoMethodFour" machineGenerated="true" --><span class="type">classTwoMethodFour</span><!-- /a -->:(
	            <span class="param">NSTitlePosition</span>)<!-- a logicalPath="//test_ref/occ/cl/aPosition //test_ref/occ/tdef/aPosition //test_ref/occ/tag/aPosition //test_ref/occ/struct/aPosition //test_ref/occ/intf/aPosition //test_ref/doc/anysymbol/aPosition" machineGenerated="true" --><span class="type">aPosition</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/bogusOne //test_ref/occ/tdef/bogusOne //test_ref/occ/tag/bogusOne //test_ref/occ/struct/bogusOne //test_ref/occ/intf/bogusOne //test_ref/doc/anysymbol/bogusOne" machineGenerated="true" --><span class="type">bogusOne</span><!-- /a -->:(
	            <!-- a logicalPath="//test_ref/occ/cl/NSView //test_ref/occ/tdef/NSView //test_ref/occ/tag/NSView //test_ref/occ/struct/NSView //test_ref/occ/intf/NSView //test_ref/doc/anysymbol/NSView" machineGenerated="true" --><span class="type">NSView</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/cl/bogusOne //test_ref/occ/tdef/bogusOne //test_ref/occ/tag/bogusOne //test_ref/occ/struct/bogusOne //test_ref/occ/intf/bogusOne //test_ref/doc/anysymbol/bogusOne" machineGenerated="true" --><span class="type">bogusOne</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/bogusTwo //test_ref/occ/tdef/bogusTwo //test_ref/occ/tag/bogusTwo //test_ref/occ/struct/bogusTwo //test_ref/occ/intf/bogusTwo //test_ref/doc/anysymbol/bogusTwo" machineGenerated="true" --><span class="type">bogusTwo</span><!-- /a -->:(
	            <!-- a logicalPath="//test_ref/occ/cl/NSView //test_ref/occ/tdef/NSView //test_ref/occ/tag/NSView //test_ref/occ/struct/NSView //test_ref/occ/intf/NSView //test_ref/doc/anysymbol/NSView" machineGenerated="true" --><span class="type">NSView</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/cl/bog //test_ref/occ/tdef/bog //test_ref/occ/tag/bog //test_ref/occ/struct/bog //test_ref/occ/intf/bog //test_ref/doc/anysymbol/bog" machineGenerated="true" --><span class="type">bog</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/econst/usTwo //test_ref/occ/data/usTwo //test_ref/occ/clconst/usTwo " machineGenerated="true" --><span class="var">usTwo</span><!-- /a -->;   @@end 
END OF OBJECT


OBJECT: classTwoMethodOne (HeaderDoc::Method)
	- (<!-- a logicalPath="//test_ref/occ/cl/NSBorderType //test_ref/occ/tdef/NSBorderType //test_ref/occ/tag/NSBorderType //test_ref/occ/struct/NSBorderType //test_ref/occ/intf/NSBorderType //test_ref/doc/anysymbol/NSBorderType" machineGenerated="true" --><span class="type">NSBorderType</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/econst/classTwoMethodOne //test_ref/occ/data/ObjCClassDeux/classTwoMethodOne //test_ref/occ/data/classTwoMethodOne //test_ref/occ/clconst/ObjCClassDeux/classTwoMethodOne " machineGenerated="true" --><span class="var">classTwoMethodOne</span><!-- /a -->; 
END OF OBJECT


OBJECT: classTwoMethodTwo (HeaderDoc::Method)
	- (<!-- a logicalPath="//test_ref/occ/cl/NSTitlePosition //test_ref/occ/tdef/NSTitlePosition //test_ref/occ/tag/NSTitlePosition //test_ref/occ/struct/NSTitlePosition //test_ref/occ/intf/NSTitlePosition //test_ref/doc/anysymbol/NSTitlePosition" machineGenerated="true" --><span class="type">NSTitlePosition</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/econst/classTwoMethodTwo //test_ref/occ/data/ObjCClassDeux/classTwoMethodTwo //test_ref/occ/data/classTwoMethodTwo //test_ref/occ/clconst/ObjCClassDeux/classTwoMethodTwo " machineGenerated="true" --><span class="var">classTwoMethodTwo</span><!-- /a -->; 
END OF OBJECT


OBJECT: classTwoMethodThree: (HeaderDoc::Method)
	- (<!-- a logicalPath="//test_ref/occ/cl/void //test_ref/occ/tdef/void //test_ref/occ/tag/void //test_ref/occ/struct/void //test_ref/occ/intf/void //test_ref/doc/anysymbol/void" machineGenerated="true" --><span class="type">void</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/instm/ObjCClassDeux/classTwoMethodThree //test_ref/occ/clm/ObjCClassDeux/classTwoMethodThree //test_ref/occ/intfcm/ObjCClassDeux/classTwoMethodThree //test_ref/occ/intfm/ObjCClassDeux/classTwoMethodThree //test_ref/occ/func/classTwoMethodThree //test_ref/occ/ftmplt/ObjCClassDeux/classTwoMethodThree //test_ref/occ/defn/classTwoMethodThree //test_ref/occ/macro/classTwoMethodThree //test_ref/doc/anysymbol/classTwoMethodThree" machineGenerated="true" --><span class="function">classTwoMethodThree</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/NSBorderType //test_ref/occ/tdef/NSBorderType //test_ref/occ/tag/NSBorderType //test_ref/occ/struct/NSBorderType //test_ref/occ/intf/NSBorderType //test_ref/doc/anysymbol/NSBorderType" machineGenerated="true" --><span class="type">NSBorderType</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/econst/aType //test_ref/occ/data/ObjCClassDeux/aType //test_ref/occ/data/aType //test_ref/occ/clconst/ObjCClassDeux/aType " machineGenerated="true" --><span class="var">aType</span><!-- /a -->; 
END OF OBJECT


OBJECT: classTwoMethodFour:bogusOne:bogusTwo: (HeaderDoc::Method)
	- (<!-- a logicalPath="//test_ref/occ/cl/void //test_ref/occ/tdef/void //test_ref/occ/tag/void //test_ref/occ/struct/void //test_ref/occ/intf/void //test_ref/doc/anysymbol/void" machineGenerated="true" --><span class="type">void</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/instm/ObjCClassDeux/classTwoMethodFour //test_ref/occ/clm/ObjCClassDeux/classTwoMethodFour //test_ref/occ/intfcm/ObjCClassDeux/classTwoMethodFour //test_ref/occ/intfm/ObjCClassDeux/classTwoMethodFour //test_ref/occ/func/classTwoMethodFour //test_ref/occ/ftmplt/ObjCClassDeux/classTwoMethodFour //test_ref/occ/defn/classTwoMethodFour //test_ref/occ/macro/classTwoMethodFour //test_ref/doc/anysymbol/classTwoMethodFour" machineGenerated="true" --><span class="function">classTwoMethodFour</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/NSTitlePosition //test_ref/occ/tdef/NSTitlePosition //test_ref/occ/tag/NSTitlePosition //test_ref/occ/struct/NSTitlePosition //test_ref/occ/intf/NSTitlePosition //test_ref/doc/anysymbol/NSTitlePosition" machineGenerated="true" --><span class="type">NSTitlePosition</span><!-- /a -->)<span class="param">aPosition</span> 
	        <!-- a logicalPath="//test_ref/occ/instm/ObjCClassDeux/bogusOne //test_ref/occ/clm/ObjCClassDeux/bogusOne //test_ref/occ/intfcm/ObjCClassDeux/bogusOne //test_ref/occ/intfm/ObjCClassDeux/bogusOne //test_ref/occ/func/bogusOne //test_ref/occ/ftmplt/ObjCClassDeux/bogusOne //test_ref/occ/defn/bogusOne //test_ref/occ/macro/bogusOne //test_ref/doc/anysymbol/bogusOne" machineGenerated="true" --><span class="function">bogusOne</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/NSView //test_ref/occ/tdef/NSView //test_ref/occ/tag/NSView //test_ref/occ/struct/NSView //test_ref/occ/intf/NSView //test_ref/doc/anysymbol/NSView" machineGenerated="true" --><span class="type">NSView</span><!-- /a --> <span class="type">*</span>)<span class="param">bogusOne</span> <!-- a logicalPath="//test_ref/occ/instm/ObjCClassDeux/bogusTwo //test_ref/occ/clm/ObjCClassDeux/bogusTwo //test_ref/occ/intfcm/ObjCClassDeux/bogusTwo //test_ref/occ/intfm/ObjCClassDeux/bogusTwo //test_ref/occ/func/bogusTwo //test_ref/occ/ftmplt/ObjCClassDeux/bogusTwo //test_ref/occ/defn/bogusTwo //test_ref/occ/macro/bogusTwo //test_ref/doc/anysymbol/bogusTwo" machineGenerated="true" --><span class="function">bogusTwo</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/NSView //test_ref/occ/tdef/NSView //test_ref/occ/tag/NSView //test_ref/occ/struct/NSView //test_ref/occ/intf/NSView //test_ref/doc/anysymbol/NSView" machineGenerated="true" --><span class="type">NSView</span><!-- /a --> <span class="type">*</span>)<span class="param">bog</span> <!-- a logicalPath="//test_ref/occ/econst/usTwo //test_ref/occ/data/ObjCClassDeux/usTwo //test_ref/occ/data/usTwo //test_ref/occ/clconst/ObjCClassDeux/usTwo " machineGenerated="true" --><span class="var">usTwo</span><!-- /a -->; 
END OF OBJECT



$89930|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 1
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 0
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/ObjC_class_7.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/ObjC_class_7.test
$parserState->{ISFORWARDDECLARATION} => 0
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => 0
$parserState->{categoryClass} =>  
$parserState->{classIsObjC} => 1
$parserState->{classtype} => @interface
$parserState->{forceClassDone} => 1
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 26
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => end
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occSuper} => ObjCClassUn
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 1
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 0
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 1
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => interface
$parserState->{prekeywordsodname} => 
$parserState->{prekeywordsodtype} => 
$parserState->{returntype} => @interface ObjCClassDeux : ObjCClassUn
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => end
$parserState->{sodtype} =>  ObjCClassDeux ObjCClassUn
$parserState->{sodtypeclasstoken} => interface
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 2
$parserState->{storeDec} => 
$parserState->{sublang} => C
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 26
typelist: @interface
namelist: ObjCClassDeux
posstypes: ObjCClassUn
value: 
returntype: ObjCClassDeux ObjCClassUn
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 34
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---@
+---interface
|   +--- 
|   +---ObjCClassDeux
|   +--- 
|   +---:
|   +--- 
|   +---ObjCClassUn
|   +---[ NEWLINE ]
|   +---{
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +---/*
|   |   |   +---All
|   |   |   +--- instance variables are private
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +-*-struct (HAS STATE)
|   |   +--- 
|   |   +---__bFlags
|   |   +--- 
|   |   +---{
|   |   |   +---[ NEWLINE ]
|   |   |   +---                
|   |   |   +---NSBorderType
|   |   |   +---    
|   |   |   +---borderType
|   |   |   +---:
|   |   |   +---2
|   |   |   +---;
|   |   |   +---[ NEWLINE ]
|   |   |   +---                
|   |   |   +---NSTitlePosition
|   |   |   +--- 
|   |   |   +---titlePosition
|   |   |   +---:
|   |   |   +---3
|   |   |   +---;
|   |   |   +---[ NEWLINE ]
|   |   |   +---                
|   |   |   +---unsigned
|   |   |   +--- 
|   |   |   +---int
|   |   |   +---    
|   |   |   +---transparent
|   |   |   +---:
|   |   |   +---1
|   |   |   +---;
|   |   |   +---[ NEWLINE ]
|   |   |   +---        
|   |   |   +---unsigned
|   |   |   +--- 
|   |   |   +---int
|   |   |   +---    
|   |   |   +---boxType
|   |   |   +---:
|   |   |   +---2
|   |   |   +---;
|   |   |   +---[ NEWLINE ]
|   |   |   +---        
|   |   |   +---unsigned
|   |   |   +--- 
|   |   |   +---int
|   |   |   +---    
|   |   |   +---_RESERVED
|   |   |   +---:
|   |   |   +---24
|   |   |   +---;
|   |   |   +---[ NEWLINE ]
|   |   |   +---    
|   |   |   +---}
|   |   +--- 
|   |   +---_bFlags
|   |   +---;
|   |   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +-*-id (HAS STATE)
|   |   +---                  
|   |   +---_unused
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +---}
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@method classTwoMethodOne
|   |   +---
@abstract Returns the receiver's border type.
|   |   +---
@discussion Returns the receiver's border type. Border types are defined in NSView.h. Currently, the following border types are defined:
|   |   +---[ NEWLINE ]
|   |   +---
* NSNoBorder
|   |   +---[ NEWLINE ]
|   |   +---
* NSLineBorder
|   |   +---[ NEWLINE ]
|   |   +---
* NSBezelBorder
|   |   +---[ NEWLINE ]
|   |   +---
* NSGrooveBorder
|   |   +---[ NEWLINE ]
|   |   +---
By default, an NSBox's border type is NSGrooveBorder.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---NSBorderType
|   |   |   +---)
|   |   +---classTwoMethodOne
|   |   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---     
|   |   +---
@method classTwoMethodTwo
|   |   +---
@abstract Returns a constant representing the title position.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---NSTitlePosition
|   |   |   +---)
|   |   +---classTwoMethodTwo
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---             @method classTwoMethodThree
|   |   +---
@abstract Sets the border type to aType, which must be a valid border type. 
|   |   +---
@discussion Border types are defined in NSView.h. Currently, the following border types are defi
|   |   +---
ned:
|   |   +---[ NEWLINE ]
|   |   +---
* NSNoBorder
|   |   +---
* NSLineBorder
|   |   +---
* NSBezelBorder
|   |   +---
* NSGrooveBorder
|   |   +---[ NEWLINE ]
|   |   +---
By default, an NSBox's border type is NSGrooveBorder.
|   |   +---[ NEWLINE ]
|   |   +---
@param aType The specified type.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---void
|   |   |   +---)
|   |   +---classTwoMethodThree
|   |   +---:
|   |   +---(
|   |   |   +---NSBorderType
|   |   |   +---)
|   |   +---aType
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---     
|   |   +---
@method classTwoMethodFour:bogusOne:bogusTwo
|   |   +---
@abstract Sets the title position and includes two bogus args for
|   |   +---
testing purposes         @param bogusOne Fictive at best.         @param bogusTwo This argument is rarely used.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---void
|   |   |   +---)
|   |   +---classTwoMethodFour
|   |   +---:
|   |   +---(
|   |   |   +---NSTitlePosition
|   |   |   +---)
|   |   +---aPosition
|   |   +--- 
|   |   +---bogusOne
|   |   +---:
|   |   +---(
|   |   |   +---NSView
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---bogusOne
|   |   +--- 
|   |   +---bogusTwo
|   |   +---:
|   |   +---(
|   |   |   +---NSView
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---bog
|   |   +---[ NEWLINE ]
|   |   +---usTwo
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---@
|   +---@end
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: ObjC class 7
APIUID: //test_ref/doc/header/ObjC_class_7.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: 
LONG ATTRIBUTES: 
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::ObjCClass
    NAME: ObjCClassDeux
    APIUID: 
    ABSTRACT: "<p>ObjCClassDeux provides a visual grouping element.
"
    DISCUSSION: "<p>An NSBox object is a simple NSView that can do two things: It can draw a border around itself, and it can title itself.
"
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::ObjCClass"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "0"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Superclass</b></p>

<p><!-- a logicalPath="//test_ref/occ/cl/ObjCClassUn" machineGenerated="true" -->ObjCClassUn<!-- /a --></p>
<p><b>Declared In</b></p><p><a href="../../index.html" logicalPath="//test_ref/doc/header/ObjC_class_7.test" target="_top" machineGenerated="true">ObjC class 7</a></p>

    LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Method
        NAME: classTwoMethodOne
        APIUID: //test_ref/occ/instm/ObjCClassDeux/classTwoMethodOne
        ABSTRACT: "<p>Returns the receiver's border type.
"
        DISCUSSION: "<p>Returns the receiver's border type. Border types are defined in NSView.h. Currently, the following border types are defined:
</p>
<p>* NSNoBorder
</p>
<p>* NSLineBorder
</p>
<p>* NSBezelBorder
</p>
<p>* NSGrooveBorder
</p>
<p>By default, an NSBox's border type is NSGrooveBorder.
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "NSBorderType"
        LINENUM: ""
        CLASS: "HeaderDoc::Method"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aType
            TYPE: (NSBorderType)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aPosition
            TYPE: (NSTitlePosition)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: bogusOne
            TYPE: (NSView *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: bog
            TYPE: (NSView *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Method
        NAME: classTwoMethodTwo
        APIUID: //test_ref/occ/instm/ObjCClassDeux/classTwoMethodTwo
        ABSTRACT: "<p>Returns a constant representing the title position.
"
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "NSTitlePosition"
        LINENUM: ""
        CLASS: "HeaderDoc::Method"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aType
            TYPE: (NSBorderType)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aPosition
            TYPE: (NSTitlePosition)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: bogusOne
            TYPE: (NSView *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: bog
            TYPE: (NSView *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Method
        NAME: classTwoMethodThree:
        APIUID: //test_ref/occ/instm/ObjCClassDeux/classTwoMethodThree:
        ABSTRACT: "<p>Sets the border type to aType, which must be a valid border type. 
"
        DISCUSSION: "<p>Border types are defined in NSView.h. Currently, the following border types are defi
ned:
</p>
<p>* NSNoBorder
* NSLineBorder
* NSBezelBorder
* NSGrooveBorder
</p>
<p>By default, an NSBox's border type is NSGrooveBorder.
</p>
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "void"
        LINENUM: ""
        CLASS: "HeaderDoc::Method"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aType
            TYPE: (NSBorderType)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aPosition
            TYPE: (NSTitlePosition)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: bogusOne
            TYPE: (NSView *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: bog
            TYPE: (NSView *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aType
            TYPE: 
            APIUID: //test_ref/doc/methodparam/ObjCClassDeux/classTwoMethodThree:/aType
            ABSTRACT: ""
            DISCUSSION: "<p>The specified type."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Method
        NAME: classTwoMethodFour:bogusOne:bogusTwo:
        APIUID: //test_ref/occ/instm/ObjCClassDeux/classTwoMethodFour:bogusOne:bogusTwo:
        ABSTRACT: "<p>Sets the title position and includes two bogus args for
testing purposes         "
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "void"
        LINENUM: ""
        CLASS: "HeaderDoc::Method"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aPosition
            TYPE: (NSTitlePosition)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: bogusOne
            TYPE: (NSView *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: bog
            TYPE: (NSView *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TAGGED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: bogusOne
            TYPE: 
            APIUID: //test_ref/doc/methodparam/ObjCClassDeux/classTwoMethodFour:bogusOne:bogusTwo:/bogusOne
            ABSTRACT: ""
            DISCUSSION: "<p>Fictive at best."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: bogusTwo
            TYPE: 
            APIUID: //test_ref/doc/methodparam/ObjCClassDeux/classTwoMethodFour:bogusOne:bogusTwo:/bogusTwo
            ABSTRACT: ""
            DISCUSSION: "<p>This argument is rarely used."
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Struct
        NAME: _bFlags
        APIUID: //test_ref/occ/tag/ObjCClassDeux/_bFlags
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: ""
        LINENUM: ""
        CLASS: "HeaderDoc::Struct"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: borderType
            TYPE: NSBorderType
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: titlePosition
            TYPE: NSTitlePosition
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: transparent
            TYPE: unsigned int
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: boxType
            TYPE: unsigned int
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: _RESERVED
            TYPE: unsigned int
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Struct
        NAME: __bFlags
        APIUID: //test_ref/occ/tag/ObjCClassDeux/__bFlags
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: ""
        LINENUM: ""
        CLASS: "HeaderDoc::Struct"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: borderType
            TYPE: NSBorderType
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: titlePosition
            TYPE: NSTitlePosition
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: transparent
            TYPE: unsigned int
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: boxType
            TYPE: unsigned int
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: _RESERVED
            TYPE: unsigned int
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS PROPERTY: 0
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Var
        NAME: _unused
        APIUID: //test_ref/occ/data/ObjCClassDeux/_unused
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "id"
        LINENUM: ""
        CLASS: "HeaderDoc::Var"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: ObjCClassDeux (HeaderDoc::ObjCClass)
+---@
+---interface
|   +--- 
|   +---ObjCClassDeux
|   +--- 
|   +---:
|   +--- 
|   +---ObjCClassUn
|   +---[ NEWLINE ]
|   +---{
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +---/*
|   |   |   +---All
|   |   |   +--- instance variables are private
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +-*-struct (HAS STATE)
|   |   +--- 
|   |   +---__bFlags
|   |   +--- 
|   |   +---{
|   |   |   +---[ NEWLINE ]
|   |   |   +---                
|   |   |   +---NSBorderType
|   |   |   +---    
|   |   |   +---borderType
|   |   |   +---:
|   |   |   +---2
|   |   |   +---;
|   |   |   +---[ NEWLINE ]
|   |   |   +---                
|   |   |   +---NSTitlePosition
|   |   |   +--- 
|   |   |   +---titlePosition
|   |   |   +---:
|   |   |   +---3
|   |   |   +---;
|   |   |   +---[ NEWLINE ]
|   |   |   +---                
|   |   |   +---unsigned
|   |   |   +--- 
|   |   |   +---int
|   |   |   +---    
|   |   |   +---transparent
|   |   |   +---:
|   |   |   +---1
|   |   |   +---;
|   |   |   +---[ NEWLINE ]
|   |   |   +---        
|   |   |   +---unsigned
|   |   |   +--- 
|   |   |   +---int
|   |   |   +---    
|   |   |   +---boxType
|   |   |   +---:
|   |   |   +---2
|   |   |   +---;
|   |   |   +---[ NEWLINE ]
|   |   |   +---        
|   |   |   +---unsigned
|   |   |   +--- 
|   |   |   +---int
|   |   |   +---    
|   |   |   +---_RESERVED
|   |   |   +---:
|   |   |   +---24
|   |   |   +---;
|   |   |   +---[ NEWLINE ]
|   |   |   +---    
|   |   |   +---}
|   |   +--- 
|   |   +---_bFlags
|   |   +---;
|   |   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +-*-id (HAS STATE)
|   |   +---                  
|   |   +---_unused
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +---}
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@method classTwoMethodOne
|   |   +---
@abstract Returns the receiver's border type.
|   |   +---
@discussion Returns the receiver's border type. Border types are defined in NSView.h. Currently, the following border types are defined:
|   |   +---[ NEWLINE ]
|   |   +---
* NSNoBorder
|   |   +---[ NEWLINE ]
|   |   +---
* NSLineBorder
|   |   +---[ NEWLINE ]
|   |   +---
* NSBezelBorder
|   |   +---[ NEWLINE ]
|   |   +---
* NSGrooveBorder
|   |   +---[ NEWLINE ]
|   |   +---
By default, an NSBox's border type is NSGrooveBorder.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---NSBorderType
|   |   |   +---)
|   |   +---classTwoMethodOne
|   |   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---     
|   |   +---
@method classTwoMethodTwo
|   |   +---
@abstract Returns a constant representing the title position.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---NSTitlePosition
|   |   |   +---)
|   |   +---classTwoMethodTwo
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---             @method classTwoMethodThree
|   |   +---
@abstract Sets the border type to aType, which must be a valid border type. 
|   |   +---
@discussion Border types are defined in NSView.h. Currently, the following border types are defi
|   |   +---
ned:
|   |   +---[ NEWLINE ]
|   |   +---
* NSNoBorder
|   |   +---
* NSLineBorder
|   |   +---
* NSBezelBorder
|   |   +---
* NSGrooveBorder
|   |   +---[ NEWLINE ]
|   |   +---
By default, an NSBox's border type is NSGrooveBorder.
|   |   +---[ NEWLINE ]
|   |   +---
@param aType The specified type.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---void
|   |   |   +---)
|   |   +---classTwoMethodThree
|   |   +---:
|   |   +---(
|   |   |   +---NSBorderType
|   |   |   +---)
|   |   +---aType
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---     
|   |   +---
@method classTwoMethodFour:bogusOne:bogusTwo
|   |   +---
@abstract Sets the title position and includes two bogus args for
|   |   +---
testing purposes         @param bogusOne Fictive at best.         @param bogusTwo This argument is rarely used.
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---void
|   |   |   +---)
|   |   +---classTwoMethodFour
|   |   +---:
|   |   +---(
|   |   |   +---NSTitlePosition
|   |   |   +---)
|   |   +---aPosition
|   |   +--- 
|   |   +---bogusOne
|   |   +---:
|   |   +---(
|   |   |   +---NSView
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---bogusOne
|   |   +--- 
|   |   +---bogusTwo
|   |   +---:
|   |   +---(
|   |   |   +---NSView
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---bog
|   |   +---[ NEWLINE ]
|   |   +---usTwo
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---@
|   +---@end
+---[ NEWLINE ]
END OF OBJECT


OBJECT: classTwoMethodOne (HeaderDoc::Method)
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---NSBorderType
|   |   +---)
|   +---classTwoMethodOne
|   +---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---     
|   +---
@method classTwoMethodTwo
|   +---
@abstract Returns a constant representing the title position.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---NSTitlePosition
|   |   +---)
|   +---classTwoMethodTwo
|   +---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +---             @method classTwoMethodThree
|   +---
@abstract Sets the border type to aType, which must be a valid border type. 
|   +---
@discussion Border types are defined in NSView.h. Currently, the following border types are defi
|   +---
ned:
|   +---[ NEWLINE ]
|   +---
* NSNoBorder
|   +---
* NSLineBorder
|   +---
* NSBezelBorder
|   +---
* NSGrooveBorder
|   +---[ NEWLINE ]
|   +---
By default, an NSBox's border type is NSGrooveBorder.
|   +---[ NEWLINE ]
|   +---
@param aType The specified type.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---void
|   |   +---)
|   +---classTwoMethodThree
|   +---:
|   +---(
|   |   +---NSBorderType
|   |   +---)
|   +---aType
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---     
|   +---
@method classTwoMethodFour:bogusOne:bogusTwo
|   +---
@abstract Sets the title position and includes two bogus args for
|   +---
testing purposes         @param bogusOne Fictive at best.         @param bogusTwo This argument is rarely used.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---void
|   |   +---)
|   +---classTwoMethodFour
|   +---:
|   +---(
|   |   +---NSTitlePosition
|   |   +---)
|   +---aPosition
|   +--- 
|   +---bogusOne
|   +---:
|   +---(
|   |   +---NSView
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---bogusOne
|   +--- 
|   +---bogusTwo
|   +---:
|   +---(
|   |   +---NSView
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---bog
|   +---[ NEWLINE ]
|   +---usTwo
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@
+---@end
END OF OBJECT


OBJECT: classTwoMethodTwo (HeaderDoc::Method)
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---NSTitlePosition
|   |   +---)
|   +---classTwoMethodTwo
|   +---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---/*
|   +---!
|   +---             @method classTwoMethodThree
|   +---
@abstract Sets the border type to aType, which must be a valid border type. 
|   +---
@discussion Border types are defined in NSView.h. Currently, the following border types are defi
|   +---
ned:
|   +---[ NEWLINE ]
|   +---
* NSNoBorder
|   +---
* NSLineBorder
|   +---
* NSBezelBorder
|   +---
* NSGrooveBorder
|   +---[ NEWLINE ]
|   +---
By default, an NSBox's border type is NSGrooveBorder.
|   +---[ NEWLINE ]
|   +---
@param aType The specified type.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---void
|   |   +---)
|   +---classTwoMethodThree
|   +---:
|   +---(
|   |   +---NSBorderType
|   |   +---)
|   +---aType
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---     
|   +---
@method classTwoMethodFour:bogusOne:bogusTwo
|   +---
@abstract Sets the title position and includes two bogus args for
|   +---
testing purposes         @param bogusOne Fictive at best.         @param bogusTwo This argument is rarely used.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---void
|   |   +---)
|   +---classTwoMethodFour
|   +---:
|   +---(
|   |   +---NSTitlePosition
|   |   +---)
|   +---aPosition
|   +--- 
|   +---bogusOne
|   +---:
|   +---(
|   |   +---NSView
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---bogusOne
|   +--- 
|   +---bogusTwo
|   +---:
|   +---(
|   |   +---NSView
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---bog
|   +---[ NEWLINE ]
|   +---usTwo
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@
+---@end
END OF OBJECT


OBJECT: classTwoMethodThree: (HeaderDoc::Method)
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---void
|   |   +---)
|   +---classTwoMethodThree
|   +---:
|   +---(
|   |   +---NSBorderType
|   |   +---)
|   +---aType
|   +---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---     
|   +---
@method classTwoMethodFour:bogusOne:bogusTwo
|   +---
@abstract Sets the title position and includes two bogus args for
|   +---
testing purposes         @param bogusOne Fictive at best.         @param bogusTwo This argument is rarely used.
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---void
|   |   +---)
|   +---classTwoMethodFour
|   +---:
|   +---(
|   |   +---NSTitlePosition
|   |   +---)
|   +---aPosition
|   +--- 
|   +---bogusOne
|   +---:
|   +---(
|   |   +---NSView
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---bogusOne
|   +--- 
|   +---bogusTwo
|   +---:
|   +---(
|   |   +---NSView
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---bog
|   +---[ NEWLINE ]
|   +---usTwo
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@
+---@end
END OF OBJECT


OBJECT: classTwoMethodFour:bogusOne:bogusTwo: (HeaderDoc::Method)
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---void
|   |   +---)
|   +---classTwoMethodFour
|   +---:
|   +---(
|   |   +---NSTitlePosition
|   |   +---)
|   +---aPosition
|   +--- 
|   +---bogusOne
|   +---:
|   +---(
|   |   +---NSView
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---bogusOne
|   +--- 
|   +---bogusTwo
|   +---:
|   +---(
|   |   +---NSView
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---bog
|   +---[ NEWLINE ]
|   +---usTwo
|   +---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@
+---@end
END OF OBJECT


OBJECT: __bFlags (HeaderDoc::Struct)
+-*-struct (HAS STATE)
+--- 
+---__bFlags
+--- 
+---{
|   +---[ NEWLINE ]
|   +---                
|   +---NSBorderType
|   +---    
|   +---borderType
|   +---:
|   +---2
|   +---;
|   +---[ NEWLINE ]
|   +---                
|   +---NSTitlePosition
|   +--- 
|   +---titlePosition
|   +---:
|   +---3
|   +---;
|   +---[ NEWLINE ]
|   +---                
|   +---unsigned
|   +--- 
|   +---int
|   +---    
|   +---transparent
|   +---:
|   +---1
|   +---;
|   +---[ NEWLINE ]
|   +---        
|   +---unsigned
|   +--- 
|   +---int
|   +---    
|   +---boxType
|   +---:
|   +---2
|   +---;
|   +---[ NEWLINE ]
|   +---        
|   +---unsigned
|   +--- 
|   +---int
|   +---    
|   +---_RESERVED
|   +---:
|   +---24
|   +---;
|   +---[ NEWLINE ]
|   +---    
|   +---}
+--- 
+---_bFlags
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---    
+-*-id (HAS STATE)
+---                  
+---_unused
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: __bFlags (HeaderDoc::Struct)
+-*-struct (HAS STATE)
+--- 
+---__bFlags
+--- 
+---{
|   +---[ NEWLINE ]
|   +---                
|   +---NSBorderType
|   +---    
|   +---borderType
|   +---:
|   +---2
|   +---;
|   +---[ NEWLINE ]
|   +---                
|   +---NSTitlePosition
|   +--- 
|   +---titlePosition
|   +---:
|   +---3
|   +---;
|   +---[ NEWLINE ]
|   +---                
|   +---unsigned
|   +--- 
|   +---int
|   +---    
|   +---transparent
|   +---:
|   +---1
|   +---;
|   +---[ NEWLINE ]
|   +---        
|   +---unsigned
|   +--- 
|   +---int
|   +---    
|   +---boxType
|   +---:
|   +---2
|   +---;
|   +---[ NEWLINE ]
|   +---        
|   +---unsigned
|   +--- 
|   +---int
|   +---    
|   +---_RESERVED
|   +---:
|   +---24
|   +---;
|   +---[ NEWLINE ]
|   +---    
|   +---}
+--- 
+---_bFlags
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---    
+-*-id (HAS STATE)
+---                  
+---_unused
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: _unused (HeaderDoc::Var)
+-*-id (HAS STATE)
+---                  
+---_unused
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---}
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: ObjCClassDeux (HeaderDoc::ObjCClass)
	@<!-- a logicalPath="//test_ref/occ/cl/interface //test_ref/occ/tdef/interface //test_ref/occ/tag/interface //test_ref/occ/struct/interface //test_ref/occ/intf/interface //test_ref/doc/anysymbol/interface" machineGenerated="true" --><span class="type">interface</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/ObjCClassDeux //test_ref/occ/tdef/ObjCClassDeux //test_ref/occ/tag/ObjCClassDeux //test_ref/occ/struct/ObjCClassDeux //test_ref/occ/intf/ObjCClassDeux //test_ref/doc/anysymbol/ObjCClassDeux" machineGenerated="true" --><span class="type">ObjCClassDeux</span><!-- /a --> : <!-- a logicalPath="//test_ref/occ/cl/ObjCClassUn //test_ref/occ/tdef/ObjCClassUn //test_ref/occ/tag/ObjCClassUn //test_ref/occ/struct/ObjCClassUn //test_ref/occ/intf/ObjCClassUn //test_ref/doc/anysymbol/ObjCClassUn" machineGenerated="true" --><span class="type">ObjCClassUn</span><!-- /a --> { 
	        <span class="comment">/*All instance variables are private*/</span>
	        <span class="keyword">struct</span> <!-- a logicalPath="//test_ref/occ/cl/__bFlags //test_ref/occ/tdef/__bFlags //test_ref/occ/tag/__bFlags //test_ref/occ/struct/__bFlags //test_ref/occ/intf/__bFlags //test_ref/doc/anysymbol/__bFlags" machineGenerated="true" --><span class="type">__bFlags</span><!-- /a --> { 
	            <!-- a logicalPath="//test_ref/occ/cl/NSBorderType //test_ref/occ/tdef/NSBorderType //test_ref/occ/tag/NSBorderType //test_ref/occ/struct/NSBorderType //test_ref/occ/intf/NSBorderType //test_ref/doc/anysymbol/NSBorderType" machineGenerated="true" --><span class="type">NSBorderType</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/borderType //test_ref/occ/tdef/borderType //test_ref/occ/tag/borderType //test_ref/occ/struct/borderType //test_ref/occ/intf/borderType //test_ref/doc/anysymbol/borderType" machineGenerated="true" --><span class="type">borderType</span><!-- /a -->:<span class="number">2</span>; 
	            <!-- a logicalPath="//test_ref/occ/cl/NSTitlePosition //test_ref/occ/tdef/NSTitlePosition //test_ref/occ/tag/NSTitlePosition //test_ref/occ/struct/NSTitlePosition //test_ref/occ/intf/NSTitlePosition //test_ref/doc/anysymbol/NSTitlePosition" machineGenerated="true" --><span class="type">NSTitlePosition</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/titlePosition //test_ref/occ/tdef/titlePosition //test_ref/occ/tag/titlePosition //test_ref/occ/struct/titlePosition //test_ref/occ/intf/titlePosition //test_ref/doc/anysymbol/titlePosition" machineGenerated="true" --><span class="type">titlePosition</span><!-- /a -->:<span class="number">3</span>; 
	            <span class="keyword">unsigned</span> <!-- a logicalPath="//test_ref/occ/cl/int //test_ref/occ/tdef/int //test_ref/occ/tag/int //test_ref/occ/struct/int //test_ref/occ/intf/int //test_ref/doc/anysymbol/int" machineGenerated="true" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/transparent //test_ref/occ/tdef/transparent //test_ref/occ/tag/transparent //test_ref/occ/struct/transparent //test_ref/occ/intf/transparent //test_ref/doc/anysymbol/transparent" machineGenerated="true" --><span class="type">transparent</span><!-- /a -->:<span class="number">1</span>; 
	            <span class="keyword">unsigned</span> <!-- a logicalPath="//test_ref/occ/cl/int //test_ref/occ/tdef/int //test_ref/occ/tag/int //test_ref/occ/struct/int //test_ref/occ/intf/int //test_ref/doc/anysymbol/int" machineGenerated="true" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/boxType //test_ref/occ/tdef/boxType //test_ref/occ/tag/boxType //test_ref/occ/struct/boxType //test_ref/occ/intf/boxType //test_ref/doc/anysymbol/boxType" machineGenerated="true" --><span class="type">boxType</span><!-- /a -->:<span class="number">2</span>; 
	            <span class="keyword">unsigned</span> <!-- a logicalPath="//test_ref/occ/cl/int //test_ref/occ/tdef/int //test_ref/occ/tag/int //test_ref/occ/struct/int //test_ref/occ/intf/int //test_ref/doc/anysymbol/int" machineGenerated="true" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/_RESERVED //test_ref/occ/tdef/_RESERVED //test_ref/occ/tag/_RESERVED //test_ref/occ/struct/_RESERVED //test_ref/occ/intf/_RESERVED //test_ref/doc/anysymbol/_RESERVED" machineGenerated="true" --><span class="type">_RESERVED</span><!-- /a -->:<span class="number">24</span>; 
	                } <!-- a logicalPath="//test_ref/occ/econst/_bFlags //test_ref/occ/data/_bFlags //test_ref/occ/clconst/_bFlags " machineGenerated="true" --><span class="var">_bFlags</span><!-- /a -->; 
	        <!-- a logicalPath="//test_ref/occ/cl/id //test_ref/occ/tdef/id //test_ref/occ/tag/id //test_ref/occ/struct/id //test_ref/occ/intf/id //test_ref/doc/anysymbol/id" machineGenerated="true" --><span class="type">id</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/econst/_unused //test_ref/occ/data/_unused //test_ref/occ/clconst/_unused " machineGenerated="true" --><span class="var">_unused</span><!-- /a -->; 
	        }  <span class="comment">/*!
	@method classTwoMethodOne
	@abstract Returns the receiver's border type.
	@discussion Returns the receiver's border type. Border types are defined in NSView.h. Currently, the following border types are defined:
	
	* NSNoBorder
	
	* NSLineBorder
	
	* NSBezelBorder
	
	* NSGrooveBorder
	
	By default, an NSBox's border type is NSGrooveBorder.</span>
	        <span class="comment">*/</span>
	    - (
	            <span class="param">NSBorderType</span>)<!-- a logicalPath="//test_ref/occ/econst/classTwoMethodOne //test_ref/occ/data/classTwoMethodOne //test_ref/occ/clconst/classTwoMethodOne " machineGenerated="true" --><span class="var">classTwoMethodOne</span><!-- /a -->;   <span class="comment">/*! 
	@method classTwoMethodTwo
	@abstract Returns a constant representing the title position.</span>
	        <span class="comment">*/</span>
	    - (
	            <span class="param">NSTitlePosition</span>)<!-- a logicalPath="//test_ref/occ/econst/classTwoMethodTwo //test_ref/occ/data/classTwoMethodTwo //test_ref/occ/clconst/classTwoMethodTwo " machineGenerated="true" --><span class="var">classTwoMethodTwo</span><!-- /a -->;  <span class="comment">/*!             @method classTwoMethodThree
	@abstract Sets the border type to aType, which must be a valid border type. 
	@discussion Border types are defined in NSView.h. Currently, the following border types are defi
	ned:
	
	* NSNoBorder
	* NSLineBorder
	* NSBezelBorder
	* NSGrooveBorder
	
	By default, an NSBox's border type is NSGrooveBorder.
	
	@param aType The specified type.</span>
	        <span class="comment">*/</span>
	    - (
	            <span class="param">void</span>)<!-- a logicalPath="//test_ref/occ/cl/classTwoMethodThree //test_ref/occ/tdef/classTwoMethodThree //test_ref/occ/tag/classTwoMethodThree //test_ref/occ/struct/classTwoMethodThree //test_ref/occ/intf/classTwoMethodThree //test_ref/doc/anysymbol/classTwoMethodThree" machineGenerated="true" --><span class="type">classTwoMethodThree</span><!-- /a -->:(
	            <span class="param">NSBorderType</span>)<!-- a logicalPath="//test_ref/occ/econst/aType //test_ref/occ/data/aType //test_ref/occ/clconst/aType " machineGenerated="true" --><span class="var">aType</span><!-- /a -->;   <span class="comment">/*! 
	@method classTwoMethodFour:bogusOne:bogusTwo
	@abstract Sets the title position and includes two bogus args for
	testing purposes         @param bogusOne Fictive at best.         @param bogusTwo This argument is rarely used.</span>
	        <span class="comment">*/</span>
	    - (
	            <span class="param">void</span>)<!-- a logicalPath="//test_ref/occ/cl/classTwoMethodFour //test_ref/occ/tdef/classTwoMethodFour //test_ref/occ/tag/classTwoMethodFour //test_ref/occ/struct/classTwoMethodFour //test_ref/occ/intf/classTwoMethodFour //test_ref/doc/anysymbol/classTwoMethodFour" machineGenerated="true" --><span class="type">classTwoMethodFour</span><!-- /a -->:(
	            <span class="param">NSTitlePosition</span>)<!-- a logicalPath="//test_ref/occ/cl/aPosition //test_ref/occ/tdef/aPosition //test_ref/occ/tag/aPosition //test_ref/occ/struct/aPosition //test_ref/occ/intf/aPosition //test_ref/doc/anysymbol/aPosition" machineGenerated="true" --><span class="type">aPosition</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/bogusOne //test_ref/occ/tdef/bogusOne //test_ref/occ/tag/bogusOne //test_ref/occ/struct/bogusOne //test_ref/occ/intf/bogusOne //test_ref/doc/anysymbol/bogusOne" machineGenerated="true" --><span class="type">bogusOne</span><!-- /a -->:(
	            <!-- a logicalPath="//test_ref/occ/cl/NSView //test_ref/occ/tdef/NSView //test_ref/occ/tag/NSView //test_ref/occ/struct/NSView //test_ref/occ/intf/NSView //test_ref/doc/anysymbol/NSView" machineGenerated="true" --><span class="type">NSView</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/cl/bogusOne //test_ref/occ/tdef/bogusOne //test_ref/occ/tag/bogusOne //test_ref/occ/struct/bogusOne //test_ref/occ/intf/bogusOne //test_ref/doc/anysymbol/bogusOne" machineGenerated="true" --><span class="type">bogusOne</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/bogusTwo //test_ref/occ/tdef/bogusTwo //test_ref/occ/tag/bogusTwo //test_ref/occ/struct/bogusTwo //test_ref/occ/intf/bogusTwo //test_ref/doc/anysymbol/bogusTwo" machineGenerated="true" --><span class="type">bogusTwo</span><!-- /a -->:(
	            <!-- a logicalPath="//test_ref/occ/cl/NSView //test_ref/occ/tdef/NSView //test_ref/occ/tag/NSView //test_ref/occ/struct/NSView //test_ref/occ/intf/NSView //test_ref/doc/anysymbol/NSView" machineGenerated="true" --><span class="type">NSView</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/cl/bog //test_ref/occ/tdef/bog //test_ref/occ/tag/bog //test_ref/occ/struct/bog //test_ref/occ/intf/bog //test_ref/doc/anysymbol/bog" machineGenerated="true" --><span class="type">bog</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/econst/usTwo //test_ref/occ/data/usTwo //test_ref/occ/clconst/usTwo " machineGenerated="true" --><span class="var">usTwo</span><!-- /a -->;   @@end 
END OF OBJECT


OBJECT: classTwoMethodOne (HeaderDoc::Method)
	- (<!-- a logicalPath="//test_ref/occ/cl/NSBorderType //test_ref/occ/tdef/NSBorderType //test_ref/occ/tag/NSBorderType //test_ref/occ/struct/NSBorderType //test_ref/occ/intf/NSBorderType //test_ref/doc/anysymbol/NSBorderType" machineGenerated="true" --><span class="type">NSBorderType</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/econst/classTwoMethodOne //test_ref/occ/data/ObjCClassDeux/classTwoMethodOne //test_ref/occ/data/classTwoMethodOne //test_ref/occ/clconst/ObjCClassDeux/classTwoMethodOne " machineGenerated="true" --><span class="var">classTwoMethodOne</span><!-- /a -->; 
END OF OBJECT


OBJECT: classTwoMethodTwo (HeaderDoc::Method)
	- (<!-- a logicalPath="//test_ref/occ/cl/NSTitlePosition //test_ref/occ/tdef/NSTitlePosition //test_ref/occ/tag/NSTitlePosition //test_ref/occ/struct/NSTitlePosition //test_ref/occ/intf/NSTitlePosition //test_ref/doc/anysymbol/NSTitlePosition" machineGenerated="true" --><span class="type">NSTitlePosition</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/econst/classTwoMethodTwo //test_ref/occ/data/ObjCClassDeux/classTwoMethodTwo //test_ref/occ/data/classTwoMethodTwo //test_ref/occ/clconst/ObjCClassDeux/classTwoMethodTwo " machineGenerated="true" --><span class="var">classTwoMethodTwo</span><!-- /a -->; 
END OF OBJECT


OBJECT: classTwoMethodThree: (HeaderDoc::Method)
	- (<!-- a logicalPath="//test_ref/occ/cl/void //test_ref/occ/tdef/void //test_ref/occ/tag/void //test_ref/occ/struct/void //test_ref/occ/intf/void //test_ref/doc/anysymbol/void" machineGenerated="true" --><span class="type">void</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/instm/ObjCClassDeux/classTwoMethodThree //test_ref/occ/clm/ObjCClassDeux/classTwoMethodThree //test_ref/occ/intfcm/ObjCClassDeux/classTwoMethodThree //test_ref/occ/intfm/ObjCClassDeux/classTwoMethodThree //test_ref/occ/func/classTwoMethodThree //test_ref/occ/ftmplt/ObjCClassDeux/classTwoMethodThree //test_ref/occ/defn/classTwoMethodThree //test_ref/occ/macro/classTwoMethodThree //test_ref/doc/anysymbol/classTwoMethodThree" machineGenerated="true" --><span class="function">classTwoMethodThree</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/NSBorderType //test_ref/occ/tdef/NSBorderType //test_ref/occ/tag/NSBorderType //test_ref/occ/struct/NSBorderType //test_ref/occ/intf/NSBorderType //test_ref/doc/anysymbol/NSBorderType" machineGenerated="true" --><span class="type">NSBorderType</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/econst/aType //test_ref/occ/data/ObjCClassDeux/aType //test_ref/occ/data/aType //test_ref/occ/clconst/ObjCClassDeux/aType " machineGenerated="true" --><span class="var">aType</span><!-- /a -->; 
END OF OBJECT


OBJECT: classTwoMethodFour:bogusOne:bogusTwo: (HeaderDoc::Method)
	- (<!-- a logicalPath="//test_ref/occ/cl/void //test_ref/occ/tdef/void //test_ref/occ/tag/void //test_ref/occ/struct/void //test_ref/occ/intf/void //test_ref/doc/anysymbol/void" machineGenerated="true" --><span class="type">void</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/instm/ObjCClassDeux/classTwoMethodFour //test_ref/occ/clm/ObjCClassDeux/classTwoMethodFour //test_ref/occ/intfcm/ObjCClassDeux/classTwoMethodFour //test_ref/occ/intfm/ObjCClassDeux/classTwoMethodFour //test_ref/occ/func/classTwoMethodFour //test_ref/occ/ftmplt/ObjCClassDeux/classTwoMethodFour //test_ref/occ/defn/classTwoMethodFour //test_ref/occ/macro/classTwoMethodFour //test_ref/doc/anysymbol/classTwoMethodFour" machineGenerated="true" --><span class="function">classTwoMethodFour</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/NSTitlePosition //test_ref/occ/tdef/NSTitlePosition //test_ref/occ/tag/NSTitlePosition //test_ref/occ/struct/NSTitlePosition //test_ref/occ/intf/NSTitlePosition //test_ref/doc/anysymbol/NSTitlePosition" machineGenerated="true" --><span class="type">NSTitlePosition</span><!-- /a -->)<span class="param">aPosition</span> 
	        <!-- a logicalPath="//test_ref/occ/instm/ObjCClassDeux/bogusOne //test_ref/occ/clm/ObjCClassDeux/bogusOne //test_ref/occ/intfcm/ObjCClassDeux/bogusOne //test_ref/occ/intfm/ObjCClassDeux/bogusOne //test_ref/occ/func/bogusOne //test_ref/occ/ftmplt/ObjCClassDeux/bogusOne //test_ref/occ/defn/bogusOne //test_ref/occ/macro/bogusOne //test_ref/doc/anysymbol/bogusOne" machineGenerated="true" --><span class="function">bogusOne</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/NSView //test_ref/occ/tdef/NSView //test_ref/occ/tag/NSView //test_ref/occ/struct/NSView //test_ref/occ/intf/NSView //test_ref/doc/anysymbol/NSView" machineGenerated="true" --><span class="type">NSView</span><!-- /a --> <span class="type">*</span>)<span class="param">bogusOne</span> <!-- a logicalPath="//test_ref/occ/instm/ObjCClassDeux/bogusTwo //test_ref/occ/clm/ObjCClassDeux/bogusTwo //test_ref/occ/intfcm/ObjCClassDeux/bogusTwo //test_ref/occ/intfm/ObjCClassDeux/bogusTwo //test_ref/occ/func/bogusTwo //test_ref/occ/ftmplt/ObjCClassDeux/bogusTwo //test_ref/occ/defn/bogusTwo //test_ref/occ/macro/bogusTwo //test_ref/doc/anysymbol/bogusTwo" machineGenerated="true" --><span class="function">bogusTwo</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/NSView //test_ref/occ/tdef/NSView //test_ref/occ/tag/NSView //test_ref/occ/struct/NSView //test_ref/occ/intf/NSView //test_ref/doc/anysymbol/NSView" machineGenerated="true" --><span class="type">NSView</span><!-- /a --> <span class="type">*</span>)<span class="param">bog</span> <!-- a logicalPath="//test_ref/occ/econst/usTwo //test_ref/occ/data/ObjCClassDeux/usTwo //test_ref/occ/data/usTwo //test_ref/occ/clconst/ObjCClassDeux/usTwo " machineGenerated="true" --><span class="var">usTwo</span><!-- /a -->; 
END OF OBJECT


OBJECT: __bFlags (HeaderDoc::Struct)
	<span class="keyword">struct</span> <!-- a logicalPath="//test_ref/occ/cl/__bFlags //test_ref/occ/tdef/__bFlags //test_ref/occ/tag/__bFlags //test_ref/occ/struct/__bFlags //test_ref/occ/intf/__bFlags //test_ref/doc/anysymbol/__bFlags" machineGenerated="true" --><span class="type">__bFlags</span><!-- /a --> { 
	    <!-- a logicalPath="//test_ref/occ/cl/NSBorderType //test_ref/occ/tdef/NSBorderType //test_ref/occ/tag/NSBorderType //test_ref/occ/struct/NSBorderType //test_ref/occ/intf/NSBorderType //test_ref/doc/anysymbol/NSBorderType" machineGenerated="true" --><span class="type">NSBorderType</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/borderType //test_ref/occ/tdef/borderType //test_ref/occ/tag/borderType //test_ref/occ/struct/borderType //test_ref/occ/intf/borderType //test_ref/doc/anysymbol/borderType" machineGenerated="true" --><span class="type">borderType</span><!-- /a -->:<span class="number">2</span>; 
	    <!-- a logicalPath="//test_ref/occ/cl/NSTitlePosition //test_ref/occ/tdef/NSTitlePosition //test_ref/occ/tag/NSTitlePosition //test_ref/occ/struct/NSTitlePosition //test_ref/occ/intf/NSTitlePosition //test_ref/doc/anysymbol/NSTitlePosition" machineGenerated="true" --><span class="type">NSTitlePosition</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/titlePosition //test_ref/occ/tdef/titlePosition //test_ref/occ/tag/titlePosition //test_ref/occ/struct/titlePosition //test_ref/occ/intf/titlePosition //test_ref/doc/anysymbol/titlePosition" machineGenerated="true" --><span class="type">titlePosition</span><!-- /a -->:<span class="number">3</span>; 
	    <span class="keyword">unsigned</span> <!-- a logicalPath="//test_ref/occ/cl/int //test_ref/occ/tdef/int //test_ref/occ/tag/int //test_ref/occ/struct/int //test_ref/occ/intf/int //test_ref/doc/anysymbol/int" machineGenerated="true" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/transparent //test_ref/occ/tdef/transparent //test_ref/occ/tag/transparent //test_ref/occ/struct/transparent //test_ref/occ/intf/transparent //test_ref/doc/anysymbol/transparent" machineGenerated="true" --><span class="type">transparent</span><!-- /a -->:<span class="number">1</span>; 
	    <span class="keyword">unsigned</span> <!-- a logicalPath="//test_ref/occ/cl/int //test_ref/occ/tdef/int //test_ref/occ/tag/int //test_ref/occ/struct/int //test_ref/occ/intf/int //test_ref/doc/anysymbol/int" machineGenerated="true" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/boxType //test_ref/occ/tdef/boxType //test_ref/occ/tag/boxType //test_ref/occ/struct/boxType //test_ref/occ/intf/boxType //test_ref/doc/anysymbol/boxType" machineGenerated="true" --><span class="type">boxType</span><!-- /a -->:<span class="number">2</span>; 
	    <span class="keyword">unsigned</span> <!-- a logicalPath="//test_ref/occ/cl/int //test_ref/occ/tdef/int //test_ref/occ/tag/int //test_ref/occ/struct/int //test_ref/occ/intf/int //test_ref/doc/anysymbol/int" machineGenerated="true" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/_RESERVED //test_ref/occ/tdef/_RESERVED //test_ref/occ/tag/_RESERVED //test_ref/occ/struct/_RESERVED //test_ref/occ/intf/_RESERVED //test_ref/doc/anysymbol/_RESERVED" machineGenerated="true" --><span class="type">_RESERVED</span><!-- /a -->:<span class="number">24</span>; 
	} <!-- a logicalPath="//test_ref/occ/econst/_bFlags //test_ref/occ/data/ObjCClassDeux/_bFlags //test_ref/occ/data/_bFlags //test_ref/occ/clconst/ObjCClassDeux/_bFlags " machineGenerated="true" --><span class="var">_bFlags</span><!-- /a -->; 
END OF OBJECT


OBJECT: __bFlags (HeaderDoc::Struct)
	<span class="keyword">struct</span> <!-- a logicalPath="//test_ref/occ/cl/__bFlags //test_ref/occ/tdef/__bFlags //test_ref/occ/tag/__bFlags //test_ref/occ/struct/__bFlags //test_ref/occ/intf/__bFlags //test_ref/doc/anysymbol/__bFlags" machineGenerated="true" --><span class="type">__bFlags</span><!-- /a --> { 
	    <!-- a logicalPath="//test_ref/occ/cl/NSBorderType //test_ref/occ/tdef/NSBorderType //test_ref/occ/tag/NSBorderType //test_ref/occ/struct/NSBorderType //test_ref/occ/intf/NSBorderType //test_ref/doc/anysymbol/NSBorderType" machineGenerated="true" --><span class="type">NSBorderType</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/borderType //test_ref/occ/tdef/borderType //test_ref/occ/tag/borderType //test_ref/occ/struct/borderType //test_ref/occ/intf/borderType //test_ref/doc/anysymbol/borderType" machineGenerated="true" --><span class="type">borderType</span><!-- /a -->:<span class="number">2</span>; 
	    <!-- a logicalPath="//test_ref/occ/cl/NSTitlePosition //test_ref/occ/tdef/NSTitlePosition //test_ref/occ/tag/NSTitlePosition //test_ref/occ/struct/NSTitlePosition //test_ref/occ/intf/NSTitlePosition //test_ref/doc/anysymbol/NSTitlePosition" machineGenerated="true" --><span class="type">NSTitlePosition</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/titlePosition //test_ref/occ/tdef/titlePosition //test_ref/occ/tag/titlePosition //test_ref/occ/struct/titlePosition //test_ref/occ/intf/titlePosition //test_ref/doc/anysymbol/titlePosition" machineGenerated="true" --><span class="type">titlePosition</span><!-- /a -->:<span class="number">3</span>; 
	    <span class="keyword">unsigned</span> <!-- a logicalPath="//test_ref/occ/cl/int //test_ref/occ/tdef/int //test_ref/occ/tag/int //test_ref/occ/struct/int //test_ref/occ/intf/int //test_ref/doc/anysymbol/int" machineGenerated="true" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/transparent //test_ref/occ/tdef/transparent //test_ref/occ/tag/transparent //test_ref/occ/struct/transparent //test_ref/occ/intf/transparent //test_ref/doc/anysymbol/transparent" machineGenerated="true" --><span class="type">transparent</span><!-- /a -->:<span class="number">1</span>; 
	    <span class="keyword">unsigned</span> <!-- a logicalPath="//test_ref/occ/cl/int //test_ref/occ/tdef/int //test_ref/occ/tag/int //test_ref/occ/struct/int //test_ref/occ/intf/int //test_ref/doc/anysymbol/int" machineGenerated="true" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/boxType //test_ref/occ/tdef/boxType //test_ref/occ/tag/boxType //test_ref/occ/struct/boxType //test_ref/occ/intf/boxType //test_ref/doc/anysymbol/boxType" machineGenerated="true" --><span class="type">boxType</span><!-- /a -->:<span class="number">2</span>; 
	    <span class="keyword">unsigned</span> <!-- a logicalPath="//test_ref/occ/cl/int //test_ref/occ/tdef/int //test_ref/occ/tag/int //test_ref/occ/struct/int //test_ref/occ/intf/int //test_ref/doc/anysymbol/int" machineGenerated="true" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/_RESERVED //test_ref/occ/tdef/_RESERVED //test_ref/occ/tag/_RESERVED //test_ref/occ/struct/_RESERVED //test_ref/occ/intf/_RESERVED //test_ref/doc/anysymbol/_RESERVED" machineGenerated="true" --><span class="type">_RESERVED</span><!-- /a -->:<span class="number">24</span>; 
	} <!-- a logicalPath="//test_ref/occ/econst/_bFlags //test_ref/occ/data/ObjCClassDeux/_bFlags //test_ref/occ/data/_bFlags //test_ref/occ/clconst/ObjCClassDeux/_bFlags " machineGenerated="true" --><span class="var">_bFlags</span><!-- /a -->; 
END OF OBJECT


OBJECT: _unused (HeaderDoc::Var)
	<!-- a logicalPath="//test_ref/occ/cl/id //test_ref/occ/tdef/id //test_ref/occ/tag/id //test_ref/occ/struct/id //test_ref/occ/intf/id //test_ref/doc/anysymbol/id" machineGenerated="true" --><span class="type">id</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/econst/_unused //test_ref/occ/data/ObjCClassDeux/_unused //test_ref/occ/data/_unused //test_ref/occ/clconst/ObjCClassDeux/_unused " machineGenerated="true" --><span class="var">_unused</span><!-- /a -->; 
END OF OBJECT



_$94|/Users/dg/headerdoc-techpubs/Modules/HeaderDoc//../../testsuite/parser_tests/ObjC_class_7.test$1|C$12|ObjC class 7$1|C$6|parser