FrT;@1|>>0|$15|HeaderDoc::Test%22|$4|CODE$7|COMMENT$7|CPPCODE$15|EXPECTED_RESULT$23|EXPECTED_RESULT_ALLDECS$7|FAILMSG$8|FILENAME$4|LANG$4|NAME$7|SUBLANG$4|TYPE$599|@protocol Test_Of_optional_and_required

/*!
	@methodgroup group_1
 */

@optional
/*!
    @method		foo:withBar:
 */
- (Test_Of_optional_and_required *)foo:(NSString *)aArg1 withBar:(id)aBar;

/*!
    @method		bar:withFoo:
 */
- (Test_Of_optional_and_required *)bar:(NSString *)aArg1 withFoo:(id)aBar;

@required
/*!
    @method		foo:withBaz:
 */
- (Test_Of_optional_and_required *)foo:(NSString *)aArg1 withBaz:(id)aBaz;

/*!
    @method		baz:withFoo:
 */
- (Test_Of_optional_and_required *)baz:(NSString *)aArg1 withFoo:(id)aFpp;

@optional
- (Test_Of_optional_and_required *)returnDefaults;

@end
$186|/*! @protocol Test_Of_optional_and_required
    @discussion This itests the \@optional and \@required
                ObjC keywords.
    @discussion tests \@optional and \@required.
 */
$0|$64135|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 1
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 0
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/ObjC_protocol_6.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/ObjC_protocol_6.test
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => 0
$parserState->{categoryClass} => 
$parserState->{classIsObjC} => 1
$parserState->{classtype} => @protocol
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 0
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inProtocol} => -1
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 22
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => end
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 1
$parserState->{onlyComments} => 0
$parserState->{parsedParamAtBrace} => ARRAY(OBJID)
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 0
$parserState->{parsedParamStateAtBrace} => ARRAY(OBJID)
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 1
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => protocol
$parserState->{prekeywordsodname} => 
$parserState->{prekeywordsodtype} => 
$parserState->{returntype} => @protocol Test_Of_optional_and_required 
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => end
$parserState->{sodtype} =>  Test_Of_optional_and_required
$parserState->{sodtypeclasstoken} => protocol
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 2
$parserState->{storeDec} => 
$parserState->{sublang} => C
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 22
typelist: @protocol
namelist: Test_Of_optional_and_required
posstypes: 
value: 
returntype: Test_Of_optional_and_required
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 10
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---@
+---protocol
|   +--- 
|   +---Test_Of_optional_and_required
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@methodgroup group_1
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---@optional
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@method                foo:withBar:
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---Test_Of_optional_and_required
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---foo
|   |   +---:
|   |   +---(
|   |   |   +---NSString
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---aArg1
|   |   +--- 
|   |   +---withBar
|   |   +---:
|   |   +---(
|   |   |   +---id
|   |   |   +---)
|   |   +---aBar
|   |   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@method                bar:withFoo:
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---Test_Of_optional_and_required
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---bar
|   |   +---:
|   |   +---(
|   |   |   +---NSString
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---aArg1
|   |   +--- 
|   |   +---withFoo
|   |   +---:
|   |   +---(
|   |   |   +---id
|   |   |   +---)
|   |   +---aBar
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---@required
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@method                foo:withBaz:
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---Test_Of_optional_and_required
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---foo
|   |   +---:
|   |   +---(
|   |   |   +---NSString
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---aArg1
|   |   +--- 
|   |   +---withBaz
|   |   +---:
|   |   +---(
|   |   |   +---id
|   |   |   +---)
|   |   +---aBaz
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@method                baz:withFoo:
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---Test_Of_optional_and_required
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---baz
|   |   +---:
|   |   +---(
|   |   |   +---NSString
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---aArg1
|   |   +--- 
|   |   +---withFoo
|   |   +---:
|   |   +---(
|   |   |   +---id
|   |   |   +---)
|   |   +---aFpp
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---@optional
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---Test_Of_optional_and_required
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---returnDefaults
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---@
|   +---@end
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: ObjC protocol 6
APIUID: //test_ref/doc/header/ObjC_protocol_6.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: 
LONG ATTRIBUTES: 
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::ObjCProtocol
    NAME: Test_Of_optional_and_required
    APIUID: //test_ref/occ/intf/Test_Of_optional_and_required
    ABSTRACT: ""
    DISCUSSION: "<p>tests @optional and @required.
"
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::ObjCProtocol"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "0"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Declared In</b></p><p><a href="../../index.html" logicalPath="//test_ref/doc/header/ObjC_protocol_6.test" target="_top" machineGenerated="true">ObjC protocol 6</a></p>

    LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Method
        NAME: foo:withBar:
        APIUID: //test_ref/occ/intfm/Test_Of_optional_and_required/foo:withBar:
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: "group_1"
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "Test_Of_optional_and_required *"
        LINENUM: ""
        CLASS: "HeaderDoc::Method"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aArg1
            TYPE: (NSString *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aBar
            TYPE: (id)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aArg1
            TYPE: (NSString *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aBar
            TYPE: (id)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aArg1
            TYPE: (NSString *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aBaz
            TYPE: (id)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aArg1
            TYPE: (NSString *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aFpp
            TYPE: (id)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Method
        NAME: bar:withFoo:
        APIUID: //test_ref/occ/intfm/Test_Of_optional_and_required/bar:withFoo:
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: "group_1"
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "Test_Of_optional_and_required *"
        LINENUM: ""
        CLASS: "HeaderDoc::Method"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aArg1
            TYPE: (NSString *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aBar
            TYPE: (id)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aArg1
            TYPE: (NSString *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aBaz
            TYPE: (id)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aArg1
            TYPE: (NSString *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aFpp
            TYPE: (id)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Method
        NAME: foo:withBaz:
        APIUID: //test_ref/occ/intfm/Test_Of_optional_and_required/foo:withBaz:
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: "group_1"
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "Test_Of_optional_and_required *"
        LINENUM: ""
        CLASS: "HeaderDoc::Method"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aArg1
            TYPE: (NSString *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aBaz
            TYPE: (id)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aArg1
            TYPE: (NSString *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aFpp
            TYPE: (id)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Method
        NAME: baz:withFoo:
        APIUID: //test_ref/occ/intfm/Test_Of_optional_and_required/baz:withFoo:
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: "group_1"
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "Test_Of_optional_and_required *"
        LINENUM: ""
        CLASS: "HeaderDoc::Method"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aArg1
            TYPE: (NSString *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aFpp
            TYPE: (id)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: Test_Of_optional_and_required (HeaderDoc::ObjCProtocol)
+---@
+---protocol
|   +--- 
|   +---Test_Of_optional_and_required
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@methodgroup group_1
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---@optional
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@method                foo:withBar:
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---Test_Of_optional_and_required
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---foo
|   |   +---:
|   |   +---(
|   |   |   +---NSString
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---aArg1
|   |   +--- 
|   |   +---withBar
|   |   +---:
|   |   +---(
|   |   |   +---id
|   |   |   +---)
|   |   +---aBar
|   |   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@method                bar:withFoo:
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---Test_Of_optional_and_required
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---bar
|   |   +---:
|   |   +---(
|   |   |   +---NSString
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---aArg1
|   |   +--- 
|   |   +---withFoo
|   |   +---:
|   |   +---(
|   |   |   +---id
|   |   |   +---)
|   |   +---aBar
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---@required
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@method                foo:withBaz:
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---Test_Of_optional_and_required
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---foo
|   |   +---:
|   |   +---(
|   |   |   +---NSString
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---aArg1
|   |   +--- 
|   |   +---withBaz
|   |   +---:
|   |   +---(
|   |   |   +---id
|   |   |   +---)
|   |   +---aBaz
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@method                baz:withFoo:
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---Test_Of_optional_and_required
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---baz
|   |   +---:
|   |   +---(
|   |   |   +---NSString
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---aArg1
|   |   +--- 
|   |   +---withFoo
|   |   +---:
|   |   +---(
|   |   |   +---id
|   |   |   +---)
|   |   +---aFpp
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---@optional
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---Test_Of_optional_and_required
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---returnDefaults
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---@
|   +---@end
+---[ NEWLINE ]
END OF OBJECT


OBJECT: foo:withBar: (HeaderDoc::Method)
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---foo
|   +---:
|   +---(
|   |   +---NSString
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---aArg1
|   +--- 
|   +---withBar
|   +---:
|   +---(
|   |   +---id
|   |   +---)
|   +---aBar
|   +---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@method                bar:withFoo:
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---bar
|   +---:
|   +---(
|   |   +---NSString
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---aArg1
|   +--- 
|   +---withFoo
|   +---:
|   +---(
|   |   +---id
|   |   +---)
|   +---aBar
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@required
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@method                foo:withBaz:
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---foo
|   +---:
|   +---(
|   |   +---NSString
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---aArg1
|   +--- 
|   +---withBaz
|   +---:
|   +---(
|   |   +---id
|   |   +---)
|   +---aBaz
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@method                baz:withFoo:
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---baz
|   +---:
|   +---(
|   |   +---NSString
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---aArg1
|   +--- 
|   +---withFoo
|   +---:
|   +---(
|   |   +---id
|   |   +---)
|   +---aFpp
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@optional
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---returnDefaults
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@
+---@end
END OF OBJECT


OBJECT: bar:withFoo: (HeaderDoc::Method)
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---bar
|   +---:
|   +---(
|   |   +---NSString
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---aArg1
|   +--- 
|   +---withFoo
|   +---:
|   +---(
|   |   +---id
|   |   +---)
|   +---aBar
|   +---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@required
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@method                foo:withBaz:
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---foo
|   +---:
|   +---(
|   |   +---NSString
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---aArg1
|   +--- 
|   +---withBaz
|   +---:
|   +---(
|   |   +---id
|   |   +---)
|   +---aBaz
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@method                baz:withFoo:
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---baz
|   +---:
|   +---(
|   |   +---NSString
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---aArg1
|   +--- 
|   +---withFoo
|   +---:
|   +---(
|   |   +---id
|   |   +---)
|   +---aFpp
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@optional
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---returnDefaults
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@
+---@end
END OF OBJECT


OBJECT: foo:withBaz: (HeaderDoc::Method)
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---foo
|   +---:
|   +---(
|   |   +---NSString
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---aArg1
|   +--- 
|   +---withBaz
|   +---:
|   +---(
|   |   +---id
|   |   +---)
|   +---aBaz
|   +---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@method                baz:withFoo:
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---baz
|   +---:
|   +---(
|   |   +---NSString
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---aArg1
|   +--- 
|   +---withFoo
|   +---:
|   +---(
|   |   +---id
|   |   +---)
|   +---aFpp
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@optional
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---returnDefaults
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@
+---@end
END OF OBJECT


OBJECT: baz:withFoo: (HeaderDoc::Method)
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---baz
|   +---:
|   +---(
|   |   +---NSString
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---aArg1
|   +--- 
|   +---withFoo
|   +---:
|   +---(
|   |   +---id
|   |   +---)
|   +---aFpp
|   +---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@optional
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---returnDefaults
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@
+---@end
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: Test_Of_optional_and_required (HeaderDoc::ObjCProtocol)
	@<!-- a logicalPath="//test_ref/occ/cl/protocol //test_ref/occ/tdef/protocol //test_ref/occ/tag/protocol //test_ref/occ/struct/protocol //test_ref/occ/intf/protocol //test_ref/doc/anysymbol/protocol" machineGenerated="true" --><span class="type">protocol</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/Test_Of_optional_and_required //test_ref/occ/tdef/Test_Of_optional_and_required //test_ref/occ/tag/Test_Of_optional_and_required //test_ref/occ/struct/Test_Of_optional_and_required //test_ref/occ/intf/Test_Of_optional_and_required //test_ref/doc/anysymbol/Test_Of_optional_and_required" machineGenerated="true" --><span class="type">Test_Of_optional_and_required</span><!-- /a -->  <span class="comment">/*!
	@methodgroup group_1</span>
	        <span class="comment">*/</span>
	    @optional <span class="comment">/*!
	@method                foo:withBar:</span>
	        <span class="comment">*/</span>
	    - (
	            <!-- a logicalPath="//test_ref/occ/cl/Test_Of_optional_and_required //test_ref/occ/tdef/Test_Of_optional_and_required //test_ref/occ/tag/Test_Of_optional_and_required //test_ref/occ/struct/Test_Of_optional_and_required //test_ref/occ/intf/Test_Of_optional_and_required //test_ref/doc/anysymbol/Test_Of_optional_and_required" machineGenerated="true" --><span class="type">Test_Of_optional_and_required</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/cl/foo //test_ref/occ/tdef/foo //test_ref/occ/tag/foo //test_ref/occ/struct/foo //test_ref/occ/intf/foo //test_ref/doc/anysymbol/foo" machineGenerated="true" --><span class="type">foo</span><!-- /a -->:(
	            <!-- a logicalPath="//test_ref/occ/cl/NSString //test_ref/occ/tdef/NSString //test_ref/occ/tag/NSString //test_ref/occ/struct/NSString //test_ref/occ/intf/NSString //test_ref/doc/anysymbol/NSString" machineGenerated="true" --><span class="type">NSString</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/cl/aArg1 //test_ref/occ/tdef/aArg1 //test_ref/occ/tag/aArg1 //test_ref/occ/struct/aArg1 //test_ref/occ/intf/aArg1 //test_ref/doc/anysymbol/aArg1" machineGenerated="true" --><span class="type">aArg1</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/withBar //test_ref/occ/tdef/withBar //test_ref/occ/tag/withBar //test_ref/occ/struct/withBar //test_ref/occ/intf/withBar //test_ref/doc/anysymbol/withBar" machineGenerated="true" --><span class="type">withBar</span><!-- /a -->:(
	            <span class="param">id</span>)<!-- a logicalPath="//test_ref/occ/econst/aBar //test_ref/occ/data/aBar //test_ref/occ/clconst/aBar " machineGenerated="true" --><span class="var">aBar</span><!-- /a -->;   <span class="comment">/*!
	@method                bar:withFoo:</span>
	        <span class="comment">*/</span>
	    - (
	            <!-- a logicalPath="//test_ref/occ/cl/Test_Of_optional_and_required //test_ref/occ/tdef/Test_Of_optional_and_required //test_ref/occ/tag/Test_Of_optional_and_required //test_ref/occ/struct/Test_Of_optional_and_required //test_ref/occ/intf/Test_Of_optional_and_required //test_ref/doc/anysymbol/Test_Of_optional_and_required" machineGenerated="true" --><span class="type">Test_Of_optional_and_required</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/cl/bar //test_ref/occ/tdef/bar //test_ref/occ/tag/bar //test_ref/occ/struct/bar //test_ref/occ/intf/bar //test_ref/doc/anysymbol/bar" machineGenerated="true" --><span class="type">bar</span><!-- /a -->:(
	            <!-- a logicalPath="//test_ref/occ/cl/NSString //test_ref/occ/tdef/NSString //test_ref/occ/tag/NSString //test_ref/occ/struct/NSString //test_ref/occ/intf/NSString //test_ref/doc/anysymbol/NSString" machineGenerated="true" --><span class="type">NSString</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/cl/aArg1 //test_ref/occ/tdef/aArg1 //test_ref/occ/tag/aArg1 //test_ref/occ/struct/aArg1 //test_ref/occ/intf/aArg1 //test_ref/doc/anysymbol/aArg1" machineGenerated="true" --><span class="type">aArg1</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/withFoo //test_ref/occ/tdef/withFoo //test_ref/occ/tag/withFoo //test_ref/occ/struct/withFoo //test_ref/occ/intf/withFoo //test_ref/doc/anysymbol/withFoo" machineGenerated="true" --><span class="type">withFoo</span><!-- /a -->:(
	            <span class="param">id</span>)<!-- a logicalPath="//test_ref/occ/econst/aBar //test_ref/occ/data/aBar //test_ref/occ/clconst/aBar " machineGenerated="true" --><span class="var">aBar</span><!-- /a -->;   @required <span class="comment">/*!
	@method                foo:withBaz:</span>
	        <span class="comment">*/</span>
	    - (
	            <!-- a logicalPath="//test_ref/occ/cl/Test_Of_optional_and_required //test_ref/occ/tdef/Test_Of_optional_and_required //test_ref/occ/tag/Test_Of_optional_and_required //test_ref/occ/struct/Test_Of_optional_and_required //test_ref/occ/intf/Test_Of_optional_and_required //test_ref/doc/anysymbol/Test_Of_optional_and_required" machineGenerated="true" --><span class="type">Test_Of_optional_and_required</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/cl/foo //test_ref/occ/tdef/foo //test_ref/occ/tag/foo //test_ref/occ/struct/foo //test_ref/occ/intf/foo //test_ref/doc/anysymbol/foo" machineGenerated="true" --><span class="type">foo</span><!-- /a -->:(
	            <!-- a logicalPath="//test_ref/occ/cl/NSString //test_ref/occ/tdef/NSString //test_ref/occ/tag/NSString //test_ref/occ/struct/NSString //test_ref/occ/intf/NSString //test_ref/doc/anysymbol/NSString" machineGenerated="true" --><span class="type">NSString</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/cl/aArg1 //test_ref/occ/tdef/aArg1 //test_ref/occ/tag/aArg1 //test_ref/occ/struct/aArg1 //test_ref/occ/intf/aArg1 //test_ref/doc/anysymbol/aArg1" machineGenerated="true" --><span class="type">aArg1</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/withBaz //test_ref/occ/tdef/withBaz //test_ref/occ/tag/withBaz //test_ref/occ/struct/withBaz //test_ref/occ/intf/withBaz //test_ref/doc/anysymbol/withBaz" machineGenerated="true" --><span class="type">withBaz</span><!-- /a -->:(
	            <span class="param">id</span>)<!-- a logicalPath="//test_ref/occ/econst/aBaz //test_ref/occ/data/aBaz //test_ref/occ/clconst/aBaz " machineGenerated="true" --><span class="var">aBaz</span><!-- /a -->;   <span class="comment">/*!
	@method                baz:withFoo:</span>
	        <span class="comment">*/</span>
	    - (
	            <!-- a logicalPath="//test_ref/occ/cl/Test_Of_optional_and_required //test_ref/occ/tdef/Test_Of_optional_and_required //test_ref/occ/tag/Test_Of_optional_and_required //test_ref/occ/struct/Test_Of_optional_and_required //test_ref/occ/intf/Test_Of_optional_and_required //test_ref/doc/anysymbol/Test_Of_optional_and_required" machineGenerated="true" --><span class="type">Test_Of_optional_and_required</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/cl/baz //test_ref/occ/tdef/baz //test_ref/occ/tag/baz //test_ref/occ/struct/baz //test_ref/occ/intf/baz //test_ref/doc/anysymbol/baz" machineGenerated="true" --><span class="type">baz</span><!-- /a -->:(
	            <!-- a logicalPath="//test_ref/occ/cl/NSString //test_ref/occ/tdef/NSString //test_ref/occ/tag/NSString //test_ref/occ/struct/NSString //test_ref/occ/intf/NSString //test_ref/doc/anysymbol/NSString" machineGenerated="true" --><span class="type">NSString</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/cl/aArg1 //test_ref/occ/tdef/aArg1 //test_ref/occ/tag/aArg1 //test_ref/occ/struct/aArg1 //test_ref/occ/intf/aArg1 //test_ref/doc/anysymbol/aArg1" machineGenerated="true" --><span class="type">aArg1</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/withFoo //test_ref/occ/tdef/withFoo //test_ref/occ/tag/withFoo //test_ref/occ/struct/withFoo //test_ref/occ/intf/withFoo //test_ref/doc/anysymbol/withFoo" machineGenerated="true" --><span class="type">withFoo</span><!-- /a -->:(
	            <span class="param">id</span>)<!-- a logicalPath="//test_ref/occ/econst/aFpp //test_ref/occ/data/aFpp //test_ref/occ/clconst/aFpp " machineGenerated="true" --><span class="var">aFpp</span><!-- /a -->;   @optional - (
	            <!-- a logicalPath="//test_ref/occ/cl/Test_Of_optional_and_required //test_ref/occ/tdef/Test_Of_optional_and_required //test_ref/occ/tag/Test_Of_optional_and_required //test_ref/occ/struct/Test_Of_optional_and_required //test_ref/occ/intf/Test_Of_optional_and_required //test_ref/doc/anysymbol/Test_Of_optional_and_required" machineGenerated="true" --><span class="type">Test_Of_optional_and_required</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/econst/returnDefaults //test_ref/occ/data/returnDefaults //test_ref/occ/clconst/returnDefaults " machineGenerated="true" --><span class="var">returnDefaults</span><!-- /a -->;   @@end 
END OF OBJECT


OBJECT: foo:withBar: (HeaderDoc::Method)
	- (<!-- a logicalPath="//test_ref/occ/cl/Test_Of_optional_and_required //test_ref/occ/tdef/Test_Of_optional_and_required //test_ref/occ/tag/Test_Of_optional_and_required //test_ref/occ/struct/Test_Of_optional_and_required //test_ref/occ/intf/Test_Of_optional_and_required //test_ref/doc/anysymbol/Test_Of_optional_and_required" machineGenerated="true" --><span class="type">Test_Of_optional_and_required</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/instm/Test_Of_optional_and_required/foo //test_ref/occ/clm/Test_Of_optional_and_required/foo //test_ref/occ/intfcm/Test_Of_optional_and_required/foo //test_ref/occ/intfm/Test_Of_optional_and_required/foo //test_ref/occ/func/foo //test_ref/occ/ftmplt/Test_Of_optional_and_required/foo //test_ref/occ/defn/foo //test_ref/occ/macro/foo //test_ref/doc/anysymbol/foo" machineGenerated="true" --><span class="function">foo</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/NSString //test_ref/occ/tdef/NSString //test_ref/occ/tag/NSString //test_ref/occ/struct/NSString //test_ref/occ/intf/NSString //test_ref/doc/anysymbol/NSString" machineGenerated="true" --><span class="type">NSString</span><!-- /a --> <span class="type">*</span>)<span class="param">aArg1</span> 
	        <!-- a logicalPath="//test_ref/occ/instm/Test_Of_optional_and_required/withBar //test_ref/occ/clm/Test_Of_optional_and_required/withBar //test_ref/occ/intfcm/Test_Of_optional_and_required/withBar //test_ref/occ/intfm/Test_Of_optional_and_required/withBar //test_ref/occ/func/withBar //test_ref/occ/ftmplt/Test_Of_optional_and_required/withBar //test_ref/occ/defn/withBar //test_ref/occ/macro/withBar //test_ref/doc/anysymbol/withBar" machineGenerated="true" --><span class="function">withBar</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/id //test_ref/occ/tdef/id //test_ref/occ/tag/id //test_ref/occ/struct/id //test_ref/occ/intf/id //test_ref/doc/anysymbol/id" machineGenerated="true" --><span class="type">id</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/econst/aBar //test_ref/occ/data/Test_Of_optional_and_required/aBar //test_ref/occ/data/aBar //test_ref/occ/clconst/Test_Of_optional_and_required/aBar " machineGenerated="true" --><span class="var">aBar</span><!-- /a -->; 
END OF OBJECT


OBJECT: bar:withFoo: (HeaderDoc::Method)
	- (<!-- a logicalPath="//test_ref/occ/cl/Test_Of_optional_and_required //test_ref/occ/tdef/Test_Of_optional_and_required //test_ref/occ/tag/Test_Of_optional_and_required //test_ref/occ/struct/Test_Of_optional_and_required //test_ref/occ/intf/Test_Of_optional_and_required //test_ref/doc/anysymbol/Test_Of_optional_and_required" machineGenerated="true" --><span class="type">Test_Of_optional_and_required</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/instm/Test_Of_optional_and_required/bar //test_ref/occ/clm/Test_Of_optional_and_required/bar //test_ref/occ/intfcm/Test_Of_optional_and_required/bar //test_ref/occ/intfm/Test_Of_optional_and_required/bar //test_ref/occ/func/bar //test_ref/occ/ftmplt/Test_Of_optional_and_required/bar //test_ref/occ/defn/bar //test_ref/occ/macro/bar //test_ref/doc/anysymbol/bar" machineGenerated="true" --><span class="function">bar</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/NSString //test_ref/occ/tdef/NSString //test_ref/occ/tag/NSString //test_ref/occ/struct/NSString //test_ref/occ/intf/NSString //test_ref/doc/anysymbol/NSString" machineGenerated="true" --><span class="type">NSString</span><!-- /a --> <span class="type">*</span>)<span class="param">aArg1</span> 
	        <!-- a logicalPath="//test_ref/occ/instm/Test_Of_optional_and_required/withFoo //test_ref/occ/clm/Test_Of_optional_and_required/withFoo //test_ref/occ/intfcm/Test_Of_optional_and_required/withFoo //test_ref/occ/intfm/Test_Of_optional_and_required/withFoo //test_ref/occ/func/withFoo //test_ref/occ/ftmplt/Test_Of_optional_and_required/withFoo //test_ref/occ/defn/withFoo //test_ref/occ/macro/withFoo //test_ref/doc/anysymbol/withFoo" machineGenerated="true" --><span class="function">withFoo</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/id //test_ref/occ/tdef/id //test_ref/occ/tag/id //test_ref/occ/struct/id //test_ref/occ/intf/id //test_ref/doc/anysymbol/id" machineGenerated="true" --><span class="type">id</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/econst/aBar //test_ref/occ/data/Test_Of_optional_and_required/aBar //test_ref/occ/data/aBar //test_ref/occ/clconst/Test_Of_optional_and_required/aBar " machineGenerated="true" --><span class="var">aBar</span><!-- /a -->; 
END OF OBJECT


OBJECT: foo:withBaz: (HeaderDoc::Method)
	- (<!-- a logicalPath="//test_ref/occ/cl/Test_Of_optional_and_required //test_ref/occ/tdef/Test_Of_optional_and_required //test_ref/occ/tag/Test_Of_optional_and_required //test_ref/occ/struct/Test_Of_optional_and_required //test_ref/occ/intf/Test_Of_optional_and_required //test_ref/doc/anysymbol/Test_Of_optional_and_required" machineGenerated="true" --><span class="type">Test_Of_optional_and_required</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/instm/Test_Of_optional_and_required/foo //test_ref/occ/clm/Test_Of_optional_and_required/foo //test_ref/occ/intfcm/Test_Of_optional_and_required/foo //test_ref/occ/intfm/Test_Of_optional_and_required/foo //test_ref/occ/func/foo //test_ref/occ/ftmplt/Test_Of_optional_and_required/foo //test_ref/occ/defn/foo //test_ref/occ/macro/foo //test_ref/doc/anysymbol/foo" machineGenerated="true" --><span class="function">foo</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/NSString //test_ref/occ/tdef/NSString //test_ref/occ/tag/NSString //test_ref/occ/struct/NSString //test_ref/occ/intf/NSString //test_ref/doc/anysymbol/NSString" machineGenerated="true" --><span class="type">NSString</span><!-- /a --> <span class="type">*</span>)<span class="param">aArg1</span> 
	        <!-- a logicalPath="//test_ref/occ/instm/Test_Of_optional_and_required/withBaz //test_ref/occ/clm/Test_Of_optional_and_required/withBaz //test_ref/occ/intfcm/Test_Of_optional_and_required/withBaz //test_ref/occ/intfm/Test_Of_optional_and_required/withBaz //test_ref/occ/func/withBaz //test_ref/occ/ftmplt/Test_Of_optional_and_required/withBaz //test_ref/occ/defn/withBaz //test_ref/occ/macro/withBaz //test_ref/doc/anysymbol/withBaz" machineGenerated="true" --><span class="function">withBaz</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/id //test_ref/occ/tdef/id //test_ref/occ/tag/id //test_ref/occ/struct/id //test_ref/occ/intf/id //test_ref/doc/anysymbol/id" machineGenerated="true" --><span class="type">id</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/econst/aBaz //test_ref/occ/data/Test_Of_optional_and_required/aBaz //test_ref/occ/data/aBaz //test_ref/occ/clconst/Test_Of_optional_and_required/aBaz " machineGenerated="true" --><span class="var">aBaz</span><!-- /a -->; 
END OF OBJECT


OBJECT: baz:withFoo: (HeaderDoc::Method)
	- (<!-- a logicalPath="//test_ref/occ/cl/Test_Of_optional_and_required //test_ref/occ/tdef/Test_Of_optional_and_required //test_ref/occ/tag/Test_Of_optional_and_required //test_ref/occ/struct/Test_Of_optional_and_required //test_ref/occ/intf/Test_Of_optional_and_required //test_ref/doc/anysymbol/Test_Of_optional_and_required" machineGenerated="true" --><span class="type">Test_Of_optional_and_required</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/instm/Test_Of_optional_and_required/baz //test_ref/occ/clm/Test_Of_optional_and_required/baz //test_ref/occ/intfcm/Test_Of_optional_and_required/baz //test_ref/occ/intfm/Test_Of_optional_and_required/baz //test_ref/occ/func/baz //test_ref/occ/ftmplt/Test_Of_optional_and_required/baz //test_ref/occ/defn/baz //test_ref/occ/macro/baz //test_ref/doc/anysymbol/baz" machineGenerated="true" --><span class="function">baz</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/NSString //test_ref/occ/tdef/NSString //test_ref/occ/tag/NSString //test_ref/occ/struct/NSString //test_ref/occ/intf/NSString //test_ref/doc/anysymbol/NSString" machineGenerated="true" --><span class="type">NSString</span><!-- /a --> <span class="type">*</span>)<span class="param">aArg1</span> 
	        <!-- a logicalPath="//test_ref/occ/instm/Test_Of_optional_and_required/withFoo //test_ref/occ/clm/Test_Of_optional_and_required/withFoo //test_ref/occ/intfcm/Test_Of_optional_and_required/withFoo //test_ref/occ/intfm/Test_Of_optional_and_required/withFoo //test_ref/occ/func/withFoo //test_ref/occ/ftmplt/Test_Of_optional_and_required/withFoo //test_ref/occ/defn/withFoo //test_ref/occ/macro/withFoo //test_ref/doc/anysymbol/withFoo" machineGenerated="true" --><span class="function">withFoo</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/id //test_ref/occ/tdef/id //test_ref/occ/tag/id //test_ref/occ/struct/id //test_ref/occ/intf/id //test_ref/doc/anysymbol/id" machineGenerated="true" --><span class="type">id</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/econst/aFpp //test_ref/occ/data/Test_Of_optional_and_required/aFpp //test_ref/occ/data/aFpp //test_ref/occ/clconst/Test_Of_optional_and_required/aFpp " machineGenerated="true" --><span class="var">aFpp</span><!-- /a -->; 
END OF OBJECT



$66350|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 1
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 0
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/ObjC_protocol_6.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/ObjC_protocol_6.test
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => 0
$parserState->{categoryClass} => 
$parserState->{classIsObjC} => 1
$parserState->{classtype} => @protocol
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 0
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inProtocol} => -1
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 22
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => end
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 1
$parserState->{onlyComments} => 0
$parserState->{parsedParamAtBrace} => ARRAY(OBJID)
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 0
$parserState->{parsedParamStateAtBrace} => ARRAY(OBJID)
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 1
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => protocol
$parserState->{prekeywordsodname} => 
$parserState->{prekeywordsodtype} => 
$parserState->{returntype} => @protocol Test_Of_optional_and_required 
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => end
$parserState->{sodtype} =>  Test_Of_optional_and_required
$parserState->{sodtypeclasstoken} => protocol
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 2
$parserState->{storeDec} => 
$parserState->{sublang} => C
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 22
typelist: @protocol
namelist: Test_Of_optional_and_required
posstypes: 
value: 
returntype: Test_Of_optional_and_required
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 10
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---@
+---protocol
|   +--- 
|   +---Test_Of_optional_and_required
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@methodgroup group_1
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---@optional
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@method                foo:withBar:
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---Test_Of_optional_and_required
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---foo
|   |   +---:
|   |   +---(
|   |   |   +---NSString
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---aArg1
|   |   +--- 
|   |   +---withBar
|   |   +---:
|   |   +---(
|   |   |   +---id
|   |   |   +---)
|   |   +---aBar
|   |   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@method                bar:withFoo:
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---Test_Of_optional_and_required
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---bar
|   |   +---:
|   |   +---(
|   |   |   +---NSString
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---aArg1
|   |   +--- 
|   |   +---withFoo
|   |   +---:
|   |   +---(
|   |   |   +---id
|   |   |   +---)
|   |   +---aBar
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---@required
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@method                foo:withBaz:
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---Test_Of_optional_and_required
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---foo
|   |   +---:
|   |   +---(
|   |   |   +---NSString
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---aArg1
|   |   +--- 
|   |   +---withBaz
|   |   +---:
|   |   +---(
|   |   |   +---id
|   |   |   +---)
|   |   +---aBaz
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@method                baz:withFoo:
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---Test_Of_optional_and_required
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---baz
|   |   +---:
|   |   +---(
|   |   |   +---NSString
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---aArg1
|   |   +--- 
|   |   +---withFoo
|   |   +---:
|   |   +---(
|   |   |   +---id
|   |   |   +---)
|   |   +---aFpp
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---@optional
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---Test_Of_optional_and_required
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---returnDefaults
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---@
|   +---@end
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: ObjC protocol 6
APIUID: //test_ref/doc/header/ObjC_protocol_6.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: 
LONG ATTRIBUTES: 
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::ObjCProtocol
    NAME: Test_Of_optional_and_required
    APIUID: //test_ref/occ/intf/Test_Of_optional_and_required
    ABSTRACT: ""
    DISCUSSION: "<p>tests @optional and @required.
"
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::ObjCProtocol"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "0"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Declared In</b></p><p><a href="../../index.html" logicalPath="//test_ref/doc/header/ObjC_protocol_6.test" target="_top" machineGenerated="true">ObjC protocol 6</a></p>

    LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Method
        NAME: foo:withBar:
        APIUID: //test_ref/occ/intfm/Test_Of_optional_and_required/foo:withBar:
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: "group_1"
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "Test_Of_optional_and_required *"
        LINENUM: ""
        CLASS: "HeaderDoc::Method"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aArg1
            TYPE: (NSString *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aBar
            TYPE: (id)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aArg1
            TYPE: (NSString *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aBar
            TYPE: (id)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aArg1
            TYPE: (NSString *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aBaz
            TYPE: (id)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aArg1
            TYPE: (NSString *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aFpp
            TYPE: (id)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Method
        NAME: bar:withFoo:
        APIUID: //test_ref/occ/intfm/Test_Of_optional_and_required/bar:withFoo:
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: "group_1"
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "Test_Of_optional_and_required *"
        LINENUM: ""
        CLASS: "HeaderDoc::Method"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aArg1
            TYPE: (NSString *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aBar
            TYPE: (id)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aArg1
            TYPE: (NSString *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aBaz
            TYPE: (id)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aArg1
            TYPE: (NSString *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aFpp
            TYPE: (id)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Method
        NAME: foo:withBaz:
        APIUID: //test_ref/occ/intfm/Test_Of_optional_and_required/foo:withBaz:
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: "group_1"
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "Test_Of_optional_and_required *"
        LINENUM: ""
        CLASS: "HeaderDoc::Method"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aArg1
            TYPE: (NSString *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aBaz
            TYPE: (id)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aArg1
            TYPE: (NSString *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aFpp
            TYPE: (id)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Method
        NAME: baz:withFoo:
        APIUID: //test_ref/occ/intfm/Test_Of_optional_and_required/baz:withFoo:
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: "group_1"
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "Test_Of_optional_and_required *"
        LINENUM: ""
        CLASS: "HeaderDoc::Method"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aArg1
            TYPE: (NSString *)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: aFpp
            TYPE: (id)
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: 
            LONG ATTRIBUTES: 
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Method
        NAME: returnDefaults
        APIUID: //test_ref/occ/intfm/Test_Of_optional_and_required/returnDefaults
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: "group_1"
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: "Test_Of_optional_and_required *"
        LINENUM: ""
        CLASS: "HeaderDoc::Method"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: 
        LONG ATTRIBUTES: 
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: Test_Of_optional_and_required (HeaderDoc::ObjCProtocol)
+---@
+---protocol
|   +--- 
|   +---Test_Of_optional_and_required
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@methodgroup group_1
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---@optional
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@method                foo:withBar:
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---Test_Of_optional_and_required
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---foo
|   |   +---:
|   |   +---(
|   |   |   +---NSString
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---aArg1
|   |   +--- 
|   |   +---withBar
|   |   +---:
|   |   +---(
|   |   |   +---id
|   |   |   +---)
|   |   +---aBar
|   |   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@method                bar:withFoo:
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---Test_Of_optional_and_required
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---bar
|   |   +---:
|   |   +---(
|   |   |   +---NSString
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---aArg1
|   |   +--- 
|   |   +---withFoo
|   |   +---:
|   |   +---(
|   |   |   +---id
|   |   |   +---)
|   |   +---aBar
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---@required
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@method                foo:withBaz:
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---Test_Of_optional_and_required
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---foo
|   |   +---:
|   |   +---(
|   |   |   +---NSString
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---aArg1
|   |   +--- 
|   |   +---withBaz
|   |   +---:
|   |   +---(
|   |   |   +---id
|   |   |   +---)
|   |   +---aBaz
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +---
@method                baz:withFoo:
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---Test_Of_optional_and_required
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---baz
|   |   +---:
|   |   +---(
|   |   |   +---NSString
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---aArg1
|   |   +--- 
|   |   +---withFoo
|   |   +---:
|   |   +---(
|   |   |   +---id
|   |   |   +---)
|   |   +---aFpp
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---@optional
|   +---[ NEWLINE ]
|   +-*-- (HAS STATE)
|   |   +--- 
|   |   +---(
|   |   |   +---Test_Of_optional_and_required
|   |   |   +--- 
|   |   |   +---*
|   |   |   +---)
|   |   +---returnDefaults
|   |   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---@
|   +---@end
+---[ NEWLINE ]
END OF OBJECT


OBJECT: foo:withBar: (HeaderDoc::Method)
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---foo
|   +---:
|   +---(
|   |   +---NSString
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---aArg1
|   +--- 
|   +---withBar
|   +---:
|   +---(
|   |   +---id
|   |   +---)
|   +---aBar
|   +---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@method                bar:withFoo:
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---bar
|   +---:
|   +---(
|   |   +---NSString
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---aArg1
|   +--- 
|   +---withFoo
|   +---:
|   +---(
|   |   +---id
|   |   +---)
|   +---aBar
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@required
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@method                foo:withBaz:
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---foo
|   +---:
|   +---(
|   |   +---NSString
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---aArg1
|   +--- 
|   +---withBaz
|   +---:
|   +---(
|   |   +---id
|   |   +---)
|   +---aBaz
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@method                baz:withFoo:
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---baz
|   +---:
|   +---(
|   |   +---NSString
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---aArg1
|   +--- 
|   +---withFoo
|   +---:
|   +---(
|   |   +---id
|   |   +---)
|   +---aFpp
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@optional
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---returnDefaults
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@
+---@end
END OF OBJECT


OBJECT: bar:withFoo: (HeaderDoc::Method)
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---bar
|   +---:
|   +---(
|   |   +---NSString
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---aArg1
|   +--- 
|   +---withFoo
|   +---:
|   +---(
|   |   +---id
|   |   +---)
|   +---aBar
|   +---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@required
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@method                foo:withBaz:
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---foo
|   +---:
|   +---(
|   |   +---NSString
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---aArg1
|   +--- 
|   +---withBaz
|   +---:
|   +---(
|   |   +---id
|   |   +---)
|   +---aBaz
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@method                baz:withFoo:
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---baz
|   +---:
|   +---(
|   |   +---NSString
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---aArg1
|   +--- 
|   +---withFoo
|   +---:
|   +---(
|   |   +---id
|   |   +---)
|   +---aFpp
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@optional
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---returnDefaults
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@
+---@end
END OF OBJECT


OBJECT: foo:withBaz: (HeaderDoc::Method)
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---foo
|   +---:
|   +---(
|   |   +---NSString
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---aArg1
|   +--- 
|   +---withBaz
|   +---:
|   +---(
|   |   +---id
|   |   +---)
|   +---aBaz
|   +---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +---
@method                baz:withFoo:
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---baz
|   +---:
|   +---(
|   |   +---NSString
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---aArg1
|   +--- 
|   +---withFoo
|   +---:
|   +---(
|   |   +---id
|   |   +---)
|   +---aFpp
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@optional
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---returnDefaults
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@
+---@end
END OF OBJECT


OBJECT: baz:withFoo: (HeaderDoc::Method)
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---baz
|   +---:
|   +---(
|   |   +---NSString
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---aArg1
|   +--- 
|   +---withFoo
|   +---:
|   +---(
|   |   +---id
|   |   +---)
|   +---aFpp
|   +---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@optional
+---[ NEWLINE ]
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---returnDefaults
|   +---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@
+---@end
END OF OBJECT


OBJECT: returnDefaults (HeaderDoc::Method)
+-*-- (HAS STATE)
|   +--- 
|   +---(
|   |   +---Test_Of_optional_and_required
|   |   +--- 
|   |   +---*
|   |   +---)
|   +---returnDefaults
|   +---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---@
+---@end
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: Test_Of_optional_and_required (HeaderDoc::ObjCProtocol)
	@<!-- a logicalPath="//test_ref/occ/cl/protocol //test_ref/occ/tdef/protocol //test_ref/occ/tag/protocol //test_ref/occ/struct/protocol //test_ref/occ/intf/protocol //test_ref/doc/anysymbol/protocol" machineGenerated="true" --><span class="type">protocol</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/Test_Of_optional_and_required //test_ref/occ/tdef/Test_Of_optional_and_required //test_ref/occ/tag/Test_Of_optional_and_required //test_ref/occ/struct/Test_Of_optional_and_required //test_ref/occ/intf/Test_Of_optional_and_required //test_ref/doc/anysymbol/Test_Of_optional_and_required" machineGenerated="true" --><span class="type">Test_Of_optional_and_required</span><!-- /a -->  <span class="comment">/*!
	@methodgroup group_1</span>
	        <span class="comment">*/</span>
	    @optional <span class="comment">/*!
	@method                foo:withBar:</span>
	        <span class="comment">*/</span>
	    - (
	            <!-- a logicalPath="//test_ref/occ/cl/Test_Of_optional_and_required //test_ref/occ/tdef/Test_Of_optional_and_required //test_ref/occ/tag/Test_Of_optional_and_required //test_ref/occ/struct/Test_Of_optional_and_required //test_ref/occ/intf/Test_Of_optional_and_required //test_ref/doc/anysymbol/Test_Of_optional_and_required" machineGenerated="true" --><span class="type">Test_Of_optional_and_required</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/cl/foo //test_ref/occ/tdef/foo //test_ref/occ/tag/foo //test_ref/occ/struct/foo //test_ref/occ/intf/foo //test_ref/doc/anysymbol/foo" machineGenerated="true" --><span class="type">foo</span><!-- /a -->:(
	            <!-- a logicalPath="//test_ref/occ/cl/NSString //test_ref/occ/tdef/NSString //test_ref/occ/tag/NSString //test_ref/occ/struct/NSString //test_ref/occ/intf/NSString //test_ref/doc/anysymbol/NSString" machineGenerated="true" --><span class="type">NSString</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/cl/aArg1 //test_ref/occ/tdef/aArg1 //test_ref/occ/tag/aArg1 //test_ref/occ/struct/aArg1 //test_ref/occ/intf/aArg1 //test_ref/doc/anysymbol/aArg1" machineGenerated="true" --><span class="type">aArg1</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/withBar //test_ref/occ/tdef/withBar //test_ref/occ/tag/withBar //test_ref/occ/struct/withBar //test_ref/occ/intf/withBar //test_ref/doc/anysymbol/withBar" machineGenerated="true" --><span class="type">withBar</span><!-- /a -->:(
	            <span class="param">id</span>)<!-- a logicalPath="//test_ref/occ/econst/aBar //test_ref/occ/data/aBar //test_ref/occ/clconst/aBar " machineGenerated="true" --><span class="var">aBar</span><!-- /a -->;   <span class="comment">/*!
	@method                bar:withFoo:</span>
	        <span class="comment">*/</span>
	    - (
	            <!-- a logicalPath="//test_ref/occ/cl/Test_Of_optional_and_required //test_ref/occ/tdef/Test_Of_optional_and_required //test_ref/occ/tag/Test_Of_optional_and_required //test_ref/occ/struct/Test_Of_optional_and_required //test_ref/occ/intf/Test_Of_optional_and_required //test_ref/doc/anysymbol/Test_Of_optional_and_required" machineGenerated="true" --><span class="type">Test_Of_optional_and_required</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/cl/bar //test_ref/occ/tdef/bar //test_ref/occ/tag/bar //test_ref/occ/struct/bar //test_ref/occ/intf/bar //test_ref/doc/anysymbol/bar" machineGenerated="true" --><span class="type">bar</span><!-- /a -->:(
	            <!-- a logicalPath="//test_ref/occ/cl/NSString //test_ref/occ/tdef/NSString //test_ref/occ/tag/NSString //test_ref/occ/struct/NSString //test_ref/occ/intf/NSString //test_ref/doc/anysymbol/NSString" machineGenerated="true" --><span class="type">NSString</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/cl/aArg1 //test_ref/occ/tdef/aArg1 //test_ref/occ/tag/aArg1 //test_ref/occ/struct/aArg1 //test_ref/occ/intf/aArg1 //test_ref/doc/anysymbol/aArg1" machineGenerated="true" --><span class="type">aArg1</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/withFoo //test_ref/occ/tdef/withFoo //test_ref/occ/tag/withFoo //test_ref/occ/struct/withFoo //test_ref/occ/intf/withFoo //test_ref/doc/anysymbol/withFoo" machineGenerated="true" --><span class="type">withFoo</span><!-- /a -->:(
	            <span class="param">id</span>)<!-- a logicalPath="//test_ref/occ/econst/aBar //test_ref/occ/data/aBar //test_ref/occ/clconst/aBar " machineGenerated="true" --><span class="var">aBar</span><!-- /a -->;   @required <span class="comment">/*!
	@method                foo:withBaz:</span>
	        <span class="comment">*/</span>
	    - (
	            <!-- a logicalPath="//test_ref/occ/cl/Test_Of_optional_and_required //test_ref/occ/tdef/Test_Of_optional_and_required //test_ref/occ/tag/Test_Of_optional_and_required //test_ref/occ/struct/Test_Of_optional_and_required //test_ref/occ/intf/Test_Of_optional_and_required //test_ref/doc/anysymbol/Test_Of_optional_and_required" machineGenerated="true" --><span class="type">Test_Of_optional_and_required</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/cl/foo //test_ref/occ/tdef/foo //test_ref/occ/tag/foo //test_ref/occ/struct/foo //test_ref/occ/intf/foo //test_ref/doc/anysymbol/foo" machineGenerated="true" --><span class="type">foo</span><!-- /a -->:(
	            <!-- a logicalPath="//test_ref/occ/cl/NSString //test_ref/occ/tdef/NSString //test_ref/occ/tag/NSString //test_ref/occ/struct/NSString //test_ref/occ/intf/NSString //test_ref/doc/anysymbol/NSString" machineGenerated="true" --><span class="type">NSString</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/cl/aArg1 //test_ref/occ/tdef/aArg1 //test_ref/occ/tag/aArg1 //test_ref/occ/struct/aArg1 //test_ref/occ/intf/aArg1 //test_ref/doc/anysymbol/aArg1" machineGenerated="true" --><span class="type">aArg1</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/withBaz //test_ref/occ/tdef/withBaz //test_ref/occ/tag/withBaz //test_ref/occ/struct/withBaz //test_ref/occ/intf/withBaz //test_ref/doc/anysymbol/withBaz" machineGenerated="true" --><span class="type">withBaz</span><!-- /a -->:(
	            <span class="param">id</span>)<!-- a logicalPath="//test_ref/occ/econst/aBaz //test_ref/occ/data/aBaz //test_ref/occ/clconst/aBaz " machineGenerated="true" --><span class="var">aBaz</span><!-- /a -->;   <span class="comment">/*!
	@method                baz:withFoo:</span>
	        <span class="comment">*/</span>
	    - (
	            <!-- a logicalPath="//test_ref/occ/cl/Test_Of_optional_and_required //test_ref/occ/tdef/Test_Of_optional_and_required //test_ref/occ/tag/Test_Of_optional_and_required //test_ref/occ/struct/Test_Of_optional_and_required //test_ref/occ/intf/Test_Of_optional_and_required //test_ref/doc/anysymbol/Test_Of_optional_and_required" machineGenerated="true" --><span class="type">Test_Of_optional_and_required</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/cl/baz //test_ref/occ/tdef/baz //test_ref/occ/tag/baz //test_ref/occ/struct/baz //test_ref/occ/intf/baz //test_ref/doc/anysymbol/baz" machineGenerated="true" --><span class="type">baz</span><!-- /a -->:(
	            <!-- a logicalPath="//test_ref/occ/cl/NSString //test_ref/occ/tdef/NSString //test_ref/occ/tag/NSString //test_ref/occ/struct/NSString //test_ref/occ/intf/NSString //test_ref/doc/anysymbol/NSString" machineGenerated="true" --><span class="type">NSString</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/cl/aArg1 //test_ref/occ/tdef/aArg1 //test_ref/occ/tag/aArg1 //test_ref/occ/struct/aArg1 //test_ref/occ/intf/aArg1 //test_ref/doc/anysymbol/aArg1" machineGenerated="true" --><span class="type">aArg1</span><!-- /a --> <!-- a logicalPath="//test_ref/occ/cl/withFoo //test_ref/occ/tdef/withFoo //test_ref/occ/tag/withFoo //test_ref/occ/struct/withFoo //test_ref/occ/intf/withFoo //test_ref/doc/anysymbol/withFoo" machineGenerated="true" --><span class="type">withFoo</span><!-- /a -->:(
	            <span class="param">id</span>)<!-- a logicalPath="//test_ref/occ/econst/aFpp //test_ref/occ/data/aFpp //test_ref/occ/clconst/aFpp " machineGenerated="true" --><span class="var">aFpp</span><!-- /a -->;   @optional - (
	            <!-- a logicalPath="//test_ref/occ/cl/Test_Of_optional_and_required //test_ref/occ/tdef/Test_Of_optional_and_required //test_ref/occ/tag/Test_Of_optional_and_required //test_ref/occ/struct/Test_Of_optional_and_required //test_ref/occ/intf/Test_Of_optional_and_required //test_ref/doc/anysymbol/Test_Of_optional_and_required" machineGenerated="true" --><span class="type">Test_Of_optional_and_required</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/econst/returnDefaults //test_ref/occ/data/returnDefaults //test_ref/occ/clconst/returnDefaults " machineGenerated="true" --><span class="var">returnDefaults</span><!-- /a -->;   @@end 
END OF OBJECT


OBJECT: foo:withBar: (HeaderDoc::Method)
	- (<!-- a logicalPath="//test_ref/occ/cl/Test_Of_optional_and_required //test_ref/occ/tdef/Test_Of_optional_and_required //test_ref/occ/tag/Test_Of_optional_and_required //test_ref/occ/struct/Test_Of_optional_and_required //test_ref/occ/intf/Test_Of_optional_and_required //test_ref/doc/anysymbol/Test_Of_optional_and_required" machineGenerated="true" --><span class="type">Test_Of_optional_and_required</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/instm/Test_Of_optional_and_required/foo //test_ref/occ/clm/Test_Of_optional_and_required/foo //test_ref/occ/intfcm/Test_Of_optional_and_required/foo //test_ref/occ/intfm/Test_Of_optional_and_required/foo //test_ref/occ/func/foo //test_ref/occ/ftmplt/Test_Of_optional_and_required/foo //test_ref/occ/defn/foo //test_ref/occ/macro/foo //test_ref/doc/anysymbol/foo" machineGenerated="true" --><span class="function">foo</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/NSString //test_ref/occ/tdef/NSString //test_ref/occ/tag/NSString //test_ref/occ/struct/NSString //test_ref/occ/intf/NSString //test_ref/doc/anysymbol/NSString" machineGenerated="true" --><span class="type">NSString</span><!-- /a --> <span class="type">*</span>)<span class="param">aArg1</span> 
	        <!-- a logicalPath="//test_ref/occ/instm/Test_Of_optional_and_required/withBar //test_ref/occ/clm/Test_Of_optional_and_required/withBar //test_ref/occ/intfcm/Test_Of_optional_and_required/withBar //test_ref/occ/intfm/Test_Of_optional_and_required/withBar //test_ref/occ/func/withBar //test_ref/occ/ftmplt/Test_Of_optional_and_required/withBar //test_ref/occ/defn/withBar //test_ref/occ/macro/withBar //test_ref/doc/anysymbol/withBar" machineGenerated="true" --><span class="function">withBar</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/id //test_ref/occ/tdef/id //test_ref/occ/tag/id //test_ref/occ/struct/id //test_ref/occ/intf/id //test_ref/doc/anysymbol/id" machineGenerated="true" --><span class="type">id</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/econst/aBar //test_ref/occ/data/Test_Of_optional_and_required/aBar //test_ref/occ/data/aBar //test_ref/occ/clconst/Test_Of_optional_and_required/aBar " machineGenerated="true" --><span class="var">aBar</span><!-- /a -->; 
END OF OBJECT


OBJECT: bar:withFoo: (HeaderDoc::Method)
	- (<!-- a logicalPath="//test_ref/occ/cl/Test_Of_optional_and_required //test_ref/occ/tdef/Test_Of_optional_and_required //test_ref/occ/tag/Test_Of_optional_and_required //test_ref/occ/struct/Test_Of_optional_and_required //test_ref/occ/intf/Test_Of_optional_and_required //test_ref/doc/anysymbol/Test_Of_optional_and_required" machineGenerated="true" --><span class="type">Test_Of_optional_and_required</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/instm/Test_Of_optional_and_required/bar //test_ref/occ/clm/Test_Of_optional_and_required/bar //test_ref/occ/intfcm/Test_Of_optional_and_required/bar //test_ref/occ/intfm/Test_Of_optional_and_required/bar //test_ref/occ/func/bar //test_ref/occ/ftmplt/Test_Of_optional_and_required/bar //test_ref/occ/defn/bar //test_ref/occ/macro/bar //test_ref/doc/anysymbol/bar" machineGenerated="true" --><span class="function">bar</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/NSString //test_ref/occ/tdef/NSString //test_ref/occ/tag/NSString //test_ref/occ/struct/NSString //test_ref/occ/intf/NSString //test_ref/doc/anysymbol/NSString" machineGenerated="true" --><span class="type">NSString</span><!-- /a --> <span class="type">*</span>)<span class="param">aArg1</span> 
	        <!-- a logicalPath="//test_ref/occ/instm/Test_Of_optional_and_required/withFoo //test_ref/occ/clm/Test_Of_optional_and_required/withFoo //test_ref/occ/intfcm/Test_Of_optional_and_required/withFoo //test_ref/occ/intfm/Test_Of_optional_and_required/withFoo //test_ref/occ/func/withFoo //test_ref/occ/ftmplt/Test_Of_optional_and_required/withFoo //test_ref/occ/defn/withFoo //test_ref/occ/macro/withFoo //test_ref/doc/anysymbol/withFoo" machineGenerated="true" --><span class="function">withFoo</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/id //test_ref/occ/tdef/id //test_ref/occ/tag/id //test_ref/occ/struct/id //test_ref/occ/intf/id //test_ref/doc/anysymbol/id" machineGenerated="true" --><span class="type">id</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/econst/aBar //test_ref/occ/data/Test_Of_optional_and_required/aBar //test_ref/occ/data/aBar //test_ref/occ/clconst/Test_Of_optional_and_required/aBar " machineGenerated="true" --><span class="var">aBar</span><!-- /a -->; 
END OF OBJECT


OBJECT: foo:withBaz: (HeaderDoc::Method)
	- (<!-- a logicalPath="//test_ref/occ/cl/Test_Of_optional_and_required //test_ref/occ/tdef/Test_Of_optional_and_required //test_ref/occ/tag/Test_Of_optional_and_required //test_ref/occ/struct/Test_Of_optional_and_required //test_ref/occ/intf/Test_Of_optional_and_required //test_ref/doc/anysymbol/Test_Of_optional_and_required" machineGenerated="true" --><span class="type">Test_Of_optional_and_required</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/instm/Test_Of_optional_and_required/foo //test_ref/occ/clm/Test_Of_optional_and_required/foo //test_ref/occ/intfcm/Test_Of_optional_and_required/foo //test_ref/occ/intfm/Test_Of_optional_and_required/foo //test_ref/occ/func/foo //test_ref/occ/ftmplt/Test_Of_optional_and_required/foo //test_ref/occ/defn/foo //test_ref/occ/macro/foo //test_ref/doc/anysymbol/foo" machineGenerated="true" --><span class="function">foo</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/NSString //test_ref/occ/tdef/NSString //test_ref/occ/tag/NSString //test_ref/occ/struct/NSString //test_ref/occ/intf/NSString //test_ref/doc/anysymbol/NSString" machineGenerated="true" --><span class="type">NSString</span><!-- /a --> <span class="type">*</span>)<span class="param">aArg1</span> 
	        <!-- a logicalPath="//test_ref/occ/instm/Test_Of_optional_and_required/withBaz //test_ref/occ/clm/Test_Of_optional_and_required/withBaz //test_ref/occ/intfcm/Test_Of_optional_and_required/withBaz //test_ref/occ/intfm/Test_Of_optional_and_required/withBaz //test_ref/occ/func/withBaz //test_ref/occ/ftmplt/Test_Of_optional_and_required/withBaz //test_ref/occ/defn/withBaz //test_ref/occ/macro/withBaz //test_ref/doc/anysymbol/withBaz" machineGenerated="true" --><span class="function">withBaz</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/id //test_ref/occ/tdef/id //test_ref/occ/tag/id //test_ref/occ/struct/id //test_ref/occ/intf/id //test_ref/doc/anysymbol/id" machineGenerated="true" --><span class="type">id</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/econst/aBaz //test_ref/occ/data/Test_Of_optional_and_required/aBaz //test_ref/occ/data/aBaz //test_ref/occ/clconst/Test_Of_optional_and_required/aBaz " machineGenerated="true" --><span class="var">aBaz</span><!-- /a -->; 
END OF OBJECT


OBJECT: baz:withFoo: (HeaderDoc::Method)
	- (<!-- a logicalPath="//test_ref/occ/cl/Test_Of_optional_and_required //test_ref/occ/tdef/Test_Of_optional_and_required //test_ref/occ/tag/Test_Of_optional_and_required //test_ref/occ/struct/Test_Of_optional_and_required //test_ref/occ/intf/Test_Of_optional_and_required //test_ref/doc/anysymbol/Test_Of_optional_and_required" machineGenerated="true" --><span class="type">Test_Of_optional_and_required</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/instm/Test_Of_optional_and_required/baz //test_ref/occ/clm/Test_Of_optional_and_required/baz //test_ref/occ/intfcm/Test_Of_optional_and_required/baz //test_ref/occ/intfm/Test_Of_optional_and_required/baz //test_ref/occ/func/baz //test_ref/occ/ftmplt/Test_Of_optional_and_required/baz //test_ref/occ/defn/baz //test_ref/occ/macro/baz //test_ref/doc/anysymbol/baz" machineGenerated="true" --><span class="function">baz</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/NSString //test_ref/occ/tdef/NSString //test_ref/occ/tag/NSString //test_ref/occ/struct/NSString //test_ref/occ/intf/NSString //test_ref/doc/anysymbol/NSString" machineGenerated="true" --><span class="type">NSString</span><!-- /a --> <span class="type">*</span>)<span class="param">aArg1</span> 
	        <!-- a logicalPath="//test_ref/occ/instm/Test_Of_optional_and_required/withFoo //test_ref/occ/clm/Test_Of_optional_and_required/withFoo //test_ref/occ/intfcm/Test_Of_optional_and_required/withFoo //test_ref/occ/intfm/Test_Of_optional_and_required/withFoo //test_ref/occ/func/withFoo //test_ref/occ/ftmplt/Test_Of_optional_and_required/withFoo //test_ref/occ/defn/withFoo //test_ref/occ/macro/withFoo //test_ref/doc/anysymbol/withFoo" machineGenerated="true" --><span class="function">withFoo</span><!-- /a -->:(<!-- a logicalPath="//test_ref/occ/cl/id //test_ref/occ/tdef/id //test_ref/occ/tag/id //test_ref/occ/struct/id //test_ref/occ/intf/id //test_ref/doc/anysymbol/id" machineGenerated="true" --><span class="type">id</span><!-- /a -->)<!-- a logicalPath="//test_ref/occ/econst/aFpp //test_ref/occ/data/Test_Of_optional_and_required/aFpp //test_ref/occ/data/aFpp //test_ref/occ/clconst/Test_Of_optional_and_required/aFpp " machineGenerated="true" --><span class="var">aFpp</span><!-- /a -->; 
END OF OBJECT


OBJECT: returnDefaults (HeaderDoc::Method)
	- (<!-- a logicalPath="//test_ref/occ/cl/Test_Of_optional_and_required //test_ref/occ/tdef/Test_Of_optional_and_required //test_ref/occ/tag/Test_Of_optional_and_required //test_ref/occ/struct/Test_Of_optional_and_required //test_ref/occ/intf/Test_Of_optional_and_required //test_ref/doc/anysymbol/Test_Of_optional_and_required" machineGenerated="true" --><span class="type">Test_Of_optional_and_required</span><!-- /a --> <span class="type">*</span>)<!-- a logicalPath="//test_ref/occ/econst/returnDefaults //test_ref/occ/data/Test_Of_optional_and_required/returnDefaults //test_ref/occ/data/returnDefaults //test_ref/occ/clconst/Test_Of_optional_and_required/returnDefaults " machineGenerated="true" --><span class="var">returnDefaults</span><!-- /a -->; 
END OF OBJECT



_$97|/Users/dg/headerdoc-techpubs/Modules/HeaderDoc//../../testsuite/parser_tests/ObjC_protocol_6.test$1|C$15|ObjC protocol 6$1|C$6|parser