FrT;@1|>>0|$15|HeaderDoc::Test%26|$4|CODE$7|COMMENT$7|CPPCODE$15|EXPECTED_RESULT$23|EXPECTED_RESULT_ALLDECS$7|FAILMSG$8|FILENAME$4|LANG$4|NAME$6|RESULT$14|RESULT_ALLDECS$7|SUBLANG$4|TYPE$1399|module html {
        
    /*! HTML element class */
    interface [
        GenerateConstructor,
        CustomPutFunction,
        CustomGetOwnPropertySlot,
        CustomCall,
        HasOverridingNameGetter,
        InterfaceUUID=18f9bd58-6bb3-4b5c-aa30-6da13adfc91e,
        ImplementationUUID=93e0407a-8380-4ff0-978d-f773f2dee6a3
    ] HTMLEmbedElement : HTMLElement {
                /*! attribute align */
                 attribute [ConvertNullToNullString] DOMString align;
#if defined(LANGUAGE_JAVASCRIPT)
                /*! attribute height */
                 attribute [ConvertNullToNullString] DOMString height;
#else
                 attribute [ConvertFromString] long height;
#endif
                /*! attribute name */
                 attribute [ConvertNullToNullString] DOMString name;
                /*! attribute src */
                 attribute [ConvertNullToNullString] DOMString src;
                /*! attribute type */
                 attribute [ConvertNullToNullString] DOMString type;
#if defined(LANGUAGE_JAVASCRIPT)
                /*! attribute width */
                 attribute [ConvertNullToNullString] DOMString width;
#else
                 attribute [ConvertFromString] long width;
#endif

#if !defined(LANGUAGE_COM)
#if ENABLE_SVG
        [SVGCheckSecurityDocument] SVGDocument getSVGDocument()
            raises(DOMException);
#endif
#endif
    };

}
$19|/*! HTML module */
$0|$65586|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 0
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 1
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/idl_1.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/idl_1.test
$parserState->{INMODULE} => 1
$parserState->{ISFORWARDDECLARATION} => 0
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => -1
$parserState->{categoryClass} => 
$parserState->{classNameFound} => 1
$parserState->{classtype} => module
$parserState->{forceClassDone} => 1
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 42
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => 
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 2
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 0
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => module
$parserState->{returntype} => module html 
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => html
$parserState->{sodtype} => 
$parserState->{sodtypeclasstoken} => module
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 0
$parserState->{storeDec} => 
$parserState->{typestring} => html
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 42
typelist: module
namelist: html
posstypes: 
value: 
returntype: 
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 0
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---module
+--- 
+---html
+--- 
+---{
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- HTML element class 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---    
|   +-*-interface (HAS STATE)
|   +--- 
|   +---[
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---GenerateConstructor
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomPutFunction
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomGetOwnPropertySlot
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomCall
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---HasOverridingNameGetter
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---InterfaceUUID
|   |   +---=
|   |   +---18f9bd58
|   |   +----
|   |   +---6bb3
|   |   +----
|   |   +---4b5c
|   |   +----
|   |   +---aa30
|   |   +----
|   |   +---6da13adfc91e
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---ImplementationUUID
|   |   +---=
|   |   +---93e0407a
|   |   +----
|   |   +---8380
|   |   +----
|   |   +---4ff0
|   |   +----
|   |   +---978d
|   |   +----
|   |   +---f773f2dee6a3
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +---]
|   +--- 
|   +---HTMLEmbedElement
|   +--- 
|   +---:
|   +--- 
|   +---HTMLElement
|   +--- 
|   +---{
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute align 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---align
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_JAVASCRIPT
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute height 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---height
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#else (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertFromString
|   |   |   +---]
|   |   +--- 
|   |   +---long
|   |   +--- 
|   |   +---height
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute name 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---name
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute src 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---src
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute type 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---type
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_JAVASCRIPT
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute width 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---width
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#else (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertFromString
|   |   |   +---]
|   |   +--- 
|   |   +---long
|   |   +--- 
|   |   +---width
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---!
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_COM
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---ENABLE_SVG
|   |   |   +---[ NEWLINE ]
|   |   +---        
|   |   +-*-[ (HAS STATE)
|   |   |   +---SVGCheckSecurityDocument
|   |   |   +---]
|   |   +--- 
|   |   +---SVGDocument
|   |   +--- 
|   |   +---getSVGDocument
|   |   +---(
|   |   |   +---)
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---raises
|   |   |   +---(
|   |   |   +---DOMException
|   |   |   +---)
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +---}
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---}
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: idl 1
APIUID: //test_ref/doc/header/idl_1.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: <p></p>
LONG ATTRIBUTES: <p></p>
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::CPPClass
    NAME: html
    APIUID: 
    ABSTRACT: ""
    DISCUSSION: "<p>HTML module "
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::CPPClass"
    MASTERENUM: ""
    APIREFSETUPDONE: ""
    TPCDONE: ""
    NOREGISTERUID: "1"
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Declared In:</b> <a href="../../index.html" target="_top">idl 1</a><br>
</p>
    LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::CPPClass
        NAME: HTMLEmbedElement
        APIUID: 
        ABSTRACT: ""
        DISCUSSION: "<p>HTML element class "
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: ""
        LINENUM: ""
        CLASS: "HeaderDoc::CPPClass"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "1"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p><b>Superclass:</b> <!-- a logicalPath="//test_ref/idl/cl/HTMLElement" -->HTMLElement<!-- /a --><br>
<b>Declared In:</b> <a href="../../index.html" target="_top">html</a><br>
</p>
        LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: align
            APIUID: //test_ref/idl/data/HTMLEmbedElement/align
            ABSTRACT: ""
            DISCUSSION: "<p>attribute align "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: height
            APIUID: //test_ref/idl/data/HTMLEmbedElement/height
            ABSTRACT: ""
            DISCUSSION: "<p>attribute height "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: name
            APIUID: //test_ref/idl/data/HTMLEmbedElement/name
            ABSTRACT: ""
            DISCUSSION: "<p>attribute name "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: src
            APIUID: //test_ref/idl/data/HTMLEmbedElement/src
            ABSTRACT: ""
            DISCUSSION: "<p>attribute src "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: type
            APIUID: //test_ref/idl/data/HTMLEmbedElement/type
            ABSTRACT: ""
            DISCUSSION: "<p>attribute type "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: width
            APIUID: //test_ref/idl/data/HTMLEmbedElement/width
            ABSTRACT: ""
            DISCUSSION: "<p>attribute width "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: html (HeaderDoc::CPPClass)
+---module
+--- 
+---html
+--- 
+---{
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- HTML element class 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---    
|   +-*-interface (HAS STATE)
|   +--- 
|   +---[
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---GenerateConstructor
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomPutFunction
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomGetOwnPropertySlot
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomCall
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---HasOverridingNameGetter
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---InterfaceUUID
|   |   +---=
|   |   +---18f9bd58
|   |   +----
|   |   +---6bb3
|   |   +----
|   |   +---4b5c
|   |   +----
|   |   +---aa30
|   |   +----
|   |   +---6da13adfc91e
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---ImplementationUUID
|   |   +---=
|   |   +---93e0407a
|   |   +----
|   |   +---8380
|   |   +----
|   |   +---4ff0
|   |   +----
|   |   +---978d
|   |   +----
|   |   +---f773f2dee6a3
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +---]
|   +--- 
|   +---HTMLEmbedElement
|   +--- 
|   +---:
|   +--- 
|   +---HTMLElement
|   +--- 
|   +---{
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute align 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---align
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_JAVASCRIPT
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute height 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---height
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#else (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertFromString
|   |   |   +---]
|   |   +--- 
|   |   +---long
|   |   +--- 
|   |   +---height
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute name 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---name
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute src 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---src
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute type 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---type
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_JAVASCRIPT
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute width 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---width
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#else (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertFromString
|   |   |   +---]
|   |   +--- 
|   |   +---long
|   |   +--- 
|   |   +---width
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---!
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_COM
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---ENABLE_SVG
|   |   |   +---[ NEWLINE ]
|   |   +---        
|   |   +-*-[ (HAS STATE)
|   |   |   +---SVGCheckSecurityDocument
|   |   |   +---]
|   |   +--- 
|   |   +---SVGDocument
|   |   +--- 
|   |   +---getSVGDocument
|   |   +---(
|   |   |   +---)
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---raises
|   |   |   +---(
|   |   |   +---DOMException
|   |   |   +---)
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +---}
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---}
+---[ NEWLINE ]
END OF OBJECT


OBJECT: HTMLEmbedElement (HeaderDoc::CPPClass)
+-*-interface (HAS STATE)
+--- 
+---[
|   +---[ NEWLINE ]
|   +---        
|   +---GenerateConstructor
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---CustomPutFunction
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---CustomGetOwnPropertySlot
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---CustomCall
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---HasOverridingNameGetter
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---InterfaceUUID
|   +---=
|   +---18f9bd58
|   +----
|   +---6bb3
|   +----
|   +---4b5c
|   +----
|   +---aa30
|   +----
|   +---6da13adfc91e
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---ImplementationUUID
|   +---=
|   +---93e0407a
|   +----
|   +---8380
|   +----
|   +---4ff0
|   +----
|   +---978d
|   +----
|   +---f773f2dee6a3
|   +---[ NEWLINE ]
|   +---    
|   +---]
+--- 
+---HTMLEmbedElement
+--- 
+---:
+--- 
+---HTMLElement
+--- 
+---{
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute align 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---align
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#if (HAS STATE)
|   |   +--- 
|   |   +---defined
|   |   +---(
|   |   +---LANGUAGE_JAVASCRIPT
|   |   +---)
|   |   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute height 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---height
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertFromString
|   |   +---]
|   +--- 
|   +---long
|   +--- 
|   +---height
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute name 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---name
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute src 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---src
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute type 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---type
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#if (HAS STATE)
|   |   +--- 
|   |   +---defined
|   |   +---(
|   |   +---LANGUAGE_JAVASCRIPT
|   |   +---)
|   |   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute width 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---width
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertFromString
|   |   +---]
|   +--- 
|   +---long
|   +--- 
|   +---width
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +-*-#if (HAS STATE)
|   |   +--- 
|   |   +---!
|   |   +---defined
|   |   +---(
|   |   +---LANGUAGE_COM
|   |   +---)
|   |   +---[ NEWLINE ]
|   +-*-#if (HAS STATE)
|   |   +--- 
|   |   +---ENABLE_SVG
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-[ (HAS STATE)
|   |   +---SVGCheckSecurityDocument
|   |   +---]
|   +--- 
|   +---SVGDocument
|   +--- 
|   +---getSVGDocument
|   +---(
|   |   +---)
|   +---[ NEWLINE ]
|   +---            
|   +---raises
|   |   +---(
|   |   +---DOMException
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---    
|   +---}
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: align (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---align
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute height 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---height
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---height
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute name 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---name
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute src 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: height (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---height
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---height
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute name 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---name
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute src 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: name (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---name
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute src 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: src (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: type (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: width (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: html (HeaderDoc::CPPClass)
	<span class="keyword">module</span> <!-- a logicalPath="//test_ref/idl/cl/html //test_ref/idl/tdef/html //test_ref/idl/tag/html //test_ref/idl/econst/html //test_ref/idl/struct/html //test_ref/idl/clconst/html //test_ref/idl/intf/html" --><span class="type">html</span><!-- /a --> {  
	    <span class="comment">/*! HTML element class */</span>
	    <span class="keyword">interface</span>         <!-- a logicalPath="//test_ref/idl/cl/HTMLEmbedElement //test_ref/idl/tdef/HTMLEmbedElement //test_ref/idl/tag/HTMLEmbedElement //test_ref/idl/econst/HTMLEmbedElement //test_ref/idl/struct/HTMLEmbedElement //test_ref/idl/clconst/HTMLEmbedElement //test_ref/idl/intf/HTMLEmbedElement" --><span class="type">HTMLEmbedElement</span><!-- /a --> : <!-- a logicalPath="//test_ref/idl/cl/HTMLElement //test_ref/idl/tdef/HTMLElement //test_ref/idl/tag/HTMLElement //test_ref/idl/econst/HTMLElement //test_ref/idl/struct/HTMLElement //test_ref/idl/clconst/HTMLElement //test_ref/idl/intf/HTMLElement" --><span class="type">HTMLElement</span><!-- /a --> { 
	        <span class="comment">/*! attribute align */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/align //test_ref/idl/data/align" --><span class="var">align</span><!-- /a -->; 
	        <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_JAVASCRIPT //test_ref/idl/tdef/LANGUAGE_JAVASCRIPT //test_ref/idl/tag/LANGUAGE_JAVASCRIPT //test_ref/idl/econst/LANGUAGE_JAVASCRIPT //test_ref/idl/struct/LANGUAGE_JAVASCRIPT //test_ref/idl/data/LANGUAGE_JAVASCRIPT //test_ref/idl/clconst/LANGUAGE_JAVASCRIPT //test_ref/idl/intf/LANGUAGE_JAVASCRIPT //test_ref/idl/instm/LANGUAGE_JAVASCRIPT //test_ref/idl/clm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfcm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfm/LANGUAGE_JAVASCRIPT //test_ref/idl/func/LANGUAGE_JAVASCRIPT //test_ref/idl/ftmplt/LANGUAGE_JAVASCRIPT //test_ref/idl/defn/LANGUAGE_JAVASCRIPT //test_ref/idl/macro/LANGUAGE_JAVASCRIPT //test_ref/doc/com/intfm/LANGUAGE_JAVASCRIPT" --><span class="preprocessor">LANGUAGE_JAVASCRIPT</span><!-- /a --><span class="preprocessor">)</span> 
	        <span class="comment">/*! attribute height */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
	        <span class="">#else</span> 
	        <span class="keyword">attribute</span> <span class="keyword">long</span> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
	        <span class="">#endif</span>  
	        <span class="comment">/*! attribute name */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/name //test_ref/idl/data/name" --><span class="var">name</span><!-- /a -->; 
	        <span class="comment">/*! attribute src */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/src //test_ref/idl/data/src" --><span class="var">src</span><!-- /a -->; 
	        <span class="comment">/*! attribute type */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/type //test_ref/idl/data/type" --><span class="var">type</span><!-- /a -->; 
	        <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_JAVASCRIPT //test_ref/idl/tdef/LANGUAGE_JAVASCRIPT //test_ref/idl/tag/LANGUAGE_JAVASCRIPT //test_ref/idl/econst/LANGUAGE_JAVASCRIPT //test_ref/idl/struct/LANGUAGE_JAVASCRIPT //test_ref/idl/data/LANGUAGE_JAVASCRIPT //test_ref/idl/clconst/LANGUAGE_JAVASCRIPT //test_ref/idl/intf/LANGUAGE_JAVASCRIPT //test_ref/idl/instm/LANGUAGE_JAVASCRIPT //test_ref/idl/clm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfcm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfm/LANGUAGE_JAVASCRIPT //test_ref/idl/func/LANGUAGE_JAVASCRIPT //test_ref/idl/ftmplt/LANGUAGE_JAVASCRIPT //test_ref/idl/defn/LANGUAGE_JAVASCRIPT //test_ref/idl/macro/LANGUAGE_JAVASCRIPT //test_ref/doc/com/intfm/LANGUAGE_JAVASCRIPT" --><span class="preprocessor">LANGUAGE_JAVASCRIPT</span><!-- /a --><span class="preprocessor">)</span> 
	        <span class="comment">/*! attribute width */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
	        <span class="">#else</span> 
	        <span class="keyword">attribute</span> <span class="keyword">long</span> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
	        <span class="">#endif</span>   
	        <span class="">#if</span><span class="preprocessor"> </span><span class="preprocessor">!</span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_COM //test_ref/idl/tdef/LANGUAGE_COM //test_ref/idl/tag/LANGUAGE_COM //test_ref/idl/econst/LANGUAGE_COM //test_ref/idl/struct/LANGUAGE_COM //test_ref/idl/data/LANGUAGE_COM //test_ref/idl/clconst/LANGUAGE_COM //test_ref/idl/intf/LANGUAGE_COM //test_ref/idl/instm/LANGUAGE_COM //test_ref/idl/clm/LANGUAGE_COM //test_ref/idl/intfcm/LANGUAGE_COM //test_ref/idl/intfm/LANGUAGE_COM //test_ref/idl/func/LANGUAGE_COM //test_ref/idl/ftmplt/LANGUAGE_COM //test_ref/idl/defn/LANGUAGE_COM //test_ref/idl/macro/LANGUAGE_COM //test_ref/doc/com/intfm/LANGUAGE_COM" --><span class="preprocessor">LANGUAGE_COM</span><!-- /a --><span class="preprocessor">)</span> 
	        <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/ENABLE_SVG //test_ref/idl/tdef/ENABLE_SVG //test_ref/idl/tag/ENABLE_SVG //test_ref/idl/econst/ENABLE_SVG //test_ref/idl/struct/ENABLE_SVG //test_ref/idl/data/ENABLE_SVG //test_ref/idl/clconst/ENABLE_SVG //test_ref/idl/intf/ENABLE_SVG //test_ref/idl/instm/ENABLE_SVG //test_ref/idl/clm/ENABLE_SVG //test_ref/idl/intfcm/ENABLE_SVG //test_ref/idl/intfm/ENABLE_SVG //test_ref/idl/func/ENABLE_SVG //test_ref/idl/ftmplt/ENABLE_SVG //test_ref/idl/defn/ENABLE_SVG //test_ref/idl/macro/ENABLE_SVG //test_ref/doc/com/intfm/ENABLE_SVG" --><span class="preprocessor">ENABLE_SVG</span><!-- /a --> 
	        <!-- a logicalPath="//test_ref/idl/cl/SVGDocument //test_ref/idl/tdef/SVGDocument //test_ref/idl/tag/SVGDocument //test_ref/idl/econst/SVGDocument //test_ref/idl/struct/SVGDocument //test_ref/idl/clconst/SVGDocument //test_ref/idl/intf/SVGDocument" --><span class="type">SVGDocument</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/instm/getSVGDocument //test_ref/idl/clm/getSVGDocument //test_ref/idl/intfcm/getSVGDocument //test_ref/idl/intfm/getSVGDocument //test_ref/idl/func/getSVGDocument //test_ref/idl/ftmplt/getSVGDocument //test_ref/idl/defn/getSVGDocument //test_ref/idl/macro/getSVGDocument" --><span class="function">getSVGDocument</span><!-- /a -->() <span class="keyword">raises</span>(<!-- a logicalPath="//test_ref/idl/cl/DOMException //test_ref/idl/tdef/DOMException //test_ref/idl/tag/DOMException //test_ref/idl/econst/DOMException //test_ref/idl/struct/DOMException //test_ref/idl/clconst/DOMException //test_ref/idl/intf/DOMException" --><span class="type">DOMException</span><!-- /a -->); 
	        <span class="">#endif</span>  
	        <span class="">#endif</span>  
	        };  
	} 
END OF OBJECT


OBJECT: HTMLEmbedElement (HeaderDoc::CPPClass)
	<span class="keyword">interface</span>         <!-- a logicalPath="//test_ref/idl/cl/HTMLEmbedElement //test_ref/idl/tdef/HTMLEmbedElement //test_ref/idl/tag/HTMLEmbedElement //test_ref/idl/econst/HTMLEmbedElement //test_ref/idl/struct/HTMLEmbedElement //test_ref/idl/clconst/HTMLEmbedElement //test_ref/idl/intf/HTMLEmbedElement" --><span class="type">HTMLEmbedElement</span><!-- /a --> : <!-- a logicalPath="//test_ref/idl/cl/HTMLElement //test_ref/idl/tdef/HTMLElement //test_ref/idl/tag/HTMLElement //test_ref/idl/econst/HTMLElement //test_ref/idl/struct/HTMLElement //test_ref/idl/clconst/HTMLElement //test_ref/idl/intf/HTMLElement" --><span class="type">HTMLElement</span><!-- /a --> { 
	    <span class="comment">/*! attribute align */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/align //test_ref/idl/data/align" --><span class="var">align</span><!-- /a -->; 
	    <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_JAVASCRIPT //test_ref/idl/tdef/LANGUAGE_JAVASCRIPT //test_ref/idl/tag/LANGUAGE_JAVASCRIPT //test_ref/idl/econst/LANGUAGE_JAVASCRIPT //test_ref/idl/struct/LANGUAGE_JAVASCRIPT //test_ref/idl/data/LANGUAGE_JAVASCRIPT //test_ref/idl/clconst/LANGUAGE_JAVASCRIPT //test_ref/idl/intf/LANGUAGE_JAVASCRIPT //test_ref/idl/instm/LANGUAGE_JAVASCRIPT //test_ref/idl/clm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfcm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfm/LANGUAGE_JAVASCRIPT //test_ref/idl/func/LANGUAGE_JAVASCRIPT //test_ref/idl/ftmplt/LANGUAGE_JAVASCRIPT //test_ref/idl/defn/LANGUAGE_JAVASCRIPT //test_ref/idl/macro/LANGUAGE_JAVASCRIPT //test_ref/doc/com/intfm/LANGUAGE_JAVASCRIPT" --><span class="preprocessor">LANGUAGE_JAVASCRIPT</span><!-- /a --><span class="preprocessor">)</span> 
	    <span class="comment">/*! attribute height */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
	    <span class="">#else</span> 
	    <span class="keyword">attribute</span> <span class="keyword">long</span> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
	    <span class="">#endif</span>  
	    <span class="comment">/*! attribute name */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/name //test_ref/idl/data/name" --><span class="var">name</span><!-- /a -->; 
	    <span class="comment">/*! attribute src */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/src //test_ref/idl/data/src" --><span class="var">src</span><!-- /a -->; 
	    <span class="comment">/*! attribute type */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/type //test_ref/idl/data/type" --><span class="var">type</span><!-- /a -->; 
	    <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_JAVASCRIPT //test_ref/idl/tdef/LANGUAGE_JAVASCRIPT //test_ref/idl/tag/LANGUAGE_JAVASCRIPT //test_ref/idl/econst/LANGUAGE_JAVASCRIPT //test_ref/idl/struct/LANGUAGE_JAVASCRIPT //test_ref/idl/data/LANGUAGE_JAVASCRIPT //test_ref/idl/clconst/LANGUAGE_JAVASCRIPT //test_ref/idl/intf/LANGUAGE_JAVASCRIPT //test_ref/idl/instm/LANGUAGE_JAVASCRIPT //test_ref/idl/clm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfcm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfm/LANGUAGE_JAVASCRIPT //test_ref/idl/func/LANGUAGE_JAVASCRIPT //test_ref/idl/ftmplt/LANGUAGE_JAVASCRIPT //test_ref/idl/defn/LANGUAGE_JAVASCRIPT //test_ref/idl/macro/LANGUAGE_JAVASCRIPT //test_ref/doc/com/intfm/LANGUAGE_JAVASCRIPT" --><span class="preprocessor">LANGUAGE_JAVASCRIPT</span><!-- /a --><span class="preprocessor">)</span> 
	    <span class="comment">/*! attribute width */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
	    <span class="">#else</span> 
	    <span class="keyword">attribute</span> <span class="keyword">long</span> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
	    <span class="">#endif</span>   
	    <span class="">#if</span><span class="preprocessor"> </span><span class="preprocessor">!</span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_COM //test_ref/idl/tdef/LANGUAGE_COM //test_ref/idl/tag/LANGUAGE_COM //test_ref/idl/econst/LANGUAGE_COM //test_ref/idl/struct/LANGUAGE_COM //test_ref/idl/data/LANGUAGE_COM //test_ref/idl/clconst/LANGUAGE_COM //test_ref/idl/intf/LANGUAGE_COM //test_ref/idl/instm/LANGUAGE_COM //test_ref/idl/clm/LANGUAGE_COM //test_ref/idl/intfcm/LANGUAGE_COM //test_ref/idl/intfm/LANGUAGE_COM //test_ref/idl/func/LANGUAGE_COM //test_ref/idl/ftmplt/LANGUAGE_COM //test_ref/idl/defn/LANGUAGE_COM //test_ref/idl/macro/LANGUAGE_COM //test_ref/doc/com/intfm/LANGUAGE_COM" --><span class="preprocessor">LANGUAGE_COM</span><!-- /a --><span class="preprocessor">)</span> 
	    <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/ENABLE_SVG //test_ref/idl/tdef/ENABLE_SVG //test_ref/idl/tag/ENABLE_SVG //test_ref/idl/econst/ENABLE_SVG //test_ref/idl/struct/ENABLE_SVG //test_ref/idl/data/ENABLE_SVG //test_ref/idl/clconst/ENABLE_SVG //test_ref/idl/intf/ENABLE_SVG //test_ref/idl/instm/ENABLE_SVG //test_ref/idl/clm/ENABLE_SVG //test_ref/idl/intfcm/ENABLE_SVG //test_ref/idl/intfm/ENABLE_SVG //test_ref/idl/func/ENABLE_SVG //test_ref/idl/ftmplt/ENABLE_SVG //test_ref/idl/defn/ENABLE_SVG //test_ref/idl/macro/ENABLE_SVG //test_ref/doc/com/intfm/ENABLE_SVG" --><span class="preprocessor">ENABLE_SVG</span><!-- /a --> 
	    <!-- a logicalPath="//test_ref/idl/cl/SVGDocument //test_ref/idl/tdef/SVGDocument //test_ref/idl/tag/SVGDocument //test_ref/idl/econst/SVGDocument //test_ref/idl/struct/SVGDocument //test_ref/idl/clconst/SVGDocument //test_ref/idl/intf/SVGDocument" --><span class="type">SVGDocument</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/instm/getSVGDocument //test_ref/idl/clm/getSVGDocument //test_ref/idl/intfcm/getSVGDocument //test_ref/idl/intfm/getSVGDocument //test_ref/idl/func/getSVGDocument //test_ref/idl/ftmplt/getSVGDocument //test_ref/idl/defn/getSVGDocument //test_ref/idl/macro/getSVGDocument" --><span class="function">getSVGDocument</span><!-- /a -->() <span class="keyword">raises</span>(<!-- a logicalPath="//test_ref/idl/cl/DOMException //test_ref/idl/tdef/DOMException //test_ref/idl/tag/DOMException //test_ref/idl/econst/DOMException //test_ref/idl/struct/DOMException //test_ref/idl/clconst/DOMException //test_ref/idl/intf/DOMException" --><span class="type">DOMException</span><!-- /a -->); 
	    <span class="">#endif</span>  
	    <span class="">#endif</span>  
	}; 
END OF OBJECT


OBJECT: align (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/align //test_ref/idl/data/align" --><span class="var">align</span><!-- /a -->; 
END OF OBJECT


OBJECT: height (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
END OF OBJECT


OBJECT: name (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/name //test_ref/idl/data/name" --><span class="var">name</span><!-- /a -->; 
END OF OBJECT


OBJECT: src (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/src //test_ref/idl/data/src" --><span class="var">src</span><!-- /a -->; 
END OF OBJECT


OBJECT: type (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/type //test_ref/idl/data/type" --><span class="var">type</span><!-- /a -->; 
END OF OBJECT


OBJECT: width (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
END OF OBJECT



$84974|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 0
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 1
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/idl_1.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/idl_1.test
$parserState->{INMODULE} => 1
$parserState->{ISFORWARDDECLARATION} => 0
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => -1
$parserState->{categoryClass} => 
$parserState->{classNameFound} => 1
$parserState->{classtype} => module
$parserState->{forceClassDone} => 1
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 42
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => 
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 2
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 0
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => module
$parserState->{returntype} => module html 
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => html
$parserState->{sodtype} => 
$parserState->{sodtypeclasstoken} => module
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 0
$parserState->{storeDec} => 
$parserState->{typestring} => html
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 42
typelist: module
namelist: html
posstypes: 
value: 
returntype: 
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 0
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---module
+--- 
+---html
+--- 
+---{
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- HTML element class 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---    
|   +-*-interface (HAS STATE)
|   +--- 
|   +---[
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---GenerateConstructor
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomPutFunction
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomGetOwnPropertySlot
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomCall
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---HasOverridingNameGetter
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---InterfaceUUID
|   |   +---=
|   |   +---18f9bd58
|   |   +----
|   |   +---6bb3
|   |   +----
|   |   +---4b5c
|   |   +----
|   |   +---aa30
|   |   +----
|   |   +---6da13adfc91e
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---ImplementationUUID
|   |   +---=
|   |   +---93e0407a
|   |   +----
|   |   +---8380
|   |   +----
|   |   +---4ff0
|   |   +----
|   |   +---978d
|   |   +----
|   |   +---f773f2dee6a3
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +---]
|   +--- 
|   +---HTMLEmbedElement
|   +--- 
|   +---:
|   +--- 
|   +---HTMLElement
|   +--- 
|   +---{
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute align 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---align
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_JAVASCRIPT
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute height 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---height
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#else (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertFromString
|   |   |   +---]
|   |   +--- 
|   |   +---long
|   |   +--- 
|   |   +---height
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute name 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---name
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute src 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---src
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute type 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---type
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_JAVASCRIPT
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute width 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---width
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#else (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertFromString
|   |   |   +---]
|   |   +--- 
|   |   +---long
|   |   +--- 
|   |   +---width
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---!
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_COM
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---ENABLE_SVG
|   |   |   +---[ NEWLINE ]
|   |   +---        
|   |   +-*-[ (HAS STATE)
|   |   |   +---SVGCheckSecurityDocument
|   |   |   +---]
|   |   +--- 
|   |   +---SVGDocument
|   |   +--- 
|   |   +---getSVGDocument
|   |   +---(
|   |   |   +---)
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---raises
|   |   |   +---(
|   |   |   +---DOMException
|   |   |   +---)
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +---}
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---}
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: idl 1
APIUID: //test_ref/doc/header/idl_1.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: <p></p>
LONG ATTRIBUTES: <p></p>
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::CPPClass
    NAME: html
    APIUID: 
    ABSTRACT: ""
    DISCUSSION: "<p>HTML module "
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::CPPClass"
    MASTERENUM: ""
    APIREFSETUPDONE: ""
    TPCDONE: ""
    NOREGISTERUID: "1"
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Declared In:</b> <a href="../../index.html" target="_top">idl 1</a><br>
</p>
    LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::CPPClass
        NAME: HTMLEmbedElement
        APIUID: 
        ABSTRACT: ""
        DISCUSSION: "<p>HTML element class "
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: ""
        LINENUM: ""
        CLASS: "HeaderDoc::CPPClass"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "1"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p><b>Superclass:</b> <!-- a logicalPath="//test_ref/idl/cl/HTMLElement" -->HTMLElement<!-- /a --><br>
<b>Declared In:</b> <a href="../../index.html" target="_top">html</a><br>
</p>
        LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Function
            NAME: getSVGDocument
            APIUID: //test_ref/idl/instm/HTMLEmbedElement/getSVGDocument/SVGDocument/()
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: " SVGDocument"
            LINENUM: ""
            CLASS: "HeaderDoc::Function"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: align
            APIUID: //test_ref/idl/data/HTMLEmbedElement/align
            ABSTRACT: ""
            DISCUSSION: "<p>attribute align "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: height
            APIUID: //test_ref/idl/data/HTMLEmbedElement/height
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: height
            APIUID: //test_ref/idl/data/HTMLEmbedElement/height_DONTLINK_0
            ABSTRACT: ""
            DISCUSSION: "<p>attribute height "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: height
            APIUID: //test_ref/idl/data/HTMLEmbedElement/height_DONTLINK_1
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute long"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: name
            APIUID: //test_ref/idl/data/HTMLEmbedElement/name
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: name
            APIUID: //test_ref/idl/data/HTMLEmbedElement/name_DONTLINK_0
            ABSTRACT: ""
            DISCUSSION: "<p>attribute name "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: src
            APIUID: //test_ref/idl/data/HTMLEmbedElement/src
            ABSTRACT: ""
            DISCUSSION: "<p>attribute src "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: type
            APIUID: //test_ref/idl/data/HTMLEmbedElement/type
            ABSTRACT: ""
            DISCUSSION: "<p>attribute type "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: width
            APIUID: //test_ref/idl/data/HTMLEmbedElement/width
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: width
            APIUID: //test_ref/idl/data/HTMLEmbedElement/width_DONTLINK_0
            ABSTRACT: ""
            DISCUSSION: "<p>attribute width "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: width
            APIUID: //test_ref/idl/data/HTMLEmbedElement/width_DONTLINK_1
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute long"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: html (HeaderDoc::CPPClass)
+---module
+--- 
+---html
+--- 
+---{
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- HTML element class 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---    
|   +-*-interface (HAS STATE)
|   +--- 
|   +---[
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---GenerateConstructor
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomPutFunction
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomGetOwnPropertySlot
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomCall
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---HasOverridingNameGetter
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---InterfaceUUID
|   |   +---=
|   |   +---18f9bd58
|   |   +----
|   |   +---6bb3
|   |   +----
|   |   +---4b5c
|   |   +----
|   |   +---aa30
|   |   +----
|   |   +---6da13adfc91e
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---ImplementationUUID
|   |   +---=
|   |   +---93e0407a
|   |   +----
|   |   +---8380
|   |   +----
|   |   +---4ff0
|   |   +----
|   |   +---978d
|   |   +----
|   |   +---f773f2dee6a3
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +---]
|   +--- 
|   +---HTMLEmbedElement
|   +--- 
|   +---:
|   +--- 
|   +---HTMLElement
|   +--- 
|   +---{
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute align 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---align
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_JAVASCRIPT
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute height 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---height
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#else (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertFromString
|   |   |   +---]
|   |   +--- 
|   |   +---long
|   |   +--- 
|   |   +---height
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute name 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---name
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute src 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---src
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute type 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---type
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_JAVASCRIPT
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute width 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---width
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#else (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertFromString
|   |   |   +---]
|   |   +--- 
|   |   +---long
|   |   +--- 
|   |   +---width
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---!
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_COM
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---ENABLE_SVG
|   |   |   +---[ NEWLINE ]
|   |   +---        
|   |   +-*-[ (HAS STATE)
|   |   |   +---SVGCheckSecurityDocument
|   |   |   +---]
|   |   +--- 
|   |   +---SVGDocument
|   |   +--- 
|   |   +---getSVGDocument
|   |   +---(
|   |   |   +---)
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---raises
|   |   |   +---(
|   |   |   +---DOMException
|   |   |   +---)
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +---}
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---}
+---[ NEWLINE ]
END OF OBJECT


OBJECT: HTMLEmbedElement (HeaderDoc::CPPClass)
+-*-interface (HAS STATE)
+--- 
+---[
|   +---[ NEWLINE ]
|   +---        
|   +---GenerateConstructor
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---CustomPutFunction
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---CustomGetOwnPropertySlot
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---CustomCall
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---HasOverridingNameGetter
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---InterfaceUUID
|   +---=
|   +---18f9bd58
|   +----
|   +---6bb3
|   +----
|   +---4b5c
|   +----
|   +---aa30
|   +----
|   +---6da13adfc91e
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---ImplementationUUID
|   +---=
|   +---93e0407a
|   +----
|   +---8380
|   +----
|   +---4ff0
|   +----
|   +---978d
|   +----
|   +---f773f2dee6a3
|   +---[ NEWLINE ]
|   +---    
|   +---]
+--- 
+---HTMLEmbedElement
+--- 
+---:
+--- 
+---HTMLElement
+--- 
+---{
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute align 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---align
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#if (HAS STATE)
|   |   +--- 
|   |   +---defined
|   |   +---(
|   |   +---LANGUAGE_JAVASCRIPT
|   |   +---)
|   |   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute height 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---height
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertFromString
|   |   +---]
|   +--- 
|   +---long
|   +--- 
|   +---height
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute name 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---name
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute src 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---src
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute type 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---type
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#if (HAS STATE)
|   |   +--- 
|   |   +---defined
|   |   +---(
|   |   +---LANGUAGE_JAVASCRIPT
|   |   +---)
|   |   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute width 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---width
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertFromString
|   |   +---]
|   +--- 
|   +---long
|   +--- 
|   +---width
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +-*-#if (HAS STATE)
|   |   +--- 
|   |   +---!
|   |   +---defined
|   |   +---(
|   |   +---LANGUAGE_COM
|   |   +---)
|   |   +---[ NEWLINE ]
|   +-*-#if (HAS STATE)
|   |   +--- 
|   |   +---ENABLE_SVG
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-[ (HAS STATE)
|   |   +---SVGCheckSecurityDocument
|   |   +---]
|   +--- 
|   +---SVGDocument
|   +--- 
|   +---getSVGDocument
|   +---(
|   |   +---)
|   +---[ NEWLINE ]
|   +---            
|   +---raises
|   |   +---(
|   |   +---DOMException
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---    
|   +---}
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: getSVGDocument (HeaderDoc::Function)
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: align (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---align
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute height 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---height
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---height
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute name 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---name
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute src 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: height (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---height
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---height
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute name 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---name
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute src 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: height (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---height
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---height
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute name 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---name
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute src 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: height (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---height
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute name 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---name
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute src 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: name (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---name
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute src 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: name (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---name
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute src 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: src (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: type (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: width (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: width (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: width (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: html (HeaderDoc::CPPClass)
	<span class="keyword">module</span> <!-- a logicalPath="//test_ref/idl/cl/html //test_ref/idl/tdef/html //test_ref/idl/tag/html //test_ref/idl/econst/html //test_ref/idl/struct/html //test_ref/idl/clconst/html //test_ref/idl/intf/html" --><span class="type">html</span><!-- /a --> {  
	    <span class="comment">/*! HTML element class */</span>
	    <span class="keyword">interface</span>         <!-- a logicalPath="//test_ref/idl/cl/HTMLEmbedElement //test_ref/idl/tdef/HTMLEmbedElement //test_ref/idl/tag/HTMLEmbedElement //test_ref/idl/econst/HTMLEmbedElement //test_ref/idl/struct/HTMLEmbedElement //test_ref/idl/clconst/HTMLEmbedElement //test_ref/idl/intf/HTMLEmbedElement" --><span class="type">HTMLEmbedElement</span><!-- /a --> : <!-- a logicalPath="//test_ref/idl/cl/HTMLElement //test_ref/idl/tdef/HTMLElement //test_ref/idl/tag/HTMLElement //test_ref/idl/econst/HTMLElement //test_ref/idl/struct/HTMLElement //test_ref/idl/clconst/HTMLElement //test_ref/idl/intf/HTMLElement" --><span class="type">HTMLElement</span><!-- /a --> { 
	        <span class="comment">/*! attribute align */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/align //test_ref/idl/data/align" --><span class="var">align</span><!-- /a -->; 
	        <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_JAVASCRIPT //test_ref/idl/tdef/LANGUAGE_JAVASCRIPT //test_ref/idl/tag/LANGUAGE_JAVASCRIPT //test_ref/idl/econst/LANGUAGE_JAVASCRIPT //test_ref/idl/struct/LANGUAGE_JAVASCRIPT //test_ref/idl/data/LANGUAGE_JAVASCRIPT //test_ref/idl/clconst/LANGUAGE_JAVASCRIPT //test_ref/idl/intf/LANGUAGE_JAVASCRIPT //test_ref/idl/instm/LANGUAGE_JAVASCRIPT //test_ref/idl/clm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfcm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfm/LANGUAGE_JAVASCRIPT //test_ref/idl/func/LANGUAGE_JAVASCRIPT //test_ref/idl/ftmplt/LANGUAGE_JAVASCRIPT //test_ref/idl/defn/LANGUAGE_JAVASCRIPT //test_ref/idl/macro/LANGUAGE_JAVASCRIPT //test_ref/doc/com/intfm/LANGUAGE_JAVASCRIPT" --><span class="preprocessor">LANGUAGE_JAVASCRIPT</span><!-- /a --><span class="preprocessor">)</span> 
	        <span class="comment">/*! attribute height */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
	        <span class="">#else</span> 
	        <span class="keyword">attribute</span> <span class="keyword">long</span> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
	        <span class="">#endif</span>  
	        <span class="comment">/*! attribute name */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/name //test_ref/idl/data/name" --><span class="var">name</span><!-- /a -->; 
	        <span class="comment">/*! attribute src */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/src //test_ref/idl/data/src" --><span class="var">src</span><!-- /a -->; 
	        <span class="comment">/*! attribute type */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/type //test_ref/idl/data/type" --><span class="var">type</span><!-- /a -->; 
	        <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_JAVASCRIPT //test_ref/idl/tdef/LANGUAGE_JAVASCRIPT //test_ref/idl/tag/LANGUAGE_JAVASCRIPT //test_ref/idl/econst/LANGUAGE_JAVASCRIPT //test_ref/idl/struct/LANGUAGE_JAVASCRIPT //test_ref/idl/data/LANGUAGE_JAVASCRIPT //test_ref/idl/clconst/LANGUAGE_JAVASCRIPT //test_ref/idl/intf/LANGUAGE_JAVASCRIPT //test_ref/idl/instm/LANGUAGE_JAVASCRIPT //test_ref/idl/clm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfcm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfm/LANGUAGE_JAVASCRIPT //test_ref/idl/func/LANGUAGE_JAVASCRIPT //test_ref/idl/ftmplt/LANGUAGE_JAVASCRIPT //test_ref/idl/defn/LANGUAGE_JAVASCRIPT //test_ref/idl/macro/LANGUAGE_JAVASCRIPT //test_ref/doc/com/intfm/LANGUAGE_JAVASCRIPT" --><span class="preprocessor">LANGUAGE_JAVASCRIPT</span><!-- /a --><span class="preprocessor">)</span> 
	        <span class="comment">/*! attribute width */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
	        <span class="">#else</span> 
	        <span class="keyword">attribute</span> <span class="keyword">long</span> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
	        <span class="">#endif</span>   
	        <span class="">#if</span><span class="preprocessor"> </span><span class="preprocessor">!</span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_COM //test_ref/idl/tdef/LANGUAGE_COM //test_ref/idl/tag/LANGUAGE_COM //test_ref/idl/econst/LANGUAGE_COM //test_ref/idl/struct/LANGUAGE_COM //test_ref/idl/data/LANGUAGE_COM //test_ref/idl/clconst/LANGUAGE_COM //test_ref/idl/intf/LANGUAGE_COM //test_ref/idl/instm/LANGUAGE_COM //test_ref/idl/clm/LANGUAGE_COM //test_ref/idl/intfcm/LANGUAGE_COM //test_ref/idl/intfm/LANGUAGE_COM //test_ref/idl/func/LANGUAGE_COM //test_ref/idl/ftmplt/LANGUAGE_COM //test_ref/idl/defn/LANGUAGE_COM //test_ref/idl/macro/LANGUAGE_COM //test_ref/doc/com/intfm/LANGUAGE_COM" --><span class="preprocessor">LANGUAGE_COM</span><!-- /a --><span class="preprocessor">)</span> 
	        <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/ENABLE_SVG //test_ref/idl/tdef/ENABLE_SVG //test_ref/idl/tag/ENABLE_SVG //test_ref/idl/econst/ENABLE_SVG //test_ref/idl/struct/ENABLE_SVG //test_ref/idl/data/ENABLE_SVG //test_ref/idl/clconst/ENABLE_SVG //test_ref/idl/intf/ENABLE_SVG //test_ref/idl/instm/ENABLE_SVG //test_ref/idl/clm/ENABLE_SVG //test_ref/idl/intfcm/ENABLE_SVG //test_ref/idl/intfm/ENABLE_SVG //test_ref/idl/func/ENABLE_SVG //test_ref/idl/ftmplt/ENABLE_SVG //test_ref/idl/defn/ENABLE_SVG //test_ref/idl/macro/ENABLE_SVG //test_ref/doc/com/intfm/ENABLE_SVG" --><span class="preprocessor">ENABLE_SVG</span><!-- /a --> 
	        <!-- a logicalPath="//test_ref/idl/cl/SVGDocument //test_ref/idl/tdef/SVGDocument //test_ref/idl/tag/SVGDocument //test_ref/idl/econst/SVGDocument //test_ref/idl/struct/SVGDocument //test_ref/idl/clconst/SVGDocument //test_ref/idl/intf/SVGDocument" --><span class="type">SVGDocument</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/instm/getSVGDocument //test_ref/idl/clm/getSVGDocument //test_ref/idl/intfcm/getSVGDocument //test_ref/idl/intfm/getSVGDocument //test_ref/idl/func/getSVGDocument //test_ref/idl/ftmplt/getSVGDocument //test_ref/idl/defn/getSVGDocument //test_ref/idl/macro/getSVGDocument" --><span class="function">getSVGDocument</span><!-- /a -->() <span class="keyword">raises</span>(<!-- a logicalPath="//test_ref/idl/cl/DOMException //test_ref/idl/tdef/DOMException //test_ref/idl/tag/DOMException //test_ref/idl/econst/DOMException //test_ref/idl/struct/DOMException //test_ref/idl/clconst/DOMException //test_ref/idl/intf/DOMException" --><span class="type">DOMException</span><!-- /a -->); 
	        <span class="">#endif</span>  
	        <span class="">#endif</span>  
	        };  
	} 
END OF OBJECT


OBJECT: HTMLEmbedElement (HeaderDoc::CPPClass)
	<span class="keyword">interface</span>         <!-- a logicalPath="//test_ref/idl/cl/HTMLEmbedElement //test_ref/idl/tdef/HTMLEmbedElement //test_ref/idl/tag/HTMLEmbedElement //test_ref/idl/econst/HTMLEmbedElement //test_ref/idl/struct/HTMLEmbedElement //test_ref/idl/clconst/HTMLEmbedElement //test_ref/idl/intf/HTMLEmbedElement" --><span class="type">HTMLEmbedElement</span><!-- /a --> : <!-- a logicalPath="//test_ref/idl/cl/HTMLElement //test_ref/idl/tdef/HTMLElement //test_ref/idl/tag/HTMLElement //test_ref/idl/econst/HTMLElement //test_ref/idl/struct/HTMLElement //test_ref/idl/clconst/HTMLElement //test_ref/idl/intf/HTMLElement" --><span class="type">HTMLElement</span><!-- /a --> { 
	    <span class="comment">/*! attribute align */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/align //test_ref/idl/data/align" --><span class="var">align</span><!-- /a -->; 
	    <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_JAVASCRIPT //test_ref/idl/tdef/LANGUAGE_JAVASCRIPT //test_ref/idl/tag/LANGUAGE_JAVASCRIPT //test_ref/idl/econst/LANGUAGE_JAVASCRIPT //test_ref/idl/struct/LANGUAGE_JAVASCRIPT //test_ref/idl/data/LANGUAGE_JAVASCRIPT //test_ref/idl/clconst/LANGUAGE_JAVASCRIPT //test_ref/idl/intf/LANGUAGE_JAVASCRIPT //test_ref/idl/instm/LANGUAGE_JAVASCRIPT //test_ref/idl/clm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfcm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfm/LANGUAGE_JAVASCRIPT //test_ref/idl/func/LANGUAGE_JAVASCRIPT //test_ref/idl/ftmplt/LANGUAGE_JAVASCRIPT //test_ref/idl/defn/LANGUAGE_JAVASCRIPT //test_ref/idl/macro/LANGUAGE_JAVASCRIPT //test_ref/doc/com/intfm/LANGUAGE_JAVASCRIPT" --><span class="preprocessor">LANGUAGE_JAVASCRIPT</span><!-- /a --><span class="preprocessor">)</span> 
	    <span class="comment">/*! attribute height */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
	    <span class="">#else</span> 
	    <span class="keyword">attribute</span> <span class="keyword">long</span> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
	    <span class="">#endif</span>  
	    <span class="comment">/*! attribute name */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/name //test_ref/idl/data/name" --><span class="var">name</span><!-- /a -->; 
	    <span class="comment">/*! attribute src */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/src //test_ref/idl/data/src" --><span class="var">src</span><!-- /a -->; 
	    <span class="comment">/*! attribute type */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/type //test_ref/idl/data/type" --><span class="var">type</span><!-- /a -->; 
	    <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_JAVASCRIPT //test_ref/idl/tdef/LANGUAGE_JAVASCRIPT //test_ref/idl/tag/LANGUAGE_JAVASCRIPT //test_ref/idl/econst/LANGUAGE_JAVASCRIPT //test_ref/idl/struct/LANGUAGE_JAVASCRIPT //test_ref/idl/data/LANGUAGE_JAVASCRIPT //test_ref/idl/clconst/LANGUAGE_JAVASCRIPT //test_ref/idl/intf/LANGUAGE_JAVASCRIPT //test_ref/idl/instm/LANGUAGE_JAVASCRIPT //test_ref/idl/clm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfcm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfm/LANGUAGE_JAVASCRIPT //test_ref/idl/func/LANGUAGE_JAVASCRIPT //test_ref/idl/ftmplt/LANGUAGE_JAVASCRIPT //test_ref/idl/defn/LANGUAGE_JAVASCRIPT //test_ref/idl/macro/LANGUAGE_JAVASCRIPT //test_ref/doc/com/intfm/LANGUAGE_JAVASCRIPT" --><span class="preprocessor">LANGUAGE_JAVASCRIPT</span><!-- /a --><span class="preprocessor">)</span> 
	    <span class="comment">/*! attribute width */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
	    <span class="">#else</span> 
	    <span class="keyword">attribute</span> <span class="keyword">long</span> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
	    <span class="">#endif</span>   
	    <span class="">#if</span><span class="preprocessor"> </span><span class="preprocessor">!</span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_COM //test_ref/idl/tdef/LANGUAGE_COM //test_ref/idl/tag/LANGUAGE_COM //test_ref/idl/econst/LANGUAGE_COM //test_ref/idl/struct/LANGUAGE_COM //test_ref/idl/data/LANGUAGE_COM //test_ref/idl/clconst/LANGUAGE_COM //test_ref/idl/intf/LANGUAGE_COM //test_ref/idl/instm/LANGUAGE_COM //test_ref/idl/clm/LANGUAGE_COM //test_ref/idl/intfcm/LANGUAGE_COM //test_ref/idl/intfm/LANGUAGE_COM //test_ref/idl/func/LANGUAGE_COM //test_ref/idl/ftmplt/LANGUAGE_COM //test_ref/idl/defn/LANGUAGE_COM //test_ref/idl/macro/LANGUAGE_COM //test_ref/doc/com/intfm/LANGUAGE_COM" --><span class="preprocessor">LANGUAGE_COM</span><!-- /a --><span class="preprocessor">)</span> 
	    <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/ENABLE_SVG //test_ref/idl/tdef/ENABLE_SVG //test_ref/idl/tag/ENABLE_SVG //test_ref/idl/econst/ENABLE_SVG //test_ref/idl/struct/ENABLE_SVG //test_ref/idl/data/ENABLE_SVG //test_ref/idl/clconst/ENABLE_SVG //test_ref/idl/intf/ENABLE_SVG //test_ref/idl/instm/ENABLE_SVG //test_ref/idl/clm/ENABLE_SVG //test_ref/idl/intfcm/ENABLE_SVG //test_ref/idl/intfm/ENABLE_SVG //test_ref/idl/func/ENABLE_SVG //test_ref/idl/ftmplt/ENABLE_SVG //test_ref/idl/defn/ENABLE_SVG //test_ref/idl/macro/ENABLE_SVG //test_ref/doc/com/intfm/ENABLE_SVG" --><span class="preprocessor">ENABLE_SVG</span><!-- /a --> 
	    <!-- a logicalPath="//test_ref/idl/cl/SVGDocument //test_ref/idl/tdef/SVGDocument //test_ref/idl/tag/SVGDocument //test_ref/idl/econst/SVGDocument //test_ref/idl/struct/SVGDocument //test_ref/idl/clconst/SVGDocument //test_ref/idl/intf/SVGDocument" --><span class="type">SVGDocument</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/instm/getSVGDocument //test_ref/idl/clm/getSVGDocument //test_ref/idl/intfcm/getSVGDocument //test_ref/idl/intfm/getSVGDocument //test_ref/idl/func/getSVGDocument //test_ref/idl/ftmplt/getSVGDocument //test_ref/idl/defn/getSVGDocument //test_ref/idl/macro/getSVGDocument" --><span class="function">getSVGDocument</span><!-- /a -->() <span class="keyword">raises</span>(<!-- a logicalPath="//test_ref/idl/cl/DOMException //test_ref/idl/tdef/DOMException //test_ref/idl/tag/DOMException //test_ref/idl/econst/DOMException //test_ref/idl/struct/DOMException //test_ref/idl/clconst/DOMException //test_ref/idl/intf/DOMException" --><span class="type">DOMException</span><!-- /a -->); 
	    <span class="">#endif</span>  
	    <span class="">#endif</span>  
	}; 
END OF OBJECT


OBJECT: getSVGDocument (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/idl/cl/SVGDocument //test_ref/idl/tdef/SVGDocument //test_ref/idl/tag/SVGDocument //test_ref/idl/econst/SVGDocument //test_ref/idl/struct/SVGDocument //test_ref/idl/clconst/SVGDocument //test_ref/idl/intf/SVGDocument" --><span class="type">SVGDocument</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/instm/getSVGDocument //test_ref/idl/clm/getSVGDocument //test_ref/idl/intfcm/getSVGDocument //test_ref/idl/intfm/getSVGDocument //test_ref/idl/func/getSVGDocument //test_ref/idl/ftmplt/getSVGDocument //test_ref/idl/defn/getSVGDocument //test_ref/idl/macro/getSVGDocument" --><span class="function">getSVGDocument</span><!-- /a -->() <span class="keyword">raises</span>(<!-- a logicalPath="//test_ref/idl/cl/DOMException //test_ref/idl/tdef/DOMException //test_ref/idl/tag/DOMException //test_ref/idl/econst/DOMException //test_ref/idl/struct/DOMException //test_ref/idl/clconst/DOMException //test_ref/idl/intf/DOMException" --><span class="type">DOMException</span><!-- /a -->); 
END OF OBJECT


OBJECT: align (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/align //test_ref/idl/data/align" --><span class="var">align</span><!-- /a -->; 
END OF OBJECT


OBJECT: height (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
END OF OBJECT


OBJECT: height (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
END OF OBJECT


OBJECT: height (HeaderDoc::Var)
	<span class="keyword">attribute</span> <span class="keyword">long</span> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
END OF OBJECT


OBJECT: name (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/name //test_ref/idl/data/name" --><span class="var">name</span><!-- /a -->; 
END OF OBJECT


OBJECT: name (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/name //test_ref/idl/data/name" --><span class="var">name</span><!-- /a -->; 
END OF OBJECT


OBJECT: src (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/src //test_ref/idl/data/src" --><span class="var">src</span><!-- /a -->; 
END OF OBJECT


OBJECT: type (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/type //test_ref/idl/data/type" --><span class="var">type</span><!-- /a -->; 
END OF OBJECT


OBJECT: width (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
END OF OBJECT


OBJECT: width (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
END OF OBJECT


OBJECT: width (HeaderDoc::Var)
	<span class="keyword">attribute</span> <span class="keyword">long</span> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
END OF OBJECT



_$33|testsuite/parser_tests/idl_1.test$1|C$5|idl 1$65586|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 0
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 1
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/idl_1.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/idl_1.test
$parserState->{INMODULE} => 1
$parserState->{ISFORWARDDECLARATION} => 0
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => -1
$parserState->{categoryClass} => 
$parserState->{classNameFound} => 1
$parserState->{classtype} => module
$parserState->{forceClassDone} => 1
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 42
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => 
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 2
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 0
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => module
$parserState->{returntype} => module html 
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => html
$parserState->{sodtype} => 
$parserState->{sodtypeclasstoken} => module
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 0
$parserState->{storeDec} => 
$parserState->{typestring} => html
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 42
typelist: module
namelist: html
posstypes: 
value: 
returntype: 
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 0
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---module
+--- 
+---html
+--- 
+---{
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- HTML element class 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---    
|   +-*-interface (HAS STATE)
|   +--- 
|   +---[
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---GenerateConstructor
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomPutFunction
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomGetOwnPropertySlot
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomCall
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---HasOverridingNameGetter
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---InterfaceUUID
|   |   +---=
|   |   +---18f9bd58
|   |   +----
|   |   +---6bb3
|   |   +----
|   |   +---4b5c
|   |   +----
|   |   +---aa30
|   |   +----
|   |   +---6da13adfc91e
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---ImplementationUUID
|   |   +---=
|   |   +---93e0407a
|   |   +----
|   |   +---8380
|   |   +----
|   |   +---4ff0
|   |   +----
|   |   +---978d
|   |   +----
|   |   +---f773f2dee6a3
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +---]
|   +--- 
|   +---HTMLEmbedElement
|   +--- 
|   +---:
|   +--- 
|   +---HTMLElement
|   +--- 
|   +---{
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute align 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---align
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_JAVASCRIPT
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute height 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---height
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#else (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertFromString
|   |   |   +---]
|   |   +--- 
|   |   +---long
|   |   +--- 
|   |   +---height
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute name 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---name
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute src 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---src
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute type 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---type
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_JAVASCRIPT
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute width 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---width
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#else (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertFromString
|   |   |   +---]
|   |   +--- 
|   |   +---long
|   |   +--- 
|   |   +---width
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---!
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_COM
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---ENABLE_SVG
|   |   |   +---[ NEWLINE ]
|   |   +---        
|   |   +-*-[ (HAS STATE)
|   |   |   +---SVGCheckSecurityDocument
|   |   |   +---]
|   |   +--- 
|   |   +---SVGDocument
|   |   +--- 
|   |   +---getSVGDocument
|   |   +---(
|   |   |   +---)
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---raises
|   |   |   +---(
|   |   |   +---DOMException
|   |   |   +---)
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +---}
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---}
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: idl 1
APIUID: //test_ref/doc/header/idl_1.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: <p></p>
LONG ATTRIBUTES: <p></p>
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::CPPClass
    NAME: html
    APIUID: 
    ABSTRACT: ""
    DISCUSSION: "<p>HTML module "
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::CPPClass"
    MASTERENUM: ""
    APIREFSETUPDONE: ""
    TPCDONE: ""
    NOREGISTERUID: "1"
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Declared In:</b> <a href="../../index.html" target="_top">idl 1</a><br>
</p>
    LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::CPPClass
        NAME: HTMLEmbedElement
        APIUID: 
        ABSTRACT: ""
        DISCUSSION: "<p>HTML element class "
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: ""
        LINENUM: ""
        CLASS: "HeaderDoc::CPPClass"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "1"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p><b>Superclass:</b> <!-- a logicalPath="//test_ref/idl/cl/HTMLElement" -->HTMLElement<!-- /a --><br>
<b>Declared In:</b> <a href="../../index.html" target="_top">html</a><br>
</p>
        LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: align
            APIUID: //test_ref/idl/data/HTMLEmbedElement/align
            ABSTRACT: ""
            DISCUSSION: "<p>attribute align "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: height
            APIUID: //test_ref/idl/data/HTMLEmbedElement/height
            ABSTRACT: ""
            DISCUSSION: "<p>attribute height "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: name
            APIUID: //test_ref/idl/data/HTMLEmbedElement/name
            ABSTRACT: ""
            DISCUSSION: "<p>attribute name "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: src
            APIUID: //test_ref/idl/data/HTMLEmbedElement/src
            ABSTRACT: ""
            DISCUSSION: "<p>attribute src "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: type
            APIUID: //test_ref/idl/data/HTMLEmbedElement/type
            ABSTRACT: ""
            DISCUSSION: "<p>attribute type "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: width
            APIUID: //test_ref/idl/data/HTMLEmbedElement/width
            ABSTRACT: ""
            DISCUSSION: "<p>attribute width "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: html (HeaderDoc::CPPClass)
+---module
+--- 
+---html
+--- 
+---{
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- HTML element class 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---    
|   +-*-interface (HAS STATE)
|   +--- 
|   +---[
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---GenerateConstructor
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomPutFunction
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomGetOwnPropertySlot
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomCall
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---HasOverridingNameGetter
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---InterfaceUUID
|   |   +---=
|   |   +---18f9bd58
|   |   +----
|   |   +---6bb3
|   |   +----
|   |   +---4b5c
|   |   +----
|   |   +---aa30
|   |   +----
|   |   +---6da13adfc91e
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---ImplementationUUID
|   |   +---=
|   |   +---93e0407a
|   |   +----
|   |   +---8380
|   |   +----
|   |   +---4ff0
|   |   +----
|   |   +---978d
|   |   +----
|   |   +---f773f2dee6a3
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +---]
|   +--- 
|   +---HTMLEmbedElement
|   +--- 
|   +---:
|   +--- 
|   +---HTMLElement
|   +--- 
|   +---{
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute align 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---align
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_JAVASCRIPT
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute height 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---height
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#else (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertFromString
|   |   |   +---]
|   |   +--- 
|   |   +---long
|   |   +--- 
|   |   +---height
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute name 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---name
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute src 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---src
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute type 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---type
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_JAVASCRIPT
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute width 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---width
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#else (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertFromString
|   |   |   +---]
|   |   +--- 
|   |   +---long
|   |   +--- 
|   |   +---width
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---!
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_COM
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---ENABLE_SVG
|   |   |   +---[ NEWLINE ]
|   |   +---        
|   |   +-*-[ (HAS STATE)
|   |   |   +---SVGCheckSecurityDocument
|   |   |   +---]
|   |   +--- 
|   |   +---SVGDocument
|   |   +--- 
|   |   +---getSVGDocument
|   |   +---(
|   |   |   +---)
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---raises
|   |   |   +---(
|   |   |   +---DOMException
|   |   |   +---)
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +---}
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---}
+---[ NEWLINE ]
END OF OBJECT


OBJECT: HTMLEmbedElement (HeaderDoc::CPPClass)
+-*-interface (HAS STATE)
+--- 
+---[
|   +---[ NEWLINE ]
|   +---        
|   +---GenerateConstructor
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---CustomPutFunction
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---CustomGetOwnPropertySlot
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---CustomCall
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---HasOverridingNameGetter
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---InterfaceUUID
|   +---=
|   +---18f9bd58
|   +----
|   +---6bb3
|   +----
|   +---4b5c
|   +----
|   +---aa30
|   +----
|   +---6da13adfc91e
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---ImplementationUUID
|   +---=
|   +---93e0407a
|   +----
|   +---8380
|   +----
|   +---4ff0
|   +----
|   +---978d
|   +----
|   +---f773f2dee6a3
|   +---[ NEWLINE ]
|   +---    
|   +---]
+--- 
+---HTMLEmbedElement
+--- 
+---:
+--- 
+---HTMLElement
+--- 
+---{
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute align 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---align
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#if (HAS STATE)
|   |   +--- 
|   |   +---defined
|   |   +---(
|   |   +---LANGUAGE_JAVASCRIPT
|   |   +---)
|   |   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute height 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---height
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertFromString
|   |   +---]
|   +--- 
|   +---long
|   +--- 
|   +---height
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute name 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---name
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute src 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---src
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute type 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---type
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#if (HAS STATE)
|   |   +--- 
|   |   +---defined
|   |   +---(
|   |   +---LANGUAGE_JAVASCRIPT
|   |   +---)
|   |   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute width 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---width
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertFromString
|   |   +---]
|   +--- 
|   +---long
|   +--- 
|   +---width
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +-*-#if (HAS STATE)
|   |   +--- 
|   |   +---!
|   |   +---defined
|   |   +---(
|   |   +---LANGUAGE_COM
|   |   +---)
|   |   +---[ NEWLINE ]
|   +-*-#if (HAS STATE)
|   |   +--- 
|   |   +---ENABLE_SVG
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-[ (HAS STATE)
|   |   +---SVGCheckSecurityDocument
|   |   +---]
|   +--- 
|   +---SVGDocument
|   +--- 
|   +---getSVGDocument
|   +---(
|   |   +---)
|   +---[ NEWLINE ]
|   +---            
|   +---raises
|   |   +---(
|   |   +---DOMException
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---    
|   +---}
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: align (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---align
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute height 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---height
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---height
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute name 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---name
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute src 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: height (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---height
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---height
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute name 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---name
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute src 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: name (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---name
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute src 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: src (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: type (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: width (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: html (HeaderDoc::CPPClass)
	<span class="keyword">module</span> <!-- a logicalPath="//test_ref/idl/cl/html //test_ref/idl/tdef/html //test_ref/idl/tag/html //test_ref/idl/econst/html //test_ref/idl/struct/html //test_ref/idl/clconst/html //test_ref/idl/intf/html" --><span class="type">html</span><!-- /a --> {  
	    <span class="comment">/*! HTML element class */</span>
	    <span class="keyword">interface</span>         <!-- a logicalPath="//test_ref/idl/cl/HTMLEmbedElement //test_ref/idl/tdef/HTMLEmbedElement //test_ref/idl/tag/HTMLEmbedElement //test_ref/idl/econst/HTMLEmbedElement //test_ref/idl/struct/HTMLEmbedElement //test_ref/idl/clconst/HTMLEmbedElement //test_ref/idl/intf/HTMLEmbedElement" --><span class="type">HTMLEmbedElement</span><!-- /a --> : <!-- a logicalPath="//test_ref/idl/cl/HTMLElement //test_ref/idl/tdef/HTMLElement //test_ref/idl/tag/HTMLElement //test_ref/idl/econst/HTMLElement //test_ref/idl/struct/HTMLElement //test_ref/idl/clconst/HTMLElement //test_ref/idl/intf/HTMLElement" --><span class="type">HTMLElement</span><!-- /a --> { 
	        <span class="comment">/*! attribute align */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/align //test_ref/idl/data/align" --><span class="var">align</span><!-- /a -->; 
	        <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_JAVASCRIPT //test_ref/idl/tdef/LANGUAGE_JAVASCRIPT //test_ref/idl/tag/LANGUAGE_JAVASCRIPT //test_ref/idl/econst/LANGUAGE_JAVASCRIPT //test_ref/idl/struct/LANGUAGE_JAVASCRIPT //test_ref/idl/data/LANGUAGE_JAVASCRIPT //test_ref/idl/clconst/LANGUAGE_JAVASCRIPT //test_ref/idl/intf/LANGUAGE_JAVASCRIPT //test_ref/idl/instm/LANGUAGE_JAVASCRIPT //test_ref/idl/clm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfcm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfm/LANGUAGE_JAVASCRIPT //test_ref/idl/func/LANGUAGE_JAVASCRIPT //test_ref/idl/ftmplt/LANGUAGE_JAVASCRIPT //test_ref/idl/defn/LANGUAGE_JAVASCRIPT //test_ref/idl/macro/LANGUAGE_JAVASCRIPT //test_ref/doc/com/intfm/LANGUAGE_JAVASCRIPT" --><span class="preprocessor">LANGUAGE_JAVASCRIPT</span><!-- /a --><span class="preprocessor">)</span> 
	        <span class="comment">/*! attribute height */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
	        <span class="">#else</span> 
	        <span class="keyword">attribute</span> <span class="keyword">long</span> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
	        <span class="">#endif</span>  
	        <span class="comment">/*! attribute name */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/name //test_ref/idl/data/name" --><span class="var">name</span><!-- /a -->; 
	        <span class="comment">/*! attribute src */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/src //test_ref/idl/data/src" --><span class="var">src</span><!-- /a -->; 
	        <span class="comment">/*! attribute type */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/type //test_ref/idl/data/type" --><span class="var">type</span><!-- /a -->; 
	        <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_JAVASCRIPT //test_ref/idl/tdef/LANGUAGE_JAVASCRIPT //test_ref/idl/tag/LANGUAGE_JAVASCRIPT //test_ref/idl/econst/LANGUAGE_JAVASCRIPT //test_ref/idl/struct/LANGUAGE_JAVASCRIPT //test_ref/idl/data/LANGUAGE_JAVASCRIPT //test_ref/idl/clconst/LANGUAGE_JAVASCRIPT //test_ref/idl/intf/LANGUAGE_JAVASCRIPT //test_ref/idl/instm/LANGUAGE_JAVASCRIPT //test_ref/idl/clm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfcm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfm/LANGUAGE_JAVASCRIPT //test_ref/idl/func/LANGUAGE_JAVASCRIPT //test_ref/idl/ftmplt/LANGUAGE_JAVASCRIPT //test_ref/idl/defn/LANGUAGE_JAVASCRIPT //test_ref/idl/macro/LANGUAGE_JAVASCRIPT //test_ref/doc/com/intfm/LANGUAGE_JAVASCRIPT" --><span class="preprocessor">LANGUAGE_JAVASCRIPT</span><!-- /a --><span class="preprocessor">)</span> 
	        <span class="comment">/*! attribute width */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
	        <span class="">#else</span> 
	        <span class="keyword">attribute</span> <span class="keyword">long</span> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
	        <span class="">#endif</span>   
	        <span class="">#if</span><span class="preprocessor"> </span><span class="preprocessor">!</span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_COM //test_ref/idl/tdef/LANGUAGE_COM //test_ref/idl/tag/LANGUAGE_COM //test_ref/idl/econst/LANGUAGE_COM //test_ref/idl/struct/LANGUAGE_COM //test_ref/idl/data/LANGUAGE_COM //test_ref/idl/clconst/LANGUAGE_COM //test_ref/idl/intf/LANGUAGE_COM //test_ref/idl/instm/LANGUAGE_COM //test_ref/idl/clm/LANGUAGE_COM //test_ref/idl/intfcm/LANGUAGE_COM //test_ref/idl/intfm/LANGUAGE_COM //test_ref/idl/func/LANGUAGE_COM //test_ref/idl/ftmplt/LANGUAGE_COM //test_ref/idl/defn/LANGUAGE_COM //test_ref/idl/macro/LANGUAGE_COM //test_ref/doc/com/intfm/LANGUAGE_COM" --><span class="preprocessor">LANGUAGE_COM</span><!-- /a --><span class="preprocessor">)</span> 
	        <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/ENABLE_SVG //test_ref/idl/tdef/ENABLE_SVG //test_ref/idl/tag/ENABLE_SVG //test_ref/idl/econst/ENABLE_SVG //test_ref/idl/struct/ENABLE_SVG //test_ref/idl/data/ENABLE_SVG //test_ref/idl/clconst/ENABLE_SVG //test_ref/idl/intf/ENABLE_SVG //test_ref/idl/instm/ENABLE_SVG //test_ref/idl/clm/ENABLE_SVG //test_ref/idl/intfcm/ENABLE_SVG //test_ref/idl/intfm/ENABLE_SVG //test_ref/idl/func/ENABLE_SVG //test_ref/idl/ftmplt/ENABLE_SVG //test_ref/idl/defn/ENABLE_SVG //test_ref/idl/macro/ENABLE_SVG //test_ref/doc/com/intfm/ENABLE_SVG" --><span class="preprocessor">ENABLE_SVG</span><!-- /a --> 
	        <!-- a logicalPath="//test_ref/idl/cl/SVGDocument //test_ref/idl/tdef/SVGDocument //test_ref/idl/tag/SVGDocument //test_ref/idl/econst/SVGDocument //test_ref/idl/struct/SVGDocument //test_ref/idl/clconst/SVGDocument //test_ref/idl/intf/SVGDocument" --><span class="type">SVGDocument</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/instm/getSVGDocument //test_ref/idl/clm/getSVGDocument //test_ref/idl/intfcm/getSVGDocument //test_ref/idl/intfm/getSVGDocument //test_ref/idl/func/getSVGDocument //test_ref/idl/ftmplt/getSVGDocument //test_ref/idl/defn/getSVGDocument //test_ref/idl/macro/getSVGDocument" --><span class="function">getSVGDocument</span><!-- /a -->() <span class="keyword">raises</span>(<!-- a logicalPath="//test_ref/idl/cl/DOMException //test_ref/idl/tdef/DOMException //test_ref/idl/tag/DOMException //test_ref/idl/econst/DOMException //test_ref/idl/struct/DOMException //test_ref/idl/clconst/DOMException //test_ref/idl/intf/DOMException" --><span class="type">DOMException</span><!-- /a -->); 
	        <span class="">#endif</span>  
	        <span class="">#endif</span>  
	        };  
	} 
END OF OBJECT


OBJECT: HTMLEmbedElement (HeaderDoc::CPPClass)
	<span class="keyword">interface</span>         <!-- a logicalPath="//test_ref/idl/cl/HTMLEmbedElement //test_ref/idl/tdef/HTMLEmbedElement //test_ref/idl/tag/HTMLEmbedElement //test_ref/idl/econst/HTMLEmbedElement //test_ref/idl/struct/HTMLEmbedElement //test_ref/idl/clconst/HTMLEmbedElement //test_ref/idl/intf/HTMLEmbedElement" --><span class="type">HTMLEmbedElement</span><!-- /a --> : <!-- a logicalPath="//test_ref/idl/cl/HTMLElement //test_ref/idl/tdef/HTMLElement //test_ref/idl/tag/HTMLElement //test_ref/idl/econst/HTMLElement //test_ref/idl/struct/HTMLElement //test_ref/idl/clconst/HTMLElement //test_ref/idl/intf/HTMLElement" --><span class="type">HTMLElement</span><!-- /a --> { 
	    <span class="comment">/*! attribute align */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/align //test_ref/idl/data/align" --><span class="var">align</span><!-- /a -->; 
	    <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_JAVASCRIPT //test_ref/idl/tdef/LANGUAGE_JAVASCRIPT //test_ref/idl/tag/LANGUAGE_JAVASCRIPT //test_ref/idl/econst/LANGUAGE_JAVASCRIPT //test_ref/idl/struct/LANGUAGE_JAVASCRIPT //test_ref/idl/data/LANGUAGE_JAVASCRIPT //test_ref/idl/clconst/LANGUAGE_JAVASCRIPT //test_ref/idl/intf/LANGUAGE_JAVASCRIPT //test_ref/idl/instm/LANGUAGE_JAVASCRIPT //test_ref/idl/clm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfcm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfm/LANGUAGE_JAVASCRIPT //test_ref/idl/func/LANGUAGE_JAVASCRIPT //test_ref/idl/ftmplt/LANGUAGE_JAVASCRIPT //test_ref/idl/defn/LANGUAGE_JAVASCRIPT //test_ref/idl/macro/LANGUAGE_JAVASCRIPT //test_ref/doc/com/intfm/LANGUAGE_JAVASCRIPT" --><span class="preprocessor">LANGUAGE_JAVASCRIPT</span><!-- /a --><span class="preprocessor">)</span> 
	    <span class="comment">/*! attribute height */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
	    <span class="">#else</span> 
	    <span class="keyword">attribute</span> <span class="keyword">long</span> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
	    <span class="">#endif</span>  
	    <span class="comment">/*! attribute name */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/name //test_ref/idl/data/name" --><span class="var">name</span><!-- /a -->; 
	    <span class="comment">/*! attribute src */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/src //test_ref/idl/data/src" --><span class="var">src</span><!-- /a -->; 
	    <span class="comment">/*! attribute type */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/type //test_ref/idl/data/type" --><span class="var">type</span><!-- /a -->; 
	    <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_JAVASCRIPT //test_ref/idl/tdef/LANGUAGE_JAVASCRIPT //test_ref/idl/tag/LANGUAGE_JAVASCRIPT //test_ref/idl/econst/LANGUAGE_JAVASCRIPT //test_ref/idl/struct/LANGUAGE_JAVASCRIPT //test_ref/idl/data/LANGUAGE_JAVASCRIPT //test_ref/idl/clconst/LANGUAGE_JAVASCRIPT //test_ref/idl/intf/LANGUAGE_JAVASCRIPT //test_ref/idl/instm/LANGUAGE_JAVASCRIPT //test_ref/idl/clm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfcm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfm/LANGUAGE_JAVASCRIPT //test_ref/idl/func/LANGUAGE_JAVASCRIPT //test_ref/idl/ftmplt/LANGUAGE_JAVASCRIPT //test_ref/idl/defn/LANGUAGE_JAVASCRIPT //test_ref/idl/macro/LANGUAGE_JAVASCRIPT //test_ref/doc/com/intfm/LANGUAGE_JAVASCRIPT" --><span class="preprocessor">LANGUAGE_JAVASCRIPT</span><!-- /a --><span class="preprocessor">)</span> 
	    <span class="comment">/*! attribute width */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
	    <span class="">#else</span> 
	    <span class="keyword">attribute</span> <span class="keyword">long</span> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
	    <span class="">#endif</span>   
	    <span class="">#if</span><span class="preprocessor"> </span><span class="preprocessor">!</span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_COM //test_ref/idl/tdef/LANGUAGE_COM //test_ref/idl/tag/LANGUAGE_COM //test_ref/idl/econst/LANGUAGE_COM //test_ref/idl/struct/LANGUAGE_COM //test_ref/idl/data/LANGUAGE_COM //test_ref/idl/clconst/LANGUAGE_COM //test_ref/idl/intf/LANGUAGE_COM //test_ref/idl/instm/LANGUAGE_COM //test_ref/idl/clm/LANGUAGE_COM //test_ref/idl/intfcm/LANGUAGE_COM //test_ref/idl/intfm/LANGUAGE_COM //test_ref/idl/func/LANGUAGE_COM //test_ref/idl/ftmplt/LANGUAGE_COM //test_ref/idl/defn/LANGUAGE_COM //test_ref/idl/macro/LANGUAGE_COM //test_ref/doc/com/intfm/LANGUAGE_COM" --><span class="preprocessor">LANGUAGE_COM</span><!-- /a --><span class="preprocessor">)</span> 
	    <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/ENABLE_SVG //test_ref/idl/tdef/ENABLE_SVG //test_ref/idl/tag/ENABLE_SVG //test_ref/idl/econst/ENABLE_SVG //test_ref/idl/struct/ENABLE_SVG //test_ref/idl/data/ENABLE_SVG //test_ref/idl/clconst/ENABLE_SVG //test_ref/idl/intf/ENABLE_SVG //test_ref/idl/instm/ENABLE_SVG //test_ref/idl/clm/ENABLE_SVG //test_ref/idl/intfcm/ENABLE_SVG //test_ref/idl/intfm/ENABLE_SVG //test_ref/idl/func/ENABLE_SVG //test_ref/idl/ftmplt/ENABLE_SVG //test_ref/idl/defn/ENABLE_SVG //test_ref/idl/macro/ENABLE_SVG //test_ref/doc/com/intfm/ENABLE_SVG" --><span class="preprocessor">ENABLE_SVG</span><!-- /a --> 
	    <!-- a logicalPath="//test_ref/idl/cl/SVGDocument //test_ref/idl/tdef/SVGDocument //test_ref/idl/tag/SVGDocument //test_ref/idl/econst/SVGDocument //test_ref/idl/struct/SVGDocument //test_ref/idl/clconst/SVGDocument //test_ref/idl/intf/SVGDocument" --><span class="type">SVGDocument</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/instm/getSVGDocument //test_ref/idl/clm/getSVGDocument //test_ref/idl/intfcm/getSVGDocument //test_ref/idl/intfm/getSVGDocument //test_ref/idl/func/getSVGDocument //test_ref/idl/ftmplt/getSVGDocument //test_ref/idl/defn/getSVGDocument //test_ref/idl/macro/getSVGDocument" --><span class="function">getSVGDocument</span><!-- /a -->() <span class="keyword">raises</span>(<!-- a logicalPath="//test_ref/idl/cl/DOMException //test_ref/idl/tdef/DOMException //test_ref/idl/tag/DOMException //test_ref/idl/econst/DOMException //test_ref/idl/struct/DOMException //test_ref/idl/clconst/DOMException //test_ref/idl/intf/DOMException" --><span class="type">DOMException</span><!-- /a -->); 
	    <span class="">#endif</span>  
	    <span class="">#endif</span>  
	}; 
END OF OBJECT


OBJECT: align (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/align //test_ref/idl/data/align" --><span class="var">align</span><!-- /a -->; 
END OF OBJECT


OBJECT: height (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
END OF OBJECT


OBJECT: name (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/name //test_ref/idl/data/name" --><span class="var">name</span><!-- /a -->; 
END OF OBJECT


OBJECT: src (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/src //test_ref/idl/data/src" --><span class="var">src</span><!-- /a -->; 
END OF OBJECT


OBJECT: type (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/type //test_ref/idl/data/type" --><span class="var">type</span><!-- /a -->; 
END OF OBJECT


OBJECT: width (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
END OF OBJECT



$84974|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 0
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 1
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/idl_1.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/idl_1.test
$parserState->{INMODULE} => 1
$parserState->{ISFORWARDDECLARATION} => 0
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => -1
$parserState->{categoryClass} => 
$parserState->{classNameFound} => 1
$parserState->{classtype} => module
$parserState->{forceClassDone} => 1
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 42
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => 
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 2
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 0
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => module
$parserState->{returntype} => module html 
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => html
$parserState->{sodtype} => 
$parserState->{sodtypeclasstoken} => module
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 0
$parserState->{storeDec} => 
$parserState->{typestring} => html
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 42
typelist: module
namelist: html
posstypes: 
value: 
returntype: 
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 0
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---module
+--- 
+---html
+--- 
+---{
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- HTML element class 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---    
|   +-*-interface (HAS STATE)
|   +--- 
|   +---[
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---GenerateConstructor
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomPutFunction
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomGetOwnPropertySlot
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomCall
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---HasOverridingNameGetter
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---InterfaceUUID
|   |   +---=
|   |   +---18f9bd58
|   |   +----
|   |   +---6bb3
|   |   +----
|   |   +---4b5c
|   |   +----
|   |   +---aa30
|   |   +----
|   |   +---6da13adfc91e
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---ImplementationUUID
|   |   +---=
|   |   +---93e0407a
|   |   +----
|   |   +---8380
|   |   +----
|   |   +---4ff0
|   |   +----
|   |   +---978d
|   |   +----
|   |   +---f773f2dee6a3
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +---]
|   +--- 
|   +---HTMLEmbedElement
|   +--- 
|   +---:
|   +--- 
|   +---HTMLElement
|   +--- 
|   +---{
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute align 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---align
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_JAVASCRIPT
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute height 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---height
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#else (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertFromString
|   |   |   +---]
|   |   +--- 
|   |   +---long
|   |   +--- 
|   |   +---height
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute name 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---name
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute src 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---src
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute type 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---type
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_JAVASCRIPT
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute width 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---width
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#else (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertFromString
|   |   |   +---]
|   |   +--- 
|   |   +---long
|   |   +--- 
|   |   +---width
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---!
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_COM
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---ENABLE_SVG
|   |   |   +---[ NEWLINE ]
|   |   +---        
|   |   +-*-[ (HAS STATE)
|   |   |   +---SVGCheckSecurityDocument
|   |   |   +---]
|   |   +--- 
|   |   +---SVGDocument
|   |   +--- 
|   |   +---getSVGDocument
|   |   +---(
|   |   |   +---)
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---raises
|   |   |   +---(
|   |   |   +---DOMException
|   |   |   +---)
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +---}
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---}
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: idl 1
APIUID: //test_ref/doc/header/idl_1.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: <p></p>
LONG ATTRIBUTES: <p></p>
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::CPPClass
    NAME: html
    APIUID: 
    ABSTRACT: ""
    DISCUSSION: "<p>HTML module "
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::CPPClass"
    MASTERENUM: ""
    APIREFSETUPDONE: ""
    TPCDONE: ""
    NOREGISTERUID: "1"
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Declared In:</b> <a href="../../index.html" target="_top">idl 1</a><br>
</p>
    LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::CPPClass
        NAME: HTMLEmbedElement
        APIUID: 
        ABSTRACT: ""
        DISCUSSION: "<p>HTML element class "
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: ""
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: ""
        LINENUM: ""
        CLASS: "HeaderDoc::CPPClass"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "1"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p><b>Superclass:</b> <!-- a logicalPath="//test_ref/idl/cl/HTMLElement" -->HTMLElement<!-- /a --><br>
<b>Declared In:</b> <a href="../../index.html" target="_top">html</a><br>
</p>
        LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Function
            NAME: getSVGDocument
            APIUID: //test_ref/idl/instm/HTMLEmbedElement/getSVGDocument/SVGDocument/()
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: " SVGDocument"
            LINENUM: ""
            CLASS: "HeaderDoc::Function"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: align
            APIUID: //test_ref/idl/data/HTMLEmbedElement/align
            ABSTRACT: ""
            DISCUSSION: "<p>attribute align "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: height
            APIUID: //test_ref/idl/data/HTMLEmbedElement/height
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: height
            APIUID: //test_ref/idl/data/HTMLEmbedElement/height_DONTLINK_0
            ABSTRACT: ""
            DISCUSSION: "<p>attribute height "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: height
            APIUID: //test_ref/idl/data/HTMLEmbedElement/height_DONTLINK_1
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute long"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: name
            APIUID: //test_ref/idl/data/HTMLEmbedElement/name
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: name
            APIUID: //test_ref/idl/data/HTMLEmbedElement/name_DONTLINK_0
            ABSTRACT: ""
            DISCUSSION: "<p>attribute name "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: src
            APIUID: //test_ref/idl/data/HTMLEmbedElement/src
            ABSTRACT: ""
            DISCUSSION: "<p>attribute src "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: type
            APIUID: //test_ref/idl/data/HTMLEmbedElement/type
            ABSTRACT: ""
            DISCUSSION: "<p>attribute type "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: width
            APIUID: //test_ref/idl/data/HTMLEmbedElement/width
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: width
            APIUID: //test_ref/idl/data/HTMLEmbedElement/width_DONTLINK_0
            ABSTRACT: ""
            DISCUSSION: "<p>attribute width "
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute DOMString"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
            TREE COUNT: 1
            INDEX GROUP: 
            IS PROPERTY: 0
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::Var
            NAME: width
            APIUID: //test_ref/idl/data/HTMLEmbedElement/width_DONTLINK_1
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: "attribute long"
            LINENUM: ""
            CLASS: "HeaderDoc::Var"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: "1"
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: html (HeaderDoc::CPPClass)
+---module
+--- 
+---html
+--- 
+---{
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- HTML element class 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---    
|   +-*-interface (HAS STATE)
|   +--- 
|   +---[
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---GenerateConstructor
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomPutFunction
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomGetOwnPropertySlot
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---CustomCall
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---HasOverridingNameGetter
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---InterfaceUUID
|   |   +---=
|   |   +---18f9bd58
|   |   +----
|   |   +---6bb3
|   |   +----
|   |   +---4b5c
|   |   +----
|   |   +---aa30
|   |   +----
|   |   +---6da13adfc91e
|   |   +---,
|   |   +---[ NEWLINE ]
|   |   +---        
|   |   +---ImplementationUUID
|   |   +---=
|   |   +---93e0407a
|   |   +----
|   |   +---8380
|   |   +----
|   |   +---4ff0
|   |   +----
|   |   +---978d
|   |   +----
|   |   +---f773f2dee6a3
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +---]
|   +--- 
|   +---HTMLEmbedElement
|   +--- 
|   +---:
|   +--- 
|   +---HTMLElement
|   +--- 
|   +---{
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute align 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---align
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_JAVASCRIPT
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute height 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---height
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#else (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertFromString
|   |   |   +---]
|   |   +--- 
|   |   +---long
|   |   +--- 
|   |   +---height
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute name 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---name
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute src 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---src
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute type 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---type
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_JAVASCRIPT
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +---/*
|   |   |   +---!
|   |   |   +--- attribute width 
|   |   |   +---*/
|   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertNullToNullString
|   |   |   +---]
|   |   +--- 
|   |   +---DOMString
|   |   +--- 
|   |   +---width
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#else (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---                 
|   |   +-*-attribute (HAS STATE)
|   |   +--- 
|   |   +---[
|   |   |   +---ConvertFromString
|   |   |   +---]
|   |   +--- 
|   |   +---long
|   |   +--- 
|   |   +---width
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---!
|   |   |   +---defined
|   |   |   +---(
|   |   |   +---LANGUAGE_COM
|   |   |   +---)
|   |   |   +---[ NEWLINE ]
|   |   +-*-#if (HAS STATE)
|   |   |   +--- 
|   |   |   +---ENABLE_SVG
|   |   |   +---[ NEWLINE ]
|   |   +---        
|   |   +-*-[ (HAS STATE)
|   |   |   +---SVGCheckSecurityDocument
|   |   |   +---]
|   |   +--- 
|   |   +---SVGDocument
|   |   +--- 
|   |   +---getSVGDocument
|   |   +---(
|   |   |   +---)
|   |   +---[ NEWLINE ]
|   |   +---            
|   |   +---raises
|   |   |   +---(
|   |   |   +---DOMException
|   |   |   +---)
|   |   +---;
|   |   +--- 
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +-*-#endif (HAS STATE)
|   |   |   +---[ NEWLINE ]
|   |   +---[ NEWLINE ]
|   |   +---    
|   |   +---}
|   +---;
|   +--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---}
+---[ NEWLINE ]
END OF OBJECT


OBJECT: HTMLEmbedElement (HeaderDoc::CPPClass)
+-*-interface (HAS STATE)
+--- 
+---[
|   +---[ NEWLINE ]
|   +---        
|   +---GenerateConstructor
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---CustomPutFunction
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---CustomGetOwnPropertySlot
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---CustomCall
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---HasOverridingNameGetter
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---InterfaceUUID
|   +---=
|   +---18f9bd58
|   +----
|   +---6bb3
|   +----
|   +---4b5c
|   +----
|   +---aa30
|   +----
|   +---6da13adfc91e
|   +---,
|   +---[ NEWLINE ]
|   +---        
|   +---ImplementationUUID
|   +---=
|   +---93e0407a
|   +----
|   +---8380
|   +----
|   +---4ff0
|   +----
|   +---978d
|   +----
|   +---f773f2dee6a3
|   +---[ NEWLINE ]
|   +---    
|   +---]
+--- 
+---HTMLEmbedElement
+--- 
+---:
+--- 
+---HTMLElement
+--- 
+---{
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute align 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---align
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#if (HAS STATE)
|   |   +--- 
|   |   +---defined
|   |   +---(
|   |   +---LANGUAGE_JAVASCRIPT
|   |   +---)
|   |   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute height 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---height
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertFromString
|   |   +---]
|   +--- 
|   +---long
|   +--- 
|   +---height
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute name 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---name
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute src 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---src
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute type 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---type
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#if (HAS STATE)
|   |   +--- 
|   |   +---defined
|   |   +---(
|   |   +---LANGUAGE_JAVASCRIPT
|   |   +---)
|   |   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- attribute width 
|   |   +---*/
|   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertNullToNullString
|   |   +---]
|   +--- 
|   +---DOMString
|   +--- 
|   +---width
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---                 
|   +-*-attribute (HAS STATE)
|   +--- 
|   +---[
|   |   +---ConvertFromString
|   |   +---]
|   +--- 
|   +---long
|   +--- 
|   +---width
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +-*-#if (HAS STATE)
|   |   +--- 
|   |   +---!
|   |   +---defined
|   |   +---(
|   |   +---LANGUAGE_COM
|   |   +---)
|   |   +---[ NEWLINE ]
|   +-*-#if (HAS STATE)
|   |   +--- 
|   |   +---ENABLE_SVG
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-[ (HAS STATE)
|   |   +---SVGCheckSecurityDocument
|   |   +---]
|   +--- 
|   +---SVGDocument
|   +--- 
|   +---getSVGDocument
|   +---(
|   |   +---)
|   +---[ NEWLINE ]
|   +---            
|   +---raises
|   |   +---(
|   |   +---DOMException
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---    
|   +---}
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: getSVGDocument (HeaderDoc::Function)
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: align (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---align
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute height 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---height
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---height
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute name 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---name
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute src 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: height (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---height
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---height
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute name 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---name
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute src 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: height (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---height
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---height
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute name 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---name
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute src 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: height (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---height
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute name 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---name
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute src 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: name (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---name
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute src 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: name (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---name
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute src 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: src (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---src
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute type 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: type (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---type
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---defined
|   +---(
|   +---LANGUAGE_JAVASCRIPT
|   +---)
|   +---[ NEWLINE ]
+---/*
|   +---!
|   +--- attribute width 
|   +---*/
+---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: width (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: width (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertNullToNullString
|   +---]
+--- 
+---DOMString
+--- 
+---width
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---                 
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT


OBJECT: width (HeaderDoc::Var)
+-*-attribute (HAS STATE)
+--- 
+---[
|   +---ConvertFromString
|   +---]
+--- 
+---long
+--- 
+---width
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---!
|   +---defined
|   +---(
|   +---LANGUAGE_COM
|   +---)
|   +---[ NEWLINE ]
+-*-#if (HAS STATE)
|   +--- 
|   +---ENABLE_SVG
|   +---[ NEWLINE ]
+---        
+-*-[ (HAS STATE)
|   +---SVGCheckSecurityDocument
|   +---]
+--- 
+---SVGDocument
+--- 
+---getSVGDocument
+---(
|   +---)
+---[ NEWLINE ]
+---            
+---raises
|   +---(
|   +---DOMException
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---    
+---}
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: html (HeaderDoc::CPPClass)
	<span class="keyword">module</span> <!-- a logicalPath="//test_ref/idl/cl/html //test_ref/idl/tdef/html //test_ref/idl/tag/html //test_ref/idl/econst/html //test_ref/idl/struct/html //test_ref/idl/clconst/html //test_ref/idl/intf/html" --><span class="type">html</span><!-- /a --> {  
	    <span class="comment">/*! HTML element class */</span>
	    <span class="keyword">interface</span>         <!-- a logicalPath="//test_ref/idl/cl/HTMLEmbedElement //test_ref/idl/tdef/HTMLEmbedElement //test_ref/idl/tag/HTMLEmbedElement //test_ref/idl/econst/HTMLEmbedElement //test_ref/idl/struct/HTMLEmbedElement //test_ref/idl/clconst/HTMLEmbedElement //test_ref/idl/intf/HTMLEmbedElement" --><span class="type">HTMLEmbedElement</span><!-- /a --> : <!-- a logicalPath="//test_ref/idl/cl/HTMLElement //test_ref/idl/tdef/HTMLElement //test_ref/idl/tag/HTMLElement //test_ref/idl/econst/HTMLElement //test_ref/idl/struct/HTMLElement //test_ref/idl/clconst/HTMLElement //test_ref/idl/intf/HTMLElement" --><span class="type">HTMLElement</span><!-- /a --> { 
	        <span class="comment">/*! attribute align */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/align //test_ref/idl/data/align" --><span class="var">align</span><!-- /a -->; 
	        <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_JAVASCRIPT //test_ref/idl/tdef/LANGUAGE_JAVASCRIPT //test_ref/idl/tag/LANGUAGE_JAVASCRIPT //test_ref/idl/econst/LANGUAGE_JAVASCRIPT //test_ref/idl/struct/LANGUAGE_JAVASCRIPT //test_ref/idl/data/LANGUAGE_JAVASCRIPT //test_ref/idl/clconst/LANGUAGE_JAVASCRIPT //test_ref/idl/intf/LANGUAGE_JAVASCRIPT //test_ref/idl/instm/LANGUAGE_JAVASCRIPT //test_ref/idl/clm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfcm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfm/LANGUAGE_JAVASCRIPT //test_ref/idl/func/LANGUAGE_JAVASCRIPT //test_ref/idl/ftmplt/LANGUAGE_JAVASCRIPT //test_ref/idl/defn/LANGUAGE_JAVASCRIPT //test_ref/idl/macro/LANGUAGE_JAVASCRIPT //test_ref/doc/com/intfm/LANGUAGE_JAVASCRIPT" --><span class="preprocessor">LANGUAGE_JAVASCRIPT</span><!-- /a --><span class="preprocessor">)</span> 
	        <span class="comment">/*! attribute height */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
	        <span class="">#else</span> 
	        <span class="keyword">attribute</span> <span class="keyword">long</span> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
	        <span class="">#endif</span>  
	        <span class="comment">/*! attribute name */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/name //test_ref/idl/data/name" --><span class="var">name</span><!-- /a -->; 
	        <span class="comment">/*! attribute src */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/src //test_ref/idl/data/src" --><span class="var">src</span><!-- /a -->; 
	        <span class="comment">/*! attribute type */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/type //test_ref/idl/data/type" --><span class="var">type</span><!-- /a -->; 
	        <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_JAVASCRIPT //test_ref/idl/tdef/LANGUAGE_JAVASCRIPT //test_ref/idl/tag/LANGUAGE_JAVASCRIPT //test_ref/idl/econst/LANGUAGE_JAVASCRIPT //test_ref/idl/struct/LANGUAGE_JAVASCRIPT //test_ref/idl/data/LANGUAGE_JAVASCRIPT //test_ref/idl/clconst/LANGUAGE_JAVASCRIPT //test_ref/idl/intf/LANGUAGE_JAVASCRIPT //test_ref/idl/instm/LANGUAGE_JAVASCRIPT //test_ref/idl/clm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfcm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfm/LANGUAGE_JAVASCRIPT //test_ref/idl/func/LANGUAGE_JAVASCRIPT //test_ref/idl/ftmplt/LANGUAGE_JAVASCRIPT //test_ref/idl/defn/LANGUAGE_JAVASCRIPT //test_ref/idl/macro/LANGUAGE_JAVASCRIPT //test_ref/doc/com/intfm/LANGUAGE_JAVASCRIPT" --><span class="preprocessor">LANGUAGE_JAVASCRIPT</span><!-- /a --><span class="preprocessor">)</span> 
	        <span class="comment">/*! attribute width */</span>
	        <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
	        <span class="">#else</span> 
	        <span class="keyword">attribute</span> <span class="keyword">long</span> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
	        <span class="">#endif</span>   
	        <span class="">#if</span><span class="preprocessor"> </span><span class="preprocessor">!</span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_COM //test_ref/idl/tdef/LANGUAGE_COM //test_ref/idl/tag/LANGUAGE_COM //test_ref/idl/econst/LANGUAGE_COM //test_ref/idl/struct/LANGUAGE_COM //test_ref/idl/data/LANGUAGE_COM //test_ref/idl/clconst/LANGUAGE_COM //test_ref/idl/intf/LANGUAGE_COM //test_ref/idl/instm/LANGUAGE_COM //test_ref/idl/clm/LANGUAGE_COM //test_ref/idl/intfcm/LANGUAGE_COM //test_ref/idl/intfm/LANGUAGE_COM //test_ref/idl/func/LANGUAGE_COM //test_ref/idl/ftmplt/LANGUAGE_COM //test_ref/idl/defn/LANGUAGE_COM //test_ref/idl/macro/LANGUAGE_COM //test_ref/doc/com/intfm/LANGUAGE_COM" --><span class="preprocessor">LANGUAGE_COM</span><!-- /a --><span class="preprocessor">)</span> 
	        <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/ENABLE_SVG //test_ref/idl/tdef/ENABLE_SVG //test_ref/idl/tag/ENABLE_SVG //test_ref/idl/econst/ENABLE_SVG //test_ref/idl/struct/ENABLE_SVG //test_ref/idl/data/ENABLE_SVG //test_ref/idl/clconst/ENABLE_SVG //test_ref/idl/intf/ENABLE_SVG //test_ref/idl/instm/ENABLE_SVG //test_ref/idl/clm/ENABLE_SVG //test_ref/idl/intfcm/ENABLE_SVG //test_ref/idl/intfm/ENABLE_SVG //test_ref/idl/func/ENABLE_SVG //test_ref/idl/ftmplt/ENABLE_SVG //test_ref/idl/defn/ENABLE_SVG //test_ref/idl/macro/ENABLE_SVG //test_ref/doc/com/intfm/ENABLE_SVG" --><span class="preprocessor">ENABLE_SVG</span><!-- /a --> 
	        <!-- a logicalPath="//test_ref/idl/cl/SVGDocument //test_ref/idl/tdef/SVGDocument //test_ref/idl/tag/SVGDocument //test_ref/idl/econst/SVGDocument //test_ref/idl/struct/SVGDocument //test_ref/idl/clconst/SVGDocument //test_ref/idl/intf/SVGDocument" --><span class="type">SVGDocument</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/instm/getSVGDocument //test_ref/idl/clm/getSVGDocument //test_ref/idl/intfcm/getSVGDocument //test_ref/idl/intfm/getSVGDocument //test_ref/idl/func/getSVGDocument //test_ref/idl/ftmplt/getSVGDocument //test_ref/idl/defn/getSVGDocument //test_ref/idl/macro/getSVGDocument" --><span class="function">getSVGDocument</span><!-- /a -->() <span class="keyword">raises</span>(<!-- a logicalPath="//test_ref/idl/cl/DOMException //test_ref/idl/tdef/DOMException //test_ref/idl/tag/DOMException //test_ref/idl/econst/DOMException //test_ref/idl/struct/DOMException //test_ref/idl/clconst/DOMException //test_ref/idl/intf/DOMException" --><span class="type">DOMException</span><!-- /a -->); 
	        <span class="">#endif</span>  
	        <span class="">#endif</span>  
	        };  
	} 
END OF OBJECT


OBJECT: HTMLEmbedElement (HeaderDoc::CPPClass)
	<span class="keyword">interface</span>         <!-- a logicalPath="//test_ref/idl/cl/HTMLEmbedElement //test_ref/idl/tdef/HTMLEmbedElement //test_ref/idl/tag/HTMLEmbedElement //test_ref/idl/econst/HTMLEmbedElement //test_ref/idl/struct/HTMLEmbedElement //test_ref/idl/clconst/HTMLEmbedElement //test_ref/idl/intf/HTMLEmbedElement" --><span class="type">HTMLEmbedElement</span><!-- /a --> : <!-- a logicalPath="//test_ref/idl/cl/HTMLElement //test_ref/idl/tdef/HTMLElement //test_ref/idl/tag/HTMLElement //test_ref/idl/econst/HTMLElement //test_ref/idl/struct/HTMLElement //test_ref/idl/clconst/HTMLElement //test_ref/idl/intf/HTMLElement" --><span class="type">HTMLElement</span><!-- /a --> { 
	    <span class="comment">/*! attribute align */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/align //test_ref/idl/data/align" --><span class="var">align</span><!-- /a -->; 
	    <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_JAVASCRIPT //test_ref/idl/tdef/LANGUAGE_JAVASCRIPT //test_ref/idl/tag/LANGUAGE_JAVASCRIPT //test_ref/idl/econst/LANGUAGE_JAVASCRIPT //test_ref/idl/struct/LANGUAGE_JAVASCRIPT //test_ref/idl/data/LANGUAGE_JAVASCRIPT //test_ref/idl/clconst/LANGUAGE_JAVASCRIPT //test_ref/idl/intf/LANGUAGE_JAVASCRIPT //test_ref/idl/instm/LANGUAGE_JAVASCRIPT //test_ref/idl/clm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfcm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfm/LANGUAGE_JAVASCRIPT //test_ref/idl/func/LANGUAGE_JAVASCRIPT //test_ref/idl/ftmplt/LANGUAGE_JAVASCRIPT //test_ref/idl/defn/LANGUAGE_JAVASCRIPT //test_ref/idl/macro/LANGUAGE_JAVASCRIPT //test_ref/doc/com/intfm/LANGUAGE_JAVASCRIPT" --><span class="preprocessor">LANGUAGE_JAVASCRIPT</span><!-- /a --><span class="preprocessor">)</span> 
	    <span class="comment">/*! attribute height */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
	    <span class="">#else</span> 
	    <span class="keyword">attribute</span> <span class="keyword">long</span> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
	    <span class="">#endif</span>  
	    <span class="comment">/*! attribute name */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/name //test_ref/idl/data/name" --><span class="var">name</span><!-- /a -->; 
	    <span class="comment">/*! attribute src */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/src //test_ref/idl/data/src" --><span class="var">src</span><!-- /a -->; 
	    <span class="comment">/*! attribute type */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/type //test_ref/idl/data/type" --><span class="var">type</span><!-- /a -->; 
	    <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_JAVASCRIPT //test_ref/idl/tdef/LANGUAGE_JAVASCRIPT //test_ref/idl/tag/LANGUAGE_JAVASCRIPT //test_ref/idl/econst/LANGUAGE_JAVASCRIPT //test_ref/idl/struct/LANGUAGE_JAVASCRIPT //test_ref/idl/data/LANGUAGE_JAVASCRIPT //test_ref/idl/clconst/LANGUAGE_JAVASCRIPT //test_ref/idl/intf/LANGUAGE_JAVASCRIPT //test_ref/idl/instm/LANGUAGE_JAVASCRIPT //test_ref/idl/clm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfcm/LANGUAGE_JAVASCRIPT //test_ref/idl/intfm/LANGUAGE_JAVASCRIPT //test_ref/idl/func/LANGUAGE_JAVASCRIPT //test_ref/idl/ftmplt/LANGUAGE_JAVASCRIPT //test_ref/idl/defn/LANGUAGE_JAVASCRIPT //test_ref/idl/macro/LANGUAGE_JAVASCRIPT //test_ref/doc/com/intfm/LANGUAGE_JAVASCRIPT" --><span class="preprocessor">LANGUAGE_JAVASCRIPT</span><!-- /a --><span class="preprocessor">)</span> 
	    <span class="comment">/*! attribute width */</span>
	    <span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
	    <span class="">#else</span> 
	    <span class="keyword">attribute</span> <span class="keyword">long</span> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
	    <span class="">#endif</span>   
	    <span class="">#if</span><span class="preprocessor"> </span><span class="preprocessor">!</span><!-- a logicalPath="//test_ref/idl/cl/defined //test_ref/idl/tdef/defined //test_ref/idl/tag/defined //test_ref/idl/econst/defined //test_ref/idl/struct/defined //test_ref/idl/data/defined //test_ref/idl/clconst/defined //test_ref/idl/intf/defined //test_ref/idl/instm/defined //test_ref/idl/clm/defined //test_ref/idl/intfcm/defined //test_ref/idl/intfm/defined //test_ref/idl/func/defined //test_ref/idl/ftmplt/defined //test_ref/idl/defn/defined //test_ref/idl/macro/defined //test_ref/doc/com/intfm/defined" --><span class="preprocessor">defined</span><!-- /a --><span class="preprocessor">(</span><!-- a logicalPath="//test_ref/idl/cl/LANGUAGE_COM //test_ref/idl/tdef/LANGUAGE_COM //test_ref/idl/tag/LANGUAGE_COM //test_ref/idl/econst/LANGUAGE_COM //test_ref/idl/struct/LANGUAGE_COM //test_ref/idl/data/LANGUAGE_COM //test_ref/idl/clconst/LANGUAGE_COM //test_ref/idl/intf/LANGUAGE_COM //test_ref/idl/instm/LANGUAGE_COM //test_ref/idl/clm/LANGUAGE_COM //test_ref/idl/intfcm/LANGUAGE_COM //test_ref/idl/intfm/LANGUAGE_COM //test_ref/idl/func/LANGUAGE_COM //test_ref/idl/ftmplt/LANGUAGE_COM //test_ref/idl/defn/LANGUAGE_COM //test_ref/idl/macro/LANGUAGE_COM //test_ref/doc/com/intfm/LANGUAGE_COM" --><span class="preprocessor">LANGUAGE_COM</span><!-- /a --><span class="preprocessor">)</span> 
	    <span class="">#if</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/idl/cl/ENABLE_SVG //test_ref/idl/tdef/ENABLE_SVG //test_ref/idl/tag/ENABLE_SVG //test_ref/idl/econst/ENABLE_SVG //test_ref/idl/struct/ENABLE_SVG //test_ref/idl/data/ENABLE_SVG //test_ref/idl/clconst/ENABLE_SVG //test_ref/idl/intf/ENABLE_SVG //test_ref/idl/instm/ENABLE_SVG //test_ref/idl/clm/ENABLE_SVG //test_ref/idl/intfcm/ENABLE_SVG //test_ref/idl/intfm/ENABLE_SVG //test_ref/idl/func/ENABLE_SVG //test_ref/idl/ftmplt/ENABLE_SVG //test_ref/idl/defn/ENABLE_SVG //test_ref/idl/macro/ENABLE_SVG //test_ref/doc/com/intfm/ENABLE_SVG" --><span class="preprocessor">ENABLE_SVG</span><!-- /a --> 
	    <!-- a logicalPath="//test_ref/idl/cl/SVGDocument //test_ref/idl/tdef/SVGDocument //test_ref/idl/tag/SVGDocument //test_ref/idl/econst/SVGDocument //test_ref/idl/struct/SVGDocument //test_ref/idl/clconst/SVGDocument //test_ref/idl/intf/SVGDocument" --><span class="type">SVGDocument</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/instm/getSVGDocument //test_ref/idl/clm/getSVGDocument //test_ref/idl/intfcm/getSVGDocument //test_ref/idl/intfm/getSVGDocument //test_ref/idl/func/getSVGDocument //test_ref/idl/ftmplt/getSVGDocument //test_ref/idl/defn/getSVGDocument //test_ref/idl/macro/getSVGDocument" --><span class="function">getSVGDocument</span><!-- /a -->() <span class="keyword">raises</span>(<!-- a logicalPath="//test_ref/idl/cl/DOMException //test_ref/idl/tdef/DOMException //test_ref/idl/tag/DOMException //test_ref/idl/econst/DOMException //test_ref/idl/struct/DOMException //test_ref/idl/clconst/DOMException //test_ref/idl/intf/DOMException" --><span class="type">DOMException</span><!-- /a -->); 
	    <span class="">#endif</span>  
	    <span class="">#endif</span>  
	}; 
END OF OBJECT


OBJECT: getSVGDocument (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/idl/cl/SVGDocument //test_ref/idl/tdef/SVGDocument //test_ref/idl/tag/SVGDocument //test_ref/idl/econst/SVGDocument //test_ref/idl/struct/SVGDocument //test_ref/idl/clconst/SVGDocument //test_ref/idl/intf/SVGDocument" --><span class="type">SVGDocument</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/instm/getSVGDocument //test_ref/idl/clm/getSVGDocument //test_ref/idl/intfcm/getSVGDocument //test_ref/idl/intfm/getSVGDocument //test_ref/idl/func/getSVGDocument //test_ref/idl/ftmplt/getSVGDocument //test_ref/idl/defn/getSVGDocument //test_ref/idl/macro/getSVGDocument" --><span class="function">getSVGDocument</span><!-- /a -->() <span class="keyword">raises</span>(<!-- a logicalPath="//test_ref/idl/cl/DOMException //test_ref/idl/tdef/DOMException //test_ref/idl/tag/DOMException //test_ref/idl/econst/DOMException //test_ref/idl/struct/DOMException //test_ref/idl/clconst/DOMException //test_ref/idl/intf/DOMException" --><span class="type">DOMException</span><!-- /a -->); 
END OF OBJECT


OBJECT: align (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/align //test_ref/idl/data/align" --><span class="var">align</span><!-- /a -->; 
END OF OBJECT


OBJECT: height (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
END OF OBJECT


OBJECT: height (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
END OF OBJECT


OBJECT: height (HeaderDoc::Var)
	<span class="keyword">attribute</span> <span class="keyword">long</span> <!-- a logicalPath="//test_ref/idl/econst/height //test_ref/idl/data/height" --><span class="var">height</span><!-- /a -->; 
END OF OBJECT


OBJECT: name (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/name //test_ref/idl/data/name" --><span class="var">name</span><!-- /a -->; 
END OF OBJECT


OBJECT: name (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/name //test_ref/idl/data/name" --><span class="var">name</span><!-- /a -->; 
END OF OBJECT


OBJECT: src (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/src //test_ref/idl/data/src" --><span class="var">src</span><!-- /a -->; 
END OF OBJECT


OBJECT: type (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/type //test_ref/idl/data/type" --><span class="var">type</span><!-- /a -->; 
END OF OBJECT


OBJECT: width (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
END OF OBJECT


OBJECT: width (HeaderDoc::Var)
	<span class="keyword">attribute</span> <!-- a logicalPath="//test_ref/idl/cl/DOMString //test_ref/idl/tdef/DOMString //test_ref/idl/tag/DOMString //test_ref/idl/econst/DOMString //test_ref/idl/struct/DOMString //test_ref/idl/clconst/DOMString //test_ref/idl/intf/DOMString" --><span class="type">DOMString</span><!-- /a --> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
END OF OBJECT


OBJECT: width (HeaderDoc::Var)
	<span class="keyword">attribute</span> <span class="keyword">long</span> <!-- a logicalPath="//test_ref/idl/econst/width //test_ref/idl/data/width" --><span class="var">width</span><!-- /a -->; 
END OF OBJECT



$3|IDL$6|parser