FrT;@1|>>0|$15|HeaderDoc::Test%26|$4|CODE$7|COMMENT$7|CPPCODE$15|EXPECTED_RESULT$23|EXPECTED_RESULT_ALLDECS$7|FAILMSG$8|FILENAME$4|LANG$4|NAME$6|RESULT$14|RESULT_ALLDECS$7|SUBLANG$4|TYPE$573|class foo : public IOService
{
        /*! @function
                First one
         */
#ifdef LP64
        char *first_func(void *x);
#else
        char *first_func(long x);
        char *first_func64(void *x);
#endif


        int hidden_2(int this_function_should_not_appear_either);

        /*! @function
                second one
         */
#ifdef LP64
        char *second_func(void *x);
#else
        char *second_func64(void *x);
        char *second_func(long x);
#endif

        char *another_hidden_function(char *this_function_also_should_not_appear);
};
$24|/*! This is a class. */
$0|$30033|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 0
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 1
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/function_block_6.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/function_block_6.test
$parserState->{ISFORWARDDECLARATION} => 0
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => -1
$parserState->{categoryClass} => 
$parserState->{classNameFound} => 1
$parserState->{classtype} => class
$parserState->{forceClassDone} => 1
$parserState->{forceClassName} => foo
$parserState->{forceClassSuper} =>  public IOService 
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 23
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => ;
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 4
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 1
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => class
$parserState->{prekeywordsodname} => 
$parserState->{prekeywordsodtype} => 
$parserState->{returntype} => class foo : public IOService  
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => IOService
$parserState->{sodtype} =>  public
$parserState->{sodtypeclasstoken} => class
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 1
$parserState->{storeDec} => 
$parserState->{temponlyComments} => 0
$parserState->{treePopTwo} => 0
$parserState->{typestring} => foo
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 23
typelist: class
namelist: foo
posstypes:   IOService 
value: 
returntype: public
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 4
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---class
+--- 
+---foo
+--- 
+---:
+--- 
+---public
+--- 
+---IOService
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function
|   |   +---
First one
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-#ifdef (HAS STATE)
|   |   +--- 
|   |   +---LP64
|   |   +---[ NEWLINE ]
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func
|   +---(
|   |   +---long
|   |   +--- 
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func64
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---        
|   +-*-int (HAS STATE)
|   +--- 
|   +---hidden_2
|   +---(
|   |   +---int
|   |   +--- 
|   |   +---this_function_should_not_appear_either
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function
|   |   +---
second one
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-#ifdef (HAS STATE)
|   |   +--- 
|   |   +---LP64
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func64
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func
|   +---(
|   |   +---long
|   |   +--- 
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---another_hidden_function
|   +---(
|   |   +---char
|   |   +--- 
|   |   +---*
|   |   +---this_function_also_should_not_appear
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: function block 6
APIUID: //test_ref/doc/header/function_block_6.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: <p></p>
LONG ATTRIBUTES: <p></p>
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::CPPClass
    NAME: foo
    APIUID: 
    ABSTRACT: ""
    DISCUSSION: "<p>This is a class. "
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::CPPClass"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Superclass:</b> <!-- a logicalPath="//test_ref/cpp/cl/IOService //test_ref/cpp/tdef/IOService //test_ref/cpp/tag/IOService //test_ref/cpp/econst/IOService //test_ref/cpp/struct/IOService //test_ref/cpp/data/IOService //test_ref/cpp/clconst/IOService //test_ref/cpp/intf/IOService //test_ref/cpp/instm/IOService //test_ref/cpp/clm/IOService //test_ref/cpp/intfcm/IOService //test_ref/cpp/intfm/IOService //test_ref/cpp/func/IOService //test_ref/cpp/ftmplt/IOService //test_ref/cpp/defn/IOService //test_ref/cpp/macro/IOService //test_ref/doc/com/intfm/IOService" -->IOService<!-- /a --><br>
<b>Declared In:</b> <a href="../../index.html" target="_top">function block 6</a><br>
</p>
    LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: first_func
        APIUID: //test_ref/cpp/instm/foo/first_func/char*/(void*)
        ABSTRACT: ""
        DISCUSSION: "<p>First one
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " char *"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: x
            TYPE: void *
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: second_func
        APIUID: //test_ref/cpp/instm/foo/second_func/char*/(void*)
        ABSTRACT: ""
        DISCUSSION: "<p>second one
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " char *"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: x
            TYPE: void *
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: foo (HeaderDoc::CPPClass)
+---class
+--- 
+---foo
+--- 
+---:
+--- 
+---public
+--- 
+---IOService
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function
|   |   +---
First one
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-#ifdef (HAS STATE)
|   |   +--- 
|   |   +---LP64
|   |   +---[ NEWLINE ]
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func
|   +---(
|   |   +---long
|   |   +--- 
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func64
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---        
|   +-*-int (HAS STATE)
|   +--- 
|   +---hidden_2
|   +---(
|   |   +---int
|   |   +--- 
|   |   +---this_function_should_not_appear_either
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function
|   |   +---
second one
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-#ifdef (HAS STATE)
|   |   +--- 
|   |   +---LP64
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func64
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func
|   +---(
|   |   +---long
|   |   +--- 
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---another_hidden_function
|   +---(
|   |   +---char
|   |   +--- 
|   |   +---*
|   |   +---this_function_also_should_not_appear
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
END OF OBJECT


OBJECT: first_func (HeaderDoc::Function)
+-*-char (HAS STATE)
+--- 
+---*
+---first_func
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---first_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---first_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-int (HAS STATE)
+--- 
+---hidden_2
+---(
|   +---int
|   +--- 
|   +---this_function_should_not_appear_either
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function
|   +---
second one
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-#ifdef (HAS STATE)
|   +--- 
|   +---LP64
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---another_hidden_function
+---(
|   +---char
|   +--- 
|   +---*
|   +---this_function_also_should_not_appear
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: second_func (HeaderDoc::Function)
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---another_hidden_function
+---(
|   +---char
|   +--- 
|   +---*
|   +---this_function_also_should_not_appear
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: foo (HeaderDoc::CPPClass)
	<span class="keyword">class</span> <!-- a logicalPath="//test_ref/cpp/cl/foo //test_ref/cpp/tdef/foo //test_ref/cpp/tag/foo //test_ref/cpp/econst/foo //test_ref/cpp/struct/foo //test_ref/cpp/clconst/foo //test_ref/cpp/intf/foo" --><span class="type">foo</span><!-- /a --> : <span class="keyword">public</span> <!-- a logicalPath="//test_ref/cpp/cl/IOService //test_ref/cpp/tdef/IOService //test_ref/cpp/tag/IOService //test_ref/cpp/econst/IOService //test_ref/cpp/struct/IOService //test_ref/cpp/clconst/IOService //test_ref/cpp/intf/IOService" --><span class="type">IOService</span><!-- /a --> { 
	    <span class="comment">/*! @function
	First one</span>
	        <span class="comment">*/</span>
	    <span class="">#ifdef</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/cpp/cl/LP64 //test_ref/cpp/tdef/LP64 //test_ref/cpp/tag/LP64 //test_ref/cpp/econst/LP64 //test_ref/cpp/struct/LP64 //test_ref/cpp/data/LP64 //test_ref/cpp/clconst/LP64 //test_ref/cpp/intf/LP64 //test_ref/cpp/instm/LP64 //test_ref/cpp/clm/LP64 //test_ref/cpp/intfcm/LP64 //test_ref/cpp/intfm/LP64 //test_ref/cpp/func/LP64 //test_ref/cpp/ftmplt/LP64 //test_ref/cpp/defn/LP64 //test_ref/cpp/macro/LP64 //test_ref/doc/com/intfm/LP64" --><span class="preprocessor">LP64</span><!-- /a --> 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/first_func //test_ref/cpp/clm/first_func //test_ref/cpp/intfcm/first_func //test_ref/cpp/intfm/first_func //test_ref/cpp/func/first_func //test_ref/cpp/ftmplt/first_func //test_ref/cpp/defn/first_func //test_ref/cpp/macro/first_func" --><span class="function">first_func</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
	    <span class="">#else</span> 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/first_func //test_ref/cpp/clm/first_func //test_ref/cpp/intfcm/first_func //test_ref/cpp/intfm/first_func //test_ref/cpp/func/first_func //test_ref/cpp/ftmplt/first_func //test_ref/cpp/defn/first_func //test_ref/cpp/macro/first_func" --><span class="function">first_func</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/long //test_ref/cpp/tdef/long //test_ref/cpp/tag/long //test_ref/cpp/econst/long //test_ref/cpp/struct/long //test_ref/cpp/clconst/long //test_ref/cpp/intf/long" --><span class="type">long</span><!-- /a --> <span class="param">x</span>); 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/first_func64 //test_ref/cpp/clm/first_func64 //test_ref/cpp/intfcm/first_func64 //test_ref/cpp/intfm/first_func64 //test_ref/cpp/func/first_func64 //test_ref/cpp/ftmplt/first_func64 //test_ref/cpp/defn/first_func64 //test_ref/cpp/macro/first_func64" --><span class="function">first_func64</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
	    <span class="">#endif</span>    
	    <!-- a logicalPath="//test_ref/cpp/cl/int //test_ref/cpp/tdef/int //test_ref/cpp/tag/int //test_ref/cpp/econst/int //test_ref/cpp/struct/int //test_ref/cpp/clconst/int //test_ref/cpp/intf/int" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/hidden_2 //test_ref/cpp/clm/hidden_2 //test_ref/cpp/intfcm/hidden_2 //test_ref/cpp/intfm/hidden_2 //test_ref/cpp/func/hidden_2 //test_ref/cpp/ftmplt/hidden_2 //test_ref/cpp/defn/hidden_2 //test_ref/cpp/macro/hidden_2" --><span class="function">hidden_2</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/int //test_ref/cpp/tdef/int //test_ref/cpp/tag/int //test_ref/cpp/econst/int //test_ref/cpp/struct/int //test_ref/cpp/clconst/int //test_ref/cpp/intf/int" --><span class="type">int</span><!-- /a --> <span class="param">this_function_should_not_appear_either</span>);  
	    <span class="comment">/*! @function
	second one</span>
	        <span class="comment">*/</span>
	    <span class="">#ifdef</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/cpp/cl/LP64 //test_ref/cpp/tdef/LP64 //test_ref/cpp/tag/LP64 //test_ref/cpp/econst/LP64 //test_ref/cpp/struct/LP64 //test_ref/cpp/data/LP64 //test_ref/cpp/clconst/LP64 //test_ref/cpp/intf/LP64 //test_ref/cpp/instm/LP64 //test_ref/cpp/clm/LP64 //test_ref/cpp/intfcm/LP64 //test_ref/cpp/intfm/LP64 //test_ref/cpp/func/LP64 //test_ref/cpp/ftmplt/LP64 //test_ref/cpp/defn/LP64 //test_ref/cpp/macro/LP64 //test_ref/doc/com/intfm/LP64" --><span class="preprocessor">LP64</span><!-- /a --> 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/second_func //test_ref/cpp/clm/second_func //test_ref/cpp/intfcm/second_func //test_ref/cpp/intfm/second_func //test_ref/cpp/func/second_func //test_ref/cpp/ftmplt/second_func //test_ref/cpp/defn/second_func //test_ref/cpp/macro/second_func" --><span class="function">second_func</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
	    <span class="">#else</span> 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/second_func64 //test_ref/cpp/clm/second_func64 //test_ref/cpp/intfcm/second_func64 //test_ref/cpp/intfm/second_func64 //test_ref/cpp/func/second_func64 //test_ref/cpp/ftmplt/second_func64 //test_ref/cpp/defn/second_func64 //test_ref/cpp/macro/second_func64" --><span class="function">second_func64</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/second_func //test_ref/cpp/clm/second_func //test_ref/cpp/intfcm/second_func //test_ref/cpp/intfm/second_func //test_ref/cpp/func/second_func //test_ref/cpp/ftmplt/second_func //test_ref/cpp/defn/second_func //test_ref/cpp/macro/second_func" --><span class="function">second_func</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/long //test_ref/cpp/tdef/long //test_ref/cpp/tag/long //test_ref/cpp/econst/long //test_ref/cpp/struct/long //test_ref/cpp/clconst/long //test_ref/cpp/intf/long" --><span class="type">long</span><!-- /a --> <span class="param">x</span>); 
	    <span class="">#endif</span>   
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/another_hidden_function //test_ref/cpp/clm/another_hidden_function //test_ref/cpp/intfcm/another_hidden_function //test_ref/cpp/intfm/another_hidden_function //test_ref/cpp/func/another_hidden_function //test_ref/cpp/ftmplt/another_hidden_function //test_ref/cpp/defn/another_hidden_function //test_ref/cpp/macro/another_hidden_function" --><span class="function">another_hidden_function</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><span class="param">this_function_also_should_not_appear</span>); 
	};  
END OF OBJECT


OBJECT: first_func (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/first_func //test_ref/cpp/clm/first_func //test_ref/cpp/intfcm/first_func //test_ref/cpp/intfm/first_func //test_ref/cpp/func/first_func //test_ref/cpp/ftmplt/first_func //test_ref/cpp/defn/first_func //test_ref/cpp/macro/first_func" --><span class="function">first_func</span><!-- /a -->(
	    <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
END OF OBJECT


OBJECT: second_func (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/second_func //test_ref/cpp/clm/second_func //test_ref/cpp/intfcm/second_func //test_ref/cpp/intfm/second_func //test_ref/cpp/func/second_func //test_ref/cpp/ftmplt/second_func //test_ref/cpp/defn/second_func //test_ref/cpp/macro/second_func" --><span class="function">second_func</span><!-- /a -->(
	    <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
END OF OBJECT



$55463|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 0
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 1
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/function_block_6.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/function_block_6.test
$parserState->{ISFORWARDDECLARATION} => 0
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => -1
$parserState->{categoryClass} => 
$parserState->{classNameFound} => 1
$parserState->{classtype} => class
$parserState->{forceClassDone} => 1
$parserState->{forceClassName} => foo
$parserState->{forceClassSuper} =>  public IOService 
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 23
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => ;
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 4
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 1
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => class
$parserState->{prekeywordsodname} => 
$parserState->{prekeywordsodtype} => 
$parserState->{returntype} => class foo : public IOService  
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => IOService
$parserState->{sodtype} =>  public
$parserState->{sodtypeclasstoken} => class
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 1
$parserState->{storeDec} => 
$parserState->{temponlyComments} => 0
$parserState->{treePopTwo} => 0
$parserState->{typestring} => foo
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 23
typelist: class
namelist: foo
posstypes:   IOService 
value: 
returntype: public
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 4
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---class
+--- 
+---foo
+--- 
+---:
+--- 
+---public
+--- 
+---IOService
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function
|   |   +---
First one
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-#ifdef (HAS STATE)
|   |   +--- 
|   |   +---LP64
|   |   +---[ NEWLINE ]
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func
|   +---(
|   |   +---long
|   |   +--- 
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func64
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---        
|   +-*-int (HAS STATE)
|   +--- 
|   +---hidden_2
|   +---(
|   |   +---int
|   |   +--- 
|   |   +---this_function_should_not_appear_either
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function
|   |   +---
second one
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-#ifdef (HAS STATE)
|   |   +--- 
|   |   +---LP64
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func64
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func
|   +---(
|   |   +---long
|   |   +--- 
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---another_hidden_function
|   +---(
|   |   +---char
|   |   +--- 
|   |   +---*
|   |   +---this_function_also_should_not_appear
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: function block 6
APIUID: //test_ref/doc/header/function_block_6.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: <p></p>
LONG ATTRIBUTES: <p></p>
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::CPPClass
    NAME: foo
    APIUID: 
    ABSTRACT: ""
    DISCUSSION: "<p>This is a class. "
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::CPPClass"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Superclass:</b> <!-- a logicalPath="//test_ref/cpp/cl/IOService //test_ref/cpp/tdef/IOService //test_ref/cpp/tag/IOService //test_ref/cpp/econst/IOService //test_ref/cpp/struct/IOService //test_ref/cpp/data/IOService //test_ref/cpp/clconst/IOService //test_ref/cpp/intf/IOService //test_ref/cpp/instm/IOService //test_ref/cpp/clm/IOService //test_ref/cpp/intfcm/IOService //test_ref/cpp/intfm/IOService //test_ref/cpp/func/IOService //test_ref/cpp/ftmplt/IOService //test_ref/cpp/defn/IOService //test_ref/cpp/macro/IOService //test_ref/doc/com/intfm/IOService" -->IOService<!-- /a --><br>
<b>Declared In:</b> <a href="../../index.html" target="_top">function block 6</a><br>
</p>
    LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: first_func
        APIUID: //test_ref/cpp/instm/foo/first_func/char*/(void*)
        ABSTRACT: ""
        DISCUSSION: "<p>First one
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " char *"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: x
            TYPE: void *
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: first_func
        APIUID: //test_ref/cpp/instm/foo/first_func/char*/(long)
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " char *"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "1"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: x
            TYPE: long
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: first_func64
        APIUID: //test_ref/cpp/instm/foo/first_func64/char*/(void*)
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " char *"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "1"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: x
            TYPE: void *
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: hidden_2
        APIUID: //test_ref/cpp/instm/foo/hidden_2/int/(int)
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " int"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "1"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: this_function_should_not_appear_either
            TYPE: int
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: second_func
        APIUID: //test_ref/cpp/instm/foo/second_func/char*/(void*)
        ABSTRACT: ""
        DISCUSSION: "<p>second one
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " char *"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: x
            TYPE: void *
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: second_func64
        APIUID: //test_ref/cpp/instm/foo/second_func64/char*/(void*)
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " char *"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "1"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: x
            TYPE: void *
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: second_func
        APIUID: //test_ref/cpp/instm/foo/second_func/char*/(long)
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " char *"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "1"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: x
            TYPE: long
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: another_hidden_function
        APIUID: //test_ref/cpp/instm/foo/another_hidden_function/char*/(char*)
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " char *"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "1"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: this_function_also_should_not_appear
            TYPE: char *
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: foo (HeaderDoc::CPPClass)
+---class
+--- 
+---foo
+--- 
+---:
+--- 
+---public
+--- 
+---IOService
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function
|   |   +---
First one
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-#ifdef (HAS STATE)
|   |   +--- 
|   |   +---LP64
|   |   +---[ NEWLINE ]
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func
|   +---(
|   |   +---long
|   |   +--- 
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func64
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---        
|   +-*-int (HAS STATE)
|   +--- 
|   +---hidden_2
|   +---(
|   |   +---int
|   |   +--- 
|   |   +---this_function_should_not_appear_either
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function
|   |   +---
second one
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-#ifdef (HAS STATE)
|   |   +--- 
|   |   +---LP64
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func64
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func
|   +---(
|   |   +---long
|   |   +--- 
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---another_hidden_function
|   +---(
|   |   +---char
|   |   +--- 
|   |   +---*
|   |   +---this_function_also_should_not_appear
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
END OF OBJECT


OBJECT: first_func (HeaderDoc::Function)
+-*-char (HAS STATE)
+--- 
+---*
+---first_func
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---first_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---first_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-int (HAS STATE)
+--- 
+---hidden_2
+---(
|   +---int
|   +--- 
|   +---this_function_should_not_appear_either
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function
|   +---
second one
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-#ifdef (HAS STATE)
|   +--- 
|   +---LP64
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---another_hidden_function
+---(
|   +---char
|   +--- 
|   +---*
|   +---this_function_also_should_not_appear
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: first_func (HeaderDoc::Function)
+-*-char (HAS STATE)
+--- 
+---*
+---first_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---first_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-int (HAS STATE)
+--- 
+---hidden_2
+---(
|   +---int
|   +--- 
|   +---this_function_should_not_appear_either
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function
|   +---
second one
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-#ifdef (HAS STATE)
|   +--- 
|   +---LP64
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---another_hidden_function
+---(
|   +---char
|   +--- 
|   +---*
|   +---this_function_also_should_not_appear
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: first_func64 (HeaderDoc::Function)
+-*-char (HAS STATE)
+--- 
+---*
+---first_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-int (HAS STATE)
+--- 
+---hidden_2
+---(
|   +---int
|   +--- 
|   +---this_function_should_not_appear_either
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function
|   +---
second one
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-#ifdef (HAS STATE)
|   +--- 
|   +---LP64
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---another_hidden_function
+---(
|   +---char
|   +--- 
|   +---*
|   +---this_function_also_should_not_appear
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: hidden_2 (HeaderDoc::Function)
+-*-int (HAS STATE)
+--- 
+---hidden_2
+---(
|   +---int
|   +--- 
|   +---this_function_should_not_appear_either
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function
|   +---
second one
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-#ifdef (HAS STATE)
|   +--- 
|   +---LP64
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---another_hidden_function
+---(
|   +---char
|   +--- 
|   +---*
|   +---this_function_also_should_not_appear
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: second_func (HeaderDoc::Function)
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---another_hidden_function
+---(
|   +---char
|   +--- 
|   +---*
|   +---this_function_also_should_not_appear
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: second_func64 (HeaderDoc::Function)
+-*-char (HAS STATE)
+--- 
+---*
+---second_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---another_hidden_function
+---(
|   +---char
|   +--- 
|   +---*
|   +---this_function_also_should_not_appear
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: second_func (HeaderDoc::Function)
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---another_hidden_function
+---(
|   +---char
|   +--- 
|   +---*
|   +---this_function_also_should_not_appear
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: another_hidden_function (HeaderDoc::Function)
+-*-char (HAS STATE)
+--- 
+---*
+---another_hidden_function
+---(
|   +---char
|   +--- 
|   +---*
|   +---this_function_also_should_not_appear
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---}
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: foo (HeaderDoc::CPPClass)
	<span class="keyword">class</span> <!-- a logicalPath="//test_ref/cpp/cl/foo //test_ref/cpp/tdef/foo //test_ref/cpp/tag/foo //test_ref/cpp/econst/foo //test_ref/cpp/struct/foo //test_ref/cpp/clconst/foo //test_ref/cpp/intf/foo" --><span class="type">foo</span><!-- /a --> : <span class="keyword">public</span> <!-- a logicalPath="//test_ref/cpp/cl/IOService //test_ref/cpp/tdef/IOService //test_ref/cpp/tag/IOService //test_ref/cpp/econst/IOService //test_ref/cpp/struct/IOService //test_ref/cpp/clconst/IOService //test_ref/cpp/intf/IOService" --><span class="type">IOService</span><!-- /a --> { 
	    <span class="comment">/*! @function
	First one</span>
	        <span class="comment">*/</span>
	    <span class="">#ifdef</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/cpp/cl/LP64 //test_ref/cpp/tdef/LP64 //test_ref/cpp/tag/LP64 //test_ref/cpp/econst/LP64 //test_ref/cpp/struct/LP64 //test_ref/cpp/data/LP64 //test_ref/cpp/clconst/LP64 //test_ref/cpp/intf/LP64 //test_ref/cpp/instm/LP64 //test_ref/cpp/clm/LP64 //test_ref/cpp/intfcm/LP64 //test_ref/cpp/intfm/LP64 //test_ref/cpp/func/LP64 //test_ref/cpp/ftmplt/LP64 //test_ref/cpp/defn/LP64 //test_ref/cpp/macro/LP64 //test_ref/doc/com/intfm/LP64" --><span class="preprocessor">LP64</span><!-- /a --> 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/first_func //test_ref/cpp/clm/first_func //test_ref/cpp/intfcm/first_func //test_ref/cpp/intfm/first_func //test_ref/cpp/func/first_func //test_ref/cpp/ftmplt/first_func //test_ref/cpp/defn/first_func //test_ref/cpp/macro/first_func" --><span class="function">first_func</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
	    <span class="">#else</span> 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/first_func //test_ref/cpp/clm/first_func //test_ref/cpp/intfcm/first_func //test_ref/cpp/intfm/first_func //test_ref/cpp/func/first_func //test_ref/cpp/ftmplt/first_func //test_ref/cpp/defn/first_func //test_ref/cpp/macro/first_func" --><span class="function">first_func</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/long //test_ref/cpp/tdef/long //test_ref/cpp/tag/long //test_ref/cpp/econst/long //test_ref/cpp/struct/long //test_ref/cpp/clconst/long //test_ref/cpp/intf/long" --><span class="type">long</span><!-- /a --> <span class="param">x</span>); 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/first_func64 //test_ref/cpp/clm/first_func64 //test_ref/cpp/intfcm/first_func64 //test_ref/cpp/intfm/first_func64 //test_ref/cpp/func/first_func64 //test_ref/cpp/ftmplt/first_func64 //test_ref/cpp/defn/first_func64 //test_ref/cpp/macro/first_func64" --><span class="function">first_func64</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
	    <span class="">#endif</span>    
	    <!-- a logicalPath="//test_ref/cpp/cl/int //test_ref/cpp/tdef/int //test_ref/cpp/tag/int //test_ref/cpp/econst/int //test_ref/cpp/struct/int //test_ref/cpp/clconst/int //test_ref/cpp/intf/int" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/hidden_2 //test_ref/cpp/clm/hidden_2 //test_ref/cpp/intfcm/hidden_2 //test_ref/cpp/intfm/hidden_2 //test_ref/cpp/func/hidden_2 //test_ref/cpp/ftmplt/hidden_2 //test_ref/cpp/defn/hidden_2 //test_ref/cpp/macro/hidden_2" --><span class="function">hidden_2</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/int //test_ref/cpp/tdef/int //test_ref/cpp/tag/int //test_ref/cpp/econst/int //test_ref/cpp/struct/int //test_ref/cpp/clconst/int //test_ref/cpp/intf/int" --><span class="type">int</span><!-- /a --> <span class="param">this_function_should_not_appear_either</span>);  
	    <span class="comment">/*! @function
	second one</span>
	        <span class="comment">*/</span>
	    <span class="">#ifdef</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/cpp/cl/LP64 //test_ref/cpp/tdef/LP64 //test_ref/cpp/tag/LP64 //test_ref/cpp/econst/LP64 //test_ref/cpp/struct/LP64 //test_ref/cpp/data/LP64 //test_ref/cpp/clconst/LP64 //test_ref/cpp/intf/LP64 //test_ref/cpp/instm/LP64 //test_ref/cpp/clm/LP64 //test_ref/cpp/intfcm/LP64 //test_ref/cpp/intfm/LP64 //test_ref/cpp/func/LP64 //test_ref/cpp/ftmplt/LP64 //test_ref/cpp/defn/LP64 //test_ref/cpp/macro/LP64 //test_ref/doc/com/intfm/LP64" --><span class="preprocessor">LP64</span><!-- /a --> 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/second_func //test_ref/cpp/clm/second_func //test_ref/cpp/intfcm/second_func //test_ref/cpp/intfm/second_func //test_ref/cpp/func/second_func //test_ref/cpp/ftmplt/second_func //test_ref/cpp/defn/second_func //test_ref/cpp/macro/second_func" --><span class="function">second_func</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
	    <span class="">#else</span> 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/second_func64 //test_ref/cpp/clm/second_func64 //test_ref/cpp/intfcm/second_func64 //test_ref/cpp/intfm/second_func64 //test_ref/cpp/func/second_func64 //test_ref/cpp/ftmplt/second_func64 //test_ref/cpp/defn/second_func64 //test_ref/cpp/macro/second_func64" --><span class="function">second_func64</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/second_func //test_ref/cpp/clm/second_func //test_ref/cpp/intfcm/second_func //test_ref/cpp/intfm/second_func //test_ref/cpp/func/second_func //test_ref/cpp/ftmplt/second_func //test_ref/cpp/defn/second_func //test_ref/cpp/macro/second_func" --><span class="function">second_func</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/long //test_ref/cpp/tdef/long //test_ref/cpp/tag/long //test_ref/cpp/econst/long //test_ref/cpp/struct/long //test_ref/cpp/clconst/long //test_ref/cpp/intf/long" --><span class="type">long</span><!-- /a --> <span class="param">x</span>); 
	    <span class="">#endif</span>   
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/another_hidden_function //test_ref/cpp/clm/another_hidden_function //test_ref/cpp/intfcm/another_hidden_function //test_ref/cpp/intfm/another_hidden_function //test_ref/cpp/func/another_hidden_function //test_ref/cpp/ftmplt/another_hidden_function //test_ref/cpp/defn/another_hidden_function //test_ref/cpp/macro/another_hidden_function" --><span class="function">another_hidden_function</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><span class="param">this_function_also_should_not_appear</span>); 
	};  
END OF OBJECT


OBJECT: first_func (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/first_func //test_ref/cpp/clm/first_func //test_ref/cpp/intfcm/first_func //test_ref/cpp/intfm/first_func //test_ref/cpp/func/first_func //test_ref/cpp/ftmplt/first_func //test_ref/cpp/defn/first_func //test_ref/cpp/macro/first_func" --><span class="function">first_func</span><!-- /a -->(
	    <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
END OF OBJECT


OBJECT: first_func (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/first_func //test_ref/cpp/clm/first_func //test_ref/cpp/intfcm/first_func //test_ref/cpp/intfm/first_func //test_ref/cpp/func/first_func //test_ref/cpp/ftmplt/first_func //test_ref/cpp/defn/first_func //test_ref/cpp/macro/first_func" --><span class="function">first_func</span><!-- /a -->(
	    <!-- a logicalPath="//test_ref/cpp/cl/long //test_ref/cpp/tdef/long //test_ref/cpp/tag/long //test_ref/cpp/econst/long //test_ref/cpp/struct/long //test_ref/cpp/clconst/long //test_ref/cpp/intf/long" --><span class="type">long</span><!-- /a --> <span class="param">x</span>); 
END OF OBJECT


OBJECT: first_func64 (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/first_func64 //test_ref/cpp/clm/first_func64 //test_ref/cpp/intfcm/first_func64 //test_ref/cpp/intfm/first_func64 //test_ref/cpp/func/first_func64 //test_ref/cpp/ftmplt/first_func64 //test_ref/cpp/defn/first_func64 //test_ref/cpp/macro/first_func64" --><span class="function">first_func64</span><!-- /a -->(
	    <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
END OF OBJECT


OBJECT: hidden_2 (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/int //test_ref/cpp/tdef/int //test_ref/cpp/tag/int //test_ref/cpp/econst/int //test_ref/cpp/struct/int //test_ref/cpp/clconst/int //test_ref/cpp/intf/int" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/hidden_2 //test_ref/cpp/clm/hidden_2 //test_ref/cpp/intfcm/hidden_2 //test_ref/cpp/intfm/hidden_2 //test_ref/cpp/func/hidden_2 //test_ref/cpp/ftmplt/hidden_2 //test_ref/cpp/defn/hidden_2 //test_ref/cpp/macro/hidden_2" --><span class="function">hidden_2</span><!-- /a -->(
	    <!-- a logicalPath="//test_ref/cpp/cl/int //test_ref/cpp/tdef/int //test_ref/cpp/tag/int //test_ref/cpp/econst/int //test_ref/cpp/struct/int //test_ref/cpp/clconst/int //test_ref/cpp/intf/int" --><span class="type">int</span><!-- /a --> <span class="param">this_function_should_not_appear_either</span>); 
END OF OBJECT


OBJECT: second_func (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/second_func //test_ref/cpp/clm/second_func //test_ref/cpp/intfcm/second_func //test_ref/cpp/intfm/second_func //test_ref/cpp/func/second_func //test_ref/cpp/ftmplt/second_func //test_ref/cpp/defn/second_func //test_ref/cpp/macro/second_func" --><span class="function">second_func</span><!-- /a -->(
	    <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
END OF OBJECT


OBJECT: second_func64 (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/second_func64 //test_ref/cpp/clm/second_func64 //test_ref/cpp/intfcm/second_func64 //test_ref/cpp/intfm/second_func64 //test_ref/cpp/func/second_func64 //test_ref/cpp/ftmplt/second_func64 //test_ref/cpp/defn/second_func64 //test_ref/cpp/macro/second_func64" --><span class="function">second_func64</span><!-- /a -->(
	    <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
END OF OBJECT


OBJECT: second_func (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/second_func //test_ref/cpp/clm/second_func //test_ref/cpp/intfcm/second_func //test_ref/cpp/intfm/second_func //test_ref/cpp/func/second_func //test_ref/cpp/ftmplt/second_func //test_ref/cpp/defn/second_func //test_ref/cpp/macro/second_func" --><span class="function">second_func</span><!-- /a -->(
	    <!-- a logicalPath="//test_ref/cpp/cl/long //test_ref/cpp/tdef/long //test_ref/cpp/tag/long //test_ref/cpp/econst/long //test_ref/cpp/struct/long //test_ref/cpp/clconst/long //test_ref/cpp/intf/long" --><span class="type">long</span><!-- /a --> <span class="param">x</span>); 
END OF OBJECT


OBJECT: another_hidden_function (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/another_hidden_function //test_ref/cpp/clm/another_hidden_function //test_ref/cpp/intfcm/another_hidden_function //test_ref/cpp/intfm/another_hidden_function //test_ref/cpp/func/another_hidden_function //test_ref/cpp/ftmplt/another_hidden_function //test_ref/cpp/defn/another_hidden_function //test_ref/cpp/macro/another_hidden_function" --><span class="function">another_hidden_function</span><!-- /a -->(
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><span class="param">this_function_also_should_not_appear</span>); 
END OF OBJECT



_$44|testsuite/parser_tests/function_block_6.test$1|C$16|function block 6$30033|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 0
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 1
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/function_block_6.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/function_block_6.test
$parserState->{ISFORWARDDECLARATION} => 0
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => -1
$parserState->{categoryClass} => 
$parserState->{classNameFound} => 1
$parserState->{classtype} => class
$parserState->{forceClassDone} => 1
$parserState->{forceClassName} => foo
$parserState->{forceClassSuper} =>  public IOService 
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 23
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => ;
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 4
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 1
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => class
$parserState->{prekeywordsodname} => 
$parserState->{prekeywordsodtype} => 
$parserState->{returntype} => class foo : public IOService  
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => IOService
$parserState->{sodtype} =>  public
$parserState->{sodtypeclasstoken} => class
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 1
$parserState->{storeDec} => 
$parserState->{temponlyComments} => 0
$parserState->{treePopTwo} => 0
$parserState->{typestring} => foo
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 23
typelist: class
namelist: foo
posstypes:   IOService 
value: 
returntype: public
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 4
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---class
+--- 
+---foo
+--- 
+---:
+--- 
+---public
+--- 
+---IOService
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function
|   |   +---
First one
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-#ifdef (HAS STATE)
|   |   +--- 
|   |   +---LP64
|   |   +---[ NEWLINE ]
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func
|   +---(
|   |   +---long
|   |   +--- 
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func64
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---        
|   +-*-int (HAS STATE)
|   +--- 
|   +---hidden_2
|   +---(
|   |   +---int
|   |   +--- 
|   |   +---this_function_should_not_appear_either
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function
|   |   +---
second one
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-#ifdef (HAS STATE)
|   |   +--- 
|   |   +---LP64
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func64
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func
|   +---(
|   |   +---long
|   |   +--- 
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---another_hidden_function
|   +---(
|   |   +---char
|   |   +--- 
|   |   +---*
|   |   +---this_function_also_should_not_appear
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: function block 6
APIUID: //test_ref/doc/header/function_block_6.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: <p></p>
LONG ATTRIBUTES: <p></p>
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::CPPClass
    NAME: foo
    APIUID: 
    ABSTRACT: ""
    DISCUSSION: "<p>This is a class. "
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::CPPClass"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Superclass:</b> <!-- a logicalPath="//test_ref/cpp/cl/IOService //test_ref/cpp/tdef/IOService //test_ref/cpp/tag/IOService //test_ref/cpp/econst/IOService //test_ref/cpp/struct/IOService //test_ref/cpp/data/IOService //test_ref/cpp/clconst/IOService //test_ref/cpp/intf/IOService //test_ref/cpp/instm/IOService //test_ref/cpp/clm/IOService //test_ref/cpp/intfcm/IOService //test_ref/cpp/intfm/IOService //test_ref/cpp/func/IOService //test_ref/cpp/ftmplt/IOService //test_ref/cpp/defn/IOService //test_ref/cpp/macro/IOService //test_ref/doc/com/intfm/IOService" -->IOService<!-- /a --><br>
<b>Declared In:</b> <a href="../../index.html" target="_top">function block 6</a><br>
</p>
    LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: first_func
        APIUID: //test_ref/cpp/instm/foo/first_func/char*/(void*)
        ABSTRACT: ""
        DISCUSSION: "<p>First one
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " char *"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: x
            TYPE: void *
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: second_func
        APIUID: //test_ref/cpp/instm/foo/second_func/char*/(void*)
        ABSTRACT: ""
        DISCUSSION: "<p>second one
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " char *"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: x
            TYPE: void *
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: foo (HeaderDoc::CPPClass)
+---class
+--- 
+---foo
+--- 
+---:
+--- 
+---public
+--- 
+---IOService
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function
|   |   +---
First one
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-#ifdef (HAS STATE)
|   |   +--- 
|   |   +---LP64
|   |   +---[ NEWLINE ]
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func
|   +---(
|   |   +---long
|   |   +--- 
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func64
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---        
|   +-*-int (HAS STATE)
|   +--- 
|   +---hidden_2
|   +---(
|   |   +---int
|   |   +--- 
|   |   +---this_function_should_not_appear_either
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function
|   |   +---
second one
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-#ifdef (HAS STATE)
|   |   +--- 
|   |   +---LP64
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func64
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func
|   +---(
|   |   +---long
|   |   +--- 
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---another_hidden_function
|   +---(
|   |   +---char
|   |   +--- 
|   |   +---*
|   |   +---this_function_also_should_not_appear
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
END OF OBJECT


OBJECT: first_func (HeaderDoc::Function)
+-*-char (HAS STATE)
+--- 
+---*
+---first_func
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---first_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---first_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-int (HAS STATE)
+--- 
+---hidden_2
+---(
|   +---int
|   +--- 
|   +---this_function_should_not_appear_either
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function
|   +---
second one
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-#ifdef (HAS STATE)
|   +--- 
|   +---LP64
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---another_hidden_function
+---(
|   +---char
|   +--- 
|   +---*
|   +---this_function_also_should_not_appear
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: second_func (HeaderDoc::Function)
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---another_hidden_function
+---(
|   +---char
|   +--- 
|   +---*
|   +---this_function_also_should_not_appear
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: foo (HeaderDoc::CPPClass)
	<span class="keyword">class</span> <!-- a logicalPath="//test_ref/cpp/cl/foo //test_ref/cpp/tdef/foo //test_ref/cpp/tag/foo //test_ref/cpp/econst/foo //test_ref/cpp/struct/foo //test_ref/cpp/clconst/foo //test_ref/cpp/intf/foo" --><span class="type">foo</span><!-- /a --> : <span class="keyword">public</span> <!-- a logicalPath="//test_ref/cpp/cl/IOService //test_ref/cpp/tdef/IOService //test_ref/cpp/tag/IOService //test_ref/cpp/econst/IOService //test_ref/cpp/struct/IOService //test_ref/cpp/clconst/IOService //test_ref/cpp/intf/IOService" --><span class="type">IOService</span><!-- /a --> { 
	    <span class="comment">/*! @function
	First one</span>
	        <span class="comment">*/</span>
	    <span class="">#ifdef</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/cpp/cl/LP64 //test_ref/cpp/tdef/LP64 //test_ref/cpp/tag/LP64 //test_ref/cpp/econst/LP64 //test_ref/cpp/struct/LP64 //test_ref/cpp/data/LP64 //test_ref/cpp/clconst/LP64 //test_ref/cpp/intf/LP64 //test_ref/cpp/instm/LP64 //test_ref/cpp/clm/LP64 //test_ref/cpp/intfcm/LP64 //test_ref/cpp/intfm/LP64 //test_ref/cpp/func/LP64 //test_ref/cpp/ftmplt/LP64 //test_ref/cpp/defn/LP64 //test_ref/cpp/macro/LP64 //test_ref/doc/com/intfm/LP64" --><span class="preprocessor">LP64</span><!-- /a --> 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/first_func //test_ref/cpp/clm/first_func //test_ref/cpp/intfcm/first_func //test_ref/cpp/intfm/first_func //test_ref/cpp/func/first_func //test_ref/cpp/ftmplt/first_func //test_ref/cpp/defn/first_func //test_ref/cpp/macro/first_func" --><span class="function">first_func</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
	    <span class="">#else</span> 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/first_func //test_ref/cpp/clm/first_func //test_ref/cpp/intfcm/first_func //test_ref/cpp/intfm/first_func //test_ref/cpp/func/first_func //test_ref/cpp/ftmplt/first_func //test_ref/cpp/defn/first_func //test_ref/cpp/macro/first_func" --><span class="function">first_func</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/long //test_ref/cpp/tdef/long //test_ref/cpp/tag/long //test_ref/cpp/econst/long //test_ref/cpp/struct/long //test_ref/cpp/clconst/long //test_ref/cpp/intf/long" --><span class="type">long</span><!-- /a --> <span class="param">x</span>); 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/first_func64 //test_ref/cpp/clm/first_func64 //test_ref/cpp/intfcm/first_func64 //test_ref/cpp/intfm/first_func64 //test_ref/cpp/func/first_func64 //test_ref/cpp/ftmplt/first_func64 //test_ref/cpp/defn/first_func64 //test_ref/cpp/macro/first_func64" --><span class="function">first_func64</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
	    <span class="">#endif</span>    
	    <!-- a logicalPath="//test_ref/cpp/cl/int //test_ref/cpp/tdef/int //test_ref/cpp/tag/int //test_ref/cpp/econst/int //test_ref/cpp/struct/int //test_ref/cpp/clconst/int //test_ref/cpp/intf/int" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/hidden_2 //test_ref/cpp/clm/hidden_2 //test_ref/cpp/intfcm/hidden_2 //test_ref/cpp/intfm/hidden_2 //test_ref/cpp/func/hidden_2 //test_ref/cpp/ftmplt/hidden_2 //test_ref/cpp/defn/hidden_2 //test_ref/cpp/macro/hidden_2" --><span class="function">hidden_2</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/int //test_ref/cpp/tdef/int //test_ref/cpp/tag/int //test_ref/cpp/econst/int //test_ref/cpp/struct/int //test_ref/cpp/clconst/int //test_ref/cpp/intf/int" --><span class="type">int</span><!-- /a --> <span class="param">this_function_should_not_appear_either</span>);  
	    <span class="comment">/*! @function
	second one</span>
	        <span class="comment">*/</span>
	    <span class="">#ifdef</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/cpp/cl/LP64 //test_ref/cpp/tdef/LP64 //test_ref/cpp/tag/LP64 //test_ref/cpp/econst/LP64 //test_ref/cpp/struct/LP64 //test_ref/cpp/data/LP64 //test_ref/cpp/clconst/LP64 //test_ref/cpp/intf/LP64 //test_ref/cpp/instm/LP64 //test_ref/cpp/clm/LP64 //test_ref/cpp/intfcm/LP64 //test_ref/cpp/intfm/LP64 //test_ref/cpp/func/LP64 //test_ref/cpp/ftmplt/LP64 //test_ref/cpp/defn/LP64 //test_ref/cpp/macro/LP64 //test_ref/doc/com/intfm/LP64" --><span class="preprocessor">LP64</span><!-- /a --> 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/second_func //test_ref/cpp/clm/second_func //test_ref/cpp/intfcm/second_func //test_ref/cpp/intfm/second_func //test_ref/cpp/func/second_func //test_ref/cpp/ftmplt/second_func //test_ref/cpp/defn/second_func //test_ref/cpp/macro/second_func" --><span class="function">second_func</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
	    <span class="">#else</span> 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/second_func64 //test_ref/cpp/clm/second_func64 //test_ref/cpp/intfcm/second_func64 //test_ref/cpp/intfm/second_func64 //test_ref/cpp/func/second_func64 //test_ref/cpp/ftmplt/second_func64 //test_ref/cpp/defn/second_func64 //test_ref/cpp/macro/second_func64" --><span class="function">second_func64</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/second_func //test_ref/cpp/clm/second_func //test_ref/cpp/intfcm/second_func //test_ref/cpp/intfm/second_func //test_ref/cpp/func/second_func //test_ref/cpp/ftmplt/second_func //test_ref/cpp/defn/second_func //test_ref/cpp/macro/second_func" --><span class="function">second_func</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/long //test_ref/cpp/tdef/long //test_ref/cpp/tag/long //test_ref/cpp/econst/long //test_ref/cpp/struct/long //test_ref/cpp/clconst/long //test_ref/cpp/intf/long" --><span class="type">long</span><!-- /a --> <span class="param">x</span>); 
	    <span class="">#endif</span>   
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/another_hidden_function //test_ref/cpp/clm/another_hidden_function //test_ref/cpp/intfcm/another_hidden_function //test_ref/cpp/intfm/another_hidden_function //test_ref/cpp/func/another_hidden_function //test_ref/cpp/ftmplt/another_hidden_function //test_ref/cpp/defn/another_hidden_function //test_ref/cpp/macro/another_hidden_function" --><span class="function">another_hidden_function</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><span class="param">this_function_also_should_not_appear</span>); 
	};  
END OF OBJECT


OBJECT: first_func (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/first_func //test_ref/cpp/clm/first_func //test_ref/cpp/intfcm/first_func //test_ref/cpp/intfm/first_func //test_ref/cpp/func/first_func //test_ref/cpp/ftmplt/first_func //test_ref/cpp/defn/first_func //test_ref/cpp/macro/first_func" --><span class="function">first_func</span><!-- /a -->(
	    <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
END OF OBJECT


OBJECT: second_func (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/second_func //test_ref/cpp/clm/second_func //test_ref/cpp/intfcm/second_func //test_ref/cpp/intfm/second_func //test_ref/cpp/func/second_func //test_ref/cpp/ftmplt/second_func //test_ref/cpp/defn/second_func //test_ref/cpp/macro/second_func" --><span class="function">second_func</span><!-- /a -->(
	    <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
END OF OBJECT



$55463|-=: TOP LEVEL COMMENT PARSE VALUES :=-
inHeader: 0
inClass: 0
inInterface: 0
inCPPHeader: 0
inOCCHeader: 0
inPerlScript: 0
inShellScript: 0
inPHPScript: 0
inJavaSource: 0
inFunctionGroup: 0
inGroup: 0
inFunction: 0
inPDefine: 0
inTypedef: 0
inUnion: 0
inStruct: 0
inConstant: 0
inVar: 0
inEnum: 0
inMethod: 0
inAvailabilityMacro: 0
inUnknown: 1
classType: unknown
inputCounter: 0
blockOffset: 0
fullpath: /test_suite_bogus_path/function_block_6.test
-=: BLOCKPARSE PARSER STATE KEYS :=-
$parserState->{FULLPATH} => /test_suite_bogus_path/function_block_6.test
$parserState->{ISFORWARDDECLARATION} => 0
$parserState->{NEXTTOKENNOCPP} => 0
$parserState->{availability} => 
$parserState->{backslashcount} => 0
$parserState->{basetype} => 
$parserState->{bracePending} => 0
$parserState->{callbackIsTypedef} => 0
$parserState->{callbackName} => 
$parserState->{callbackNamePending} => -1
$parserState->{categoryClass} => 
$parserState->{classNameFound} => 1
$parserState->{classtype} => class
$parserState->{forceClassDone} => 1
$parserState->{forceClassName} => foo
$parserState->{forceClassSuper} =>  public IOService 
$parserState->{freezeStack} => ARRAY(OBJID)
$parserState->{freezereturn} => 1
$parserState->{frozensodname} => 
$parserState->{functionReturnsCallback} => 0
$parserState->{hollow} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{inBrackets} => 0
$parserState->{inChar} => 0
$parserState->{inClass} => 1
$parserState->{inComment} => 0
$parserState->{inInlineComment} => 0
$parserState->{inMacro} => 0
$parserState->{inMacroLine} => 0
$parserState->{inOperator} => 0
$parserState->{inPrivateParamTypes} => 0
$parserState->{inString} => 0
$parserState->{inTemplate} => 0
$parserState->{initbsCount} => 0
$parserState->{inputCounter} => 23
$parserState->{kr_c_function} => 0
$parserState->{kr_c_name} => 
$parserState->{lang} => C
$parserState->{lastTreeNode} => HeaderDoc::ParseTree=HASH(OBJID)
$parserState->{lastsymbol} => ;
$parserState->{macroNoTrunc} => 1
$parserState->{name} => 
$parserState->{namePending} => 0
$parserState->{noInsert} => 0
$parserState->{occmethod} => 0
$parserState->{occmethodname} => 
$parserState->{occparmlabelfound} => 4
$parserState->{onlyComments} => 0
$parserState->{parsedParamList} => ARRAY(OBJID)
$parserState->{parsedParamParse} => 1
$parserState->{posstypes} => 
$parserState->{posstypesPending} => 0
$parserState->{pplStack} => ARRAY(OBJID)
$parserState->{preEqualsSymbol} => 
$parserState->{preTemplateSymbol} => 
$parserState->{preclasssodtype} => class
$parserState->{prekeywordsodname} => 
$parserState->{prekeywordsodtype} => 
$parserState->{returntype} => class foo : public IOService  
$parserState->{seenBraces} => 0
$parserState->{seenMacroPart} => 0
$parserState->{seenTilde} => 0
$parserState->{simpleTDcontents} => 
$parserState->{simpleTypedef} => 0
$parserState->{sodclass} => class
$parserState->{sodname} => IOService
$parserState->{sodtype} =>  public
$parserState->{sodtypeclasstoken} => class
$parserState->{stackFrozen} => 0
$parserState->{startOfDec} => 1
$parserState->{storeDec} => 
$parserState->{temponlyComments} => 0
$parserState->{treePopTwo} => 0
$parserState->{typestring} => foo
$parserState->{value} => 
$parserState->{valuepending} => 0
-=: BLOCKPARSE RETURN VALUES :=-
newcount: 23
typelist: class
namelist: foo
posstypes:   IOService 
value: 
returntype: public
pridec: 
simpleTDcontents: 
bpavail: 
blockOffset: 4
conformsToList: 
functionContents: 
extendsClass: 
implementsClass: 
-=: LIST OF PARSED PARAMETERS :=-
-=: DUMP OF PARSE TREE :=-
+---class
+--- 
+---foo
+--- 
+---:
+--- 
+---public
+--- 
+---IOService
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function
|   |   +---
First one
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-#ifdef (HAS STATE)
|   |   +--- 
|   |   +---LP64
|   |   +---[ NEWLINE ]
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func
|   +---(
|   |   +---long
|   |   +--- 
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func64
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---        
|   +-*-int (HAS STATE)
|   +--- 
|   +---hidden_2
|   +---(
|   |   +---int
|   |   +--- 
|   |   +---this_function_should_not_appear_either
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function
|   |   +---
second one
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-#ifdef (HAS STATE)
|   |   +--- 
|   |   +---LP64
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func64
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func
|   +---(
|   |   +---long
|   |   +--- 
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---another_hidden_function
|   +---(
|   |   +---char
|   |   +--- 
|   |   +---*
|   |   +---this_function_also_should_not_appear
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
-=: COMPUTED VALUE :=-
SUCCESS: 0
VALUE: 0
-=: CPP CHANGES :=-
NO CPP CHANGES
-=: FOUND MATCH :=-
1
-=: NAMED OBJECTS :=-
TREE COUNT: 0
INDEX GROUP: 
IS BLOCK: 
OBJECT TYPE: HeaderDoc::Header
NAME: function block 6
APIUID: //test_ref/doc/header/function_block_6.test
ABSTRACT: ""
DISCUSSION: "<p></p>"
UPDATED: ""
COPYRIGHT: ""
HTMLMETA: ""
PRIVATEDECLARATION: ""
GROUP: ""
INDEXGROUP: ""
THROWS: ""
XMLTHROWS: ""
UPDATED: ""
LINKAGESTATE: ""
ACCESSCONTROL: ""
AVAILABILITY: ""
LINKUID: ""
ORIGCLASS: ""
ISDEFINE: ""
ISTEMPLATE: ""
VALUE: "UNKNOWN"
RETURNTYPE: ""
LINENUM: ""
CLASS: "HeaderDoc::Header"
MASTERENUM: ""
APIREFSETUPDONE: "1"
TPCDONE: ""
NOREGISTERUID: ""
SUPPRESSCHILDREN: ""
NAMELINE_DISCUSSION: ""
HIDEDOC: ""
HIDESINGLETONS: ""
HIDECONTENTS: ""
MAINOBJECT: ""
LIST ATTRIBUTES: 
SHORT ATTRIBUTES: <p></p>
LONG ATTRIBUTES: <p></p>
    TREE COUNT: 1
    INDEX GROUP: 
    IS BLOCK: 
    OBJECT TYPE: HeaderDoc::CPPClass
    NAME: foo
    APIUID: 
    ABSTRACT: ""
    DISCUSSION: "<p>This is a class. "
    UPDATED: ""
    COPYRIGHT: ""
    HTMLMETA: ""
    PRIVATEDECLARATION: ""
    GROUP: ""
    INDEXGROUP: ""
    THROWS: ""
    XMLTHROWS: ""
    UPDATED: ""
    LINKAGESTATE: ""
    ACCESSCONTROL: ""
    AVAILABILITY: ""
    LINKUID: ""
    ORIGCLASS: ""
    ISDEFINE: ""
    ISTEMPLATE: ""
    VALUE: "UNKNOWN"
    RETURNTYPE: ""
    LINENUM: ""
    CLASS: "HeaderDoc::CPPClass"
    MASTERENUM: ""
    APIREFSETUPDONE: "1"
    TPCDONE: ""
    NOREGISTERUID: ""
    SUPPRESSCHILDREN: "1"
    NAMELINE_DISCUSSION: ""
    HIDEDOC: ""
    HIDESINGLETONS: ""
    HIDECONTENTS: ""
    MAINOBJECT: ""
    LIST ATTRIBUTES: 
    SHORT ATTRIBUTES: <p><b>Superclass:</b> <!-- a logicalPath="//test_ref/cpp/cl/IOService //test_ref/cpp/tdef/IOService //test_ref/cpp/tag/IOService //test_ref/cpp/econst/IOService //test_ref/cpp/struct/IOService //test_ref/cpp/data/IOService //test_ref/cpp/clconst/IOService //test_ref/cpp/intf/IOService //test_ref/cpp/instm/IOService //test_ref/cpp/clm/IOService //test_ref/cpp/intfcm/IOService //test_ref/cpp/intfm/IOService //test_ref/cpp/func/IOService //test_ref/cpp/ftmplt/IOService //test_ref/cpp/defn/IOService //test_ref/cpp/macro/IOService //test_ref/doc/com/intfm/IOService" -->IOService<!-- /a --><br>
<b>Declared In:</b> <a href="../../index.html" target="_top">function block 6</a><br>
</p>
    LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: first_func
        APIUID: //test_ref/cpp/instm/foo/first_func/char*/(void*)
        ABSTRACT: ""
        DISCUSSION: "<p>First one
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " char *"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: x
            TYPE: void *
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: first_func
        APIUID: //test_ref/cpp/instm/foo/first_func/char*/(long)
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " char *"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "1"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: x
            TYPE: long
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: first_func64
        APIUID: //test_ref/cpp/instm/foo/first_func64/char*/(void*)
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " char *"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "1"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: x
            TYPE: void *
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: hidden_2
        APIUID: //test_ref/cpp/instm/foo/hidden_2/int/(int)
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " int"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "1"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: this_function_should_not_appear_either
            TYPE: int
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: second_func
        APIUID: //test_ref/cpp/instm/foo/second_func/char*/(void*)
        ABSTRACT: ""
        DISCUSSION: "<p>second one
"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " char *"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "0"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: x
            TYPE: void *
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: second_func64
        APIUID: //test_ref/cpp/instm/foo/second_func64/char*/(void*)
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " char *"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "1"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: x
            TYPE: void *
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: second_func
        APIUID: //test_ref/cpp/instm/foo/second_func/char*/(long)
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " char *"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "1"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: x
            TYPE: long
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
        TREE COUNT: 1
        INDEX GROUP: 
        IS BLOCK: 
        OBJECT TYPE: HeaderDoc::Function
        NAME: another_hidden_function
        APIUID: //test_ref/cpp/instm/foo/another_hidden_function/char*/(char*)
        ABSTRACT: ""
        DISCUSSION: "<p></p>"
        UPDATED: ""
        COPYRIGHT: ""
        HTMLMETA: ""
        PRIVATEDECLARATION: ""
        GROUP: ""
        INDEXGROUP: ""
        THROWS: ""
        XMLTHROWS: ""
        UPDATED: ""
        LINKAGESTATE: ""
        ACCESSCONTROL: "public"
        AVAILABILITY: ""
        LINKUID: ""
        ORIGCLASS: ""
        ISDEFINE: ""
        ISTEMPLATE: ""
        VALUE: "UNKNOWN"
        RETURNTYPE: " char *"
        LINENUM: ""
        CLASS: "HeaderDoc::Function"
        MASTERENUM: ""
        APIREFSETUPDONE: "1"
        TPCDONE: ""
        NOREGISTERUID: ""
        SUPPRESSCHILDREN: "1"
        NAMELINE_DISCUSSION: ""
        HIDEDOC: ""
        HIDESINGLETONS: ""
        HIDECONTENTS: ""
        MAINOBJECT: ""
        LIST ATTRIBUTES: 
        SHORT ATTRIBUTES: <p></p>
        LONG ATTRIBUTES: <p></p>
        PARSED PARAMETERS:
            TREE COUNT: 0
            INDEX GROUP: 
            IS BLOCK: 
            OBJECT TYPE: HeaderDoc::MinorAPIElement
            NAME: this_function_also_should_not_appear
            TYPE: char *
            APIUID: 
            ABSTRACT: ""
            DISCUSSION: "<p></p>"
            UPDATED: ""
            COPYRIGHT: ""
            HTMLMETA: ""
            PRIVATEDECLARATION: ""
            GROUP: ""
            INDEXGROUP: ""
            THROWS: ""
            XMLTHROWS: ""
            UPDATED: ""
            LINKAGESTATE: ""
            ACCESSCONTROL: ""
            AVAILABILITY: ""
            LINKUID: ""
            ORIGCLASS: ""
            ISDEFINE: ""
            ISTEMPLATE: ""
            VALUE: "UNKNOWN"
            RETURNTYPE: ""
            LINENUM: ""
            CLASS: "HeaderDoc::MinorAPIElement"
            MASTERENUM: ""
            APIREFSETUPDONE: "1"
            TPCDONE: ""
            NOREGISTERUID: ""
            SUPPRESSCHILDREN: ""
            NAMELINE_DISCUSSION: ""
            HIDEDOC: ""
            HIDESINGLETONS: ""
            HIDECONTENTS: ""
            MAINOBJECT: ""
            LIST ATTRIBUTES: 
            SHORT ATTRIBUTES: <p></p>
            LONG ATTRIBUTES: <p></p>
-=: NAMED OBJECT PARSE TREES :=-
OBJECT: foo (HeaderDoc::CPPClass)
+---class
+--- 
+---foo
+--- 
+---:
+--- 
+---public
+--- 
+---IOService
+---[ NEWLINE ]
+---{
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function
|   |   +---
First one
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-#ifdef (HAS STATE)
|   |   +--- 
|   |   +---LP64
|   |   +---[ NEWLINE ]
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func
|   +---(
|   |   +---long
|   |   +--- 
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---first_func64
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---        
|   +-*-int (HAS STATE)
|   +--- 
|   +---hidden_2
|   +---(
|   |   +---int
|   |   +--- 
|   |   +---this_function_should_not_appear_either
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---/*
|   |   +---!
|   |   +--- @function
|   |   +---
second one
|   |   +---[ NEWLINE ]
|   |   +---*/
|   +---[ NEWLINE ]
|   +-*-#ifdef (HAS STATE)
|   |   +--- 
|   |   +---LP64
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#else (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func64
|   +---(
|   |   +---void
|   |   +--- 
|   |   +---*
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---second_func
|   +---(
|   |   +---long
|   |   +--- 
|   |   +---x
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +-*-#endif (HAS STATE)
|   |   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---[ NEWLINE ]
|   +---        
|   +-*-char (HAS STATE)
|   +--- 
|   +---*
|   +---another_hidden_function
|   +---(
|   |   +---char
|   |   +--- 
|   |   +---*
|   |   +---this_function_also_should_not_appear
|   |   +---)
|   +---;
|   +--- 
|   +---[ NEWLINE ]
|   +---}
+---;
+--- 
+---[ NEWLINE ]
END OF OBJECT


OBJECT: first_func (HeaderDoc::Function)
+-*-char (HAS STATE)
+--- 
+---*
+---first_func
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---first_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---first_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-int (HAS STATE)
+--- 
+---hidden_2
+---(
|   +---int
|   +--- 
|   +---this_function_should_not_appear_either
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function
|   +---
second one
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-#ifdef (HAS STATE)
|   +--- 
|   +---LP64
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---another_hidden_function
+---(
|   +---char
|   +--- 
|   +---*
|   +---this_function_also_should_not_appear
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: first_func (HeaderDoc::Function)
+-*-char (HAS STATE)
+--- 
+---*
+---first_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---first_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-int (HAS STATE)
+--- 
+---hidden_2
+---(
|   +---int
|   +--- 
|   +---this_function_should_not_appear_either
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function
|   +---
second one
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-#ifdef (HAS STATE)
|   +--- 
|   +---LP64
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---another_hidden_function
+---(
|   +---char
|   +--- 
|   +---*
|   +---this_function_also_should_not_appear
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: first_func64 (HeaderDoc::Function)
+-*-char (HAS STATE)
+--- 
+---*
+---first_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-int (HAS STATE)
+--- 
+---hidden_2
+---(
|   +---int
|   +--- 
|   +---this_function_should_not_appear_either
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function
|   +---
second one
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-#ifdef (HAS STATE)
|   +--- 
|   +---LP64
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---another_hidden_function
+---(
|   +---char
|   +--- 
|   +---*
|   +---this_function_also_should_not_appear
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: hidden_2 (HeaderDoc::Function)
+-*-int (HAS STATE)
+--- 
+---hidden_2
+---(
|   +---int
|   +--- 
|   +---this_function_should_not_appear_either
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---[ NEWLINE ]
+---/*
|   +---!
|   +--- @function
|   +---
second one
|   +---[ NEWLINE ]
|   +---*/
+---[ NEWLINE ]
+-*-#ifdef (HAS STATE)
|   +--- 
|   +---LP64
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---another_hidden_function
+---(
|   +---char
|   +--- 
|   +---*
|   +---this_function_also_should_not_appear
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: second_func (HeaderDoc::Function)
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#else (HAS STATE)
|   +---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---another_hidden_function
+---(
|   +---char
|   +--- 
|   +---*
|   +---this_function_also_should_not_appear
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: second_func64 (HeaderDoc::Function)
+-*-char (HAS STATE)
+--- 
+---*
+---second_func64
+---(
|   +---void
|   +--- 
|   +---*
|   +---x
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---another_hidden_function
+---(
|   +---char
|   +--- 
|   +---*
|   +---this_function_also_should_not_appear
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: second_func (HeaderDoc::Function)
+-*-char (HAS STATE)
+--- 
+---*
+---second_func
+---(
|   +---long
|   +--- 
|   +---x
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+-*-#endif (HAS STATE)
|   +---[ NEWLINE ]
+---[ NEWLINE ]
+---[ NEWLINE ]
+---        
+-*-char (HAS STATE)
+--- 
+---*
+---another_hidden_function
+---(
|   +---char
|   +--- 
|   +---*
|   +---this_function_also_should_not_appear
|   +---)
+---;
+--- 
+---[ NEWLINE ]
+---}
END OF OBJECT


OBJECT: another_hidden_function (HeaderDoc::Function)
+-*-char (HAS STATE)
+--- 
+---*
+---another_hidden_function
+---(
|   +---char
|   +--- 
|   +---*
|   +---this_function_also_should_not_appear
|   +---)
+---;
+--- 
-=-=-=-=-=-=- EODEC -=-=-=-=-=-=-
+---[ NEWLINE ]
+---}
END OF OBJECT



-=: HTML OUTPUT OF PARSE TREES :=-
OBJECT: foo (HeaderDoc::CPPClass)
	<span class="keyword">class</span> <!-- a logicalPath="//test_ref/cpp/cl/foo //test_ref/cpp/tdef/foo //test_ref/cpp/tag/foo //test_ref/cpp/econst/foo //test_ref/cpp/struct/foo //test_ref/cpp/clconst/foo //test_ref/cpp/intf/foo" --><span class="type">foo</span><!-- /a --> : <span class="keyword">public</span> <!-- a logicalPath="//test_ref/cpp/cl/IOService //test_ref/cpp/tdef/IOService //test_ref/cpp/tag/IOService //test_ref/cpp/econst/IOService //test_ref/cpp/struct/IOService //test_ref/cpp/clconst/IOService //test_ref/cpp/intf/IOService" --><span class="type">IOService</span><!-- /a --> { 
	    <span class="comment">/*! @function
	First one</span>
	        <span class="comment">*/</span>
	    <span class="">#ifdef</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/cpp/cl/LP64 //test_ref/cpp/tdef/LP64 //test_ref/cpp/tag/LP64 //test_ref/cpp/econst/LP64 //test_ref/cpp/struct/LP64 //test_ref/cpp/data/LP64 //test_ref/cpp/clconst/LP64 //test_ref/cpp/intf/LP64 //test_ref/cpp/instm/LP64 //test_ref/cpp/clm/LP64 //test_ref/cpp/intfcm/LP64 //test_ref/cpp/intfm/LP64 //test_ref/cpp/func/LP64 //test_ref/cpp/ftmplt/LP64 //test_ref/cpp/defn/LP64 //test_ref/cpp/macro/LP64 //test_ref/doc/com/intfm/LP64" --><span class="preprocessor">LP64</span><!-- /a --> 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/first_func //test_ref/cpp/clm/first_func //test_ref/cpp/intfcm/first_func //test_ref/cpp/intfm/first_func //test_ref/cpp/func/first_func //test_ref/cpp/ftmplt/first_func //test_ref/cpp/defn/first_func //test_ref/cpp/macro/first_func" --><span class="function">first_func</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
	    <span class="">#else</span> 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/first_func //test_ref/cpp/clm/first_func //test_ref/cpp/intfcm/first_func //test_ref/cpp/intfm/first_func //test_ref/cpp/func/first_func //test_ref/cpp/ftmplt/first_func //test_ref/cpp/defn/first_func //test_ref/cpp/macro/first_func" --><span class="function">first_func</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/long //test_ref/cpp/tdef/long //test_ref/cpp/tag/long //test_ref/cpp/econst/long //test_ref/cpp/struct/long //test_ref/cpp/clconst/long //test_ref/cpp/intf/long" --><span class="type">long</span><!-- /a --> <span class="param">x</span>); 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/first_func64 //test_ref/cpp/clm/first_func64 //test_ref/cpp/intfcm/first_func64 //test_ref/cpp/intfm/first_func64 //test_ref/cpp/func/first_func64 //test_ref/cpp/ftmplt/first_func64 //test_ref/cpp/defn/first_func64 //test_ref/cpp/macro/first_func64" --><span class="function">first_func64</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
	    <span class="">#endif</span>    
	    <!-- a logicalPath="//test_ref/cpp/cl/int //test_ref/cpp/tdef/int //test_ref/cpp/tag/int //test_ref/cpp/econst/int //test_ref/cpp/struct/int //test_ref/cpp/clconst/int //test_ref/cpp/intf/int" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/hidden_2 //test_ref/cpp/clm/hidden_2 //test_ref/cpp/intfcm/hidden_2 //test_ref/cpp/intfm/hidden_2 //test_ref/cpp/func/hidden_2 //test_ref/cpp/ftmplt/hidden_2 //test_ref/cpp/defn/hidden_2 //test_ref/cpp/macro/hidden_2" --><span class="function">hidden_2</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/int //test_ref/cpp/tdef/int //test_ref/cpp/tag/int //test_ref/cpp/econst/int //test_ref/cpp/struct/int //test_ref/cpp/clconst/int //test_ref/cpp/intf/int" --><span class="type">int</span><!-- /a --> <span class="param">this_function_should_not_appear_either</span>);  
	    <span class="comment">/*! @function
	second one</span>
	        <span class="comment">*/</span>
	    <span class="">#ifdef</span><span class="preprocessor"> </span><!-- a logicalPath="//test_ref/cpp/cl/LP64 //test_ref/cpp/tdef/LP64 //test_ref/cpp/tag/LP64 //test_ref/cpp/econst/LP64 //test_ref/cpp/struct/LP64 //test_ref/cpp/data/LP64 //test_ref/cpp/clconst/LP64 //test_ref/cpp/intf/LP64 //test_ref/cpp/instm/LP64 //test_ref/cpp/clm/LP64 //test_ref/cpp/intfcm/LP64 //test_ref/cpp/intfm/LP64 //test_ref/cpp/func/LP64 //test_ref/cpp/ftmplt/LP64 //test_ref/cpp/defn/LP64 //test_ref/cpp/macro/LP64 //test_ref/doc/com/intfm/LP64" --><span class="preprocessor">LP64</span><!-- /a --> 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/second_func //test_ref/cpp/clm/second_func //test_ref/cpp/intfcm/second_func //test_ref/cpp/intfm/second_func //test_ref/cpp/func/second_func //test_ref/cpp/ftmplt/second_func //test_ref/cpp/defn/second_func //test_ref/cpp/macro/second_func" --><span class="function">second_func</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
	    <span class="">#else</span> 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/second_func64 //test_ref/cpp/clm/second_func64 //test_ref/cpp/intfcm/second_func64 //test_ref/cpp/intfm/second_func64 //test_ref/cpp/func/second_func64 //test_ref/cpp/ftmplt/second_func64 //test_ref/cpp/defn/second_func64 //test_ref/cpp/macro/second_func64" --><span class="function">second_func64</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/second_func //test_ref/cpp/clm/second_func //test_ref/cpp/intfcm/second_func //test_ref/cpp/intfm/second_func //test_ref/cpp/func/second_func //test_ref/cpp/ftmplt/second_func //test_ref/cpp/defn/second_func //test_ref/cpp/macro/second_func" --><span class="function">second_func</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/long //test_ref/cpp/tdef/long //test_ref/cpp/tag/long //test_ref/cpp/econst/long //test_ref/cpp/struct/long //test_ref/cpp/clconst/long //test_ref/cpp/intf/long" --><span class="type">long</span><!-- /a --> <span class="param">x</span>); 
	    <span class="">#endif</span>   
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/another_hidden_function //test_ref/cpp/clm/another_hidden_function //test_ref/cpp/intfcm/another_hidden_function //test_ref/cpp/intfm/another_hidden_function //test_ref/cpp/func/another_hidden_function //test_ref/cpp/ftmplt/another_hidden_function //test_ref/cpp/defn/another_hidden_function //test_ref/cpp/macro/another_hidden_function" --><span class="function">another_hidden_function</span><!-- /a -->(
	        <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><span class="param">this_function_also_should_not_appear</span>); 
	};  
END OF OBJECT


OBJECT: first_func (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/first_func //test_ref/cpp/clm/first_func //test_ref/cpp/intfcm/first_func //test_ref/cpp/intfm/first_func //test_ref/cpp/func/first_func //test_ref/cpp/ftmplt/first_func //test_ref/cpp/defn/first_func //test_ref/cpp/macro/first_func" --><span class="function">first_func</span><!-- /a -->(
	    <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
END OF OBJECT


OBJECT: first_func (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/first_func //test_ref/cpp/clm/first_func //test_ref/cpp/intfcm/first_func //test_ref/cpp/intfm/first_func //test_ref/cpp/func/first_func //test_ref/cpp/ftmplt/first_func //test_ref/cpp/defn/first_func //test_ref/cpp/macro/first_func" --><span class="function">first_func</span><!-- /a -->(
	    <!-- a logicalPath="//test_ref/cpp/cl/long //test_ref/cpp/tdef/long //test_ref/cpp/tag/long //test_ref/cpp/econst/long //test_ref/cpp/struct/long //test_ref/cpp/clconst/long //test_ref/cpp/intf/long" --><span class="type">long</span><!-- /a --> <span class="param">x</span>); 
END OF OBJECT


OBJECT: first_func64 (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/first_func64 //test_ref/cpp/clm/first_func64 //test_ref/cpp/intfcm/first_func64 //test_ref/cpp/intfm/first_func64 //test_ref/cpp/func/first_func64 //test_ref/cpp/ftmplt/first_func64 //test_ref/cpp/defn/first_func64 //test_ref/cpp/macro/first_func64" --><span class="function">first_func64</span><!-- /a -->(
	    <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
END OF OBJECT


OBJECT: hidden_2 (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/int //test_ref/cpp/tdef/int //test_ref/cpp/tag/int //test_ref/cpp/econst/int //test_ref/cpp/struct/int //test_ref/cpp/clconst/int //test_ref/cpp/intf/int" --><span class="type">int</span><!-- /a --> <!-- a logicalPath="//test_ref/cpp/instm/hidden_2 //test_ref/cpp/clm/hidden_2 //test_ref/cpp/intfcm/hidden_2 //test_ref/cpp/intfm/hidden_2 //test_ref/cpp/func/hidden_2 //test_ref/cpp/ftmplt/hidden_2 //test_ref/cpp/defn/hidden_2 //test_ref/cpp/macro/hidden_2" --><span class="function">hidden_2</span><!-- /a -->(
	    <!-- a logicalPath="//test_ref/cpp/cl/int //test_ref/cpp/tdef/int //test_ref/cpp/tag/int //test_ref/cpp/econst/int //test_ref/cpp/struct/int //test_ref/cpp/clconst/int //test_ref/cpp/intf/int" --><span class="type">int</span><!-- /a --> <span class="param">this_function_should_not_appear_either</span>); 
END OF OBJECT


OBJECT: second_func (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/second_func //test_ref/cpp/clm/second_func //test_ref/cpp/intfcm/second_func //test_ref/cpp/intfm/second_func //test_ref/cpp/func/second_func //test_ref/cpp/ftmplt/second_func //test_ref/cpp/defn/second_func //test_ref/cpp/macro/second_func" --><span class="function">second_func</span><!-- /a -->(
	    <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
END OF OBJECT


OBJECT: second_func64 (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/second_func64 //test_ref/cpp/clm/second_func64 //test_ref/cpp/intfcm/second_func64 //test_ref/cpp/intfm/second_func64 //test_ref/cpp/func/second_func64 //test_ref/cpp/ftmplt/second_func64 //test_ref/cpp/defn/second_func64 //test_ref/cpp/macro/second_func64" --><span class="function">second_func64</span><!-- /a -->(
	    <!-- a logicalPath="//test_ref/cpp/cl/void //test_ref/cpp/tdef/void //test_ref/cpp/tag/void //test_ref/cpp/econst/void //test_ref/cpp/struct/void //test_ref/cpp/clconst/void //test_ref/cpp/intf/void" --><span class="type">void</span><!-- /a --> <span class="type">*</span><span class="param">x</span>); 
END OF OBJECT


OBJECT: second_func (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/second_func //test_ref/cpp/clm/second_func //test_ref/cpp/intfcm/second_func //test_ref/cpp/intfm/second_func //test_ref/cpp/func/second_func //test_ref/cpp/ftmplt/second_func //test_ref/cpp/defn/second_func //test_ref/cpp/macro/second_func" --><span class="function">second_func</span><!-- /a -->(
	    <!-- a logicalPath="//test_ref/cpp/cl/long //test_ref/cpp/tdef/long //test_ref/cpp/tag/long //test_ref/cpp/econst/long //test_ref/cpp/struct/long //test_ref/cpp/clconst/long //test_ref/cpp/intf/long" --><span class="type">long</span><!-- /a --> <span class="param">x</span>); 
END OF OBJECT


OBJECT: another_hidden_function (HeaderDoc::Function)
	<!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><!-- a logicalPath="//test_ref/cpp/instm/another_hidden_function //test_ref/cpp/clm/another_hidden_function //test_ref/cpp/intfcm/another_hidden_function //test_ref/cpp/intfm/another_hidden_function //test_ref/cpp/func/another_hidden_function //test_ref/cpp/ftmplt/another_hidden_function //test_ref/cpp/defn/another_hidden_function //test_ref/cpp/macro/another_hidden_function" --><span class="function">another_hidden_function</span><!-- /a -->(
	    <!-- a logicalPath="//test_ref/cpp/cl/char //test_ref/cpp/tdef/char //test_ref/cpp/tag/char //test_ref/cpp/econst/char //test_ref/cpp/struct/char //test_ref/cpp/clconst/char //test_ref/cpp/intf/char" --><span class="type">char</span><!-- /a --> <span class="type">*</span><span class="param">this_function_also_should_not_appear</span>); 
END OF OBJECT



$1|C$6|parser